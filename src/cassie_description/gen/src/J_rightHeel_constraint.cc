/*
 * Automatically Generated from Mathematica.
 * Sun 7 Nov 2021 14:27:44 GMT-08:00
 */

#ifdef MATLAB_MEX_FILE
// No need to include header
#else
#include "J_rightHeel_constraint.hh"
#endif

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t243;
  double t488;
  double t588;
  double t501;
  double t590;
  double t404;
  double t435;
  double t460;
  double t474;
  double t287;
  double t310;
  double t640;
  double t676;
  double t682;
  double t689;
  double t576;
  double t592;
  double t596;
  double t739;
  double t763;
  double t769;
  double t778;
  double t793;
  double t828;
  double t850;
  double t875;
  double t877;
  double t913;
  double t980;
  double t986;
  double t992;
  double t1004;
  double t1011;
  double t1014;
  double t1021;
  double t1040;
  double t1049;
  double t1059;
  double t1107;
  double t1110;
  double t1118;
  double t1127;
  double t1132;
  double t1140;
  double t1144;
  double t1160;
  double t1162;
  double t1163;
  double t1198;
  double t1201;
  double t1216;
  double t1226;
  double t1236;
  double t1248;
  double t1298;
  double t1323;
  double t1324;
  double t1325;
  double t1340;
  double t1359;
  double t1368;
  double t1381;
  double t1389;
  double t1394;
  double t1398;
  double t1408;
  double t1413;
  double t1421;
  double t1461;
  double t1462;
  double t1464;
  double t324;
  double t326;
  double t469;
  double t480;
  double t482;
  double t652;
  double t659;
  double t664;
  double t669;
  double t714;
  double t718;
  double t730;
  double t1525;
  double t1526;
  double t1536;
  double t846;
  double t851;
  double t855;
  double t1509;
  double t1517;
  double t1520;
  double t1540;
  double t1545;
  double t1550;
  double t954;
  double t968;
  double t978;
  double t1017;
  double t1024;
  double t1038;
  double t1557;
  double t1559;
  double t1564;
  double t1595;
  double t1598;
  double t1600;
  double t1079;
  double t1098;
  double t1099;
  double t1143;
  double t1149;
  double t1159;
  double t1612;
  double t1614;
  double t1616;
  double t1619;
  double t1630;
  double t1635;
  double t1169;
  double t1172;
  double t1177;
  double t1252;
  double t1310;
  double t1316;
  double t1645;
  double t1646;
  double t1650;
  double t1670;
  double t1686;
  double t1688;
  double t1328;
  double t1334;
  double t1335;
  double t1395;
  double t1402;
  double t1404;
  double t1691;
  double t1692;
  double t1700;
  double t1704;
  double t1705;
  double t1706;
  double t1431;
  double t1433;
  double t1451;
  double t1712;
  double t1713;
  double t1716;
  double t1729;
  double t1732;
  double t1744;
  double t1812;
  double t1814;
  double t1817;
  double t1819;
  double t1823;
  double t1833;
  double t1848;
  double t1851;
  double t1853;
  double t1862;
  double t1874;
  double t1884;
  double t1904;
  double t1906;
  double t1907;
  double t1911;
  double t1917;
  double t1918;
  double t1929;
  double t1931;
  double t1932;
  double t1940;
  double t1942;
  double t1944;
  double t1950;
  double t1951;
  double t1952;
  double t1955;
  double t1957;
  double t1961;
  double t1965;
  double t1966;
  double t1968;
  double t2007;
  double t2009;
  double t2010;
  double t2014;
  double t2015;
  double t2020;
  double t2043;
  double t2044;
  double t2045;
  double t2054;
  double t2055;
  double t2056;
  double t2065;
  double t2067;
  double t2069;
  double t2077;
  double t2081;
  double t2087;
  double t2093;
  double t2094;
  double t2112;
  double t2118;
  double t2127;
  double t2129;
  double t2142;
  double t2145;
  double t2146;
  double t2153;
  double t2162;
  double t2163;
  double t2166;
  double t2168;
  double t2169;
  double t2224;
  double t2225;
  double t2229;
  double t2235;
  double t2237;
  double t2241;
  double t2268;
  double t2275;
  double t2281;
  double t2289;
  double t2292;
  double t2300;
  double t2311;
  double t2319;
  double t2327;
  double t2336;
  double t2344;
  double t2365;
  double t2369;
  double t2380;
  double t2382;
  double t2393;
  double t2396;
  double t2398;
  double t2402;
  double t2405;
  double t2410;
  double t2414;
  double t2416;
  double t2418;
  double t2430;
  double t2432;
  double t2438;
  double t2512;
  double t2514;
  double t2515;
  double t2536;
  double t2539;
  double t2548;
  double t2552;
  double t2553;
  double t2560;
  double t2565;
  double t2566;
  double t2573;
  double t2578;
  double t2581;
  double t2588;
  double t2604;
  double t2607;
  double t2616;
  double t2620;
  double t2625;
  double t2626;
  double t2637;
  double t2639;
  double t2641;
  double t2646;
  double t2653;
  double t2654;
  double t2709;
  double t2719;
  double t2720;
  double t2729;
  double t2732;
  double t2736;
  double t2754;
  double t2755;
  double t2762;
  double t2766;
  double t2778;
  double t2787;
  double t2790;
  double t2791;
  double t2798;
  double t2802;
  double t2809;
  double t2813;
  double t2826;
  double t2828;
  double t2842;
  double t2854;
  double t2855;
  double t2875;
  double t2887;
  double t2890;
  double t2894;
  double t2900;
  double t2904;
  double t2909;
  double t2982;
  double t2984;
  double t2986;
  double t2998;
  double t2999;
  double t3005;
  double t3027;
  double t3029;
  double t3047;
  double t3074;
  double t3075;
  double t3076;
  double t3092;
  double t3097;
  double t3099;
  double t3103;
  double t3108;
  double t3110;
  double t3123;
  double t3129;
  double t3130;
  double t3135;
  double t3137;
  double t3138;
  double t3158;
  double t3162;
  double t3167;
  double t3177;
  double t3185;
  double t3187;
  double t3236;
  double t3244;
  double t3245;
  double t3212;
  double t3215;
  double t3220;
  double t3254;
  double t3257;
  double t3264;
  double t3270;
  double t3272;
  double t3276;
  double t3288;
  double t3289;
  double t3294;
  double t3300;
  double t3303;
  double t3308;
  double t3317;
  double t3319;
  double t3321;
  double t3331;
  double t3333;
  double t3336;
  double t3340;
  double t3342;
  double t3344;
  double t3346;
  double t3349;
  double t3351;
  double t3392;
  double t3394;
  double t3396;
  double t3412;
  double t3413;
  double t3416;
  double t3418;
  double t3420;
  double t3423;
  double t3436;
  double t3437;
  double t3439;
  double t3454;
  double t3467;
  double t3468;
  double t3477;
  double t3479;
  double t3484;
  double t3488;
  double t3491;
  double t3492;
  double t3501;
  double t3504;
  double t3506;
  double t3510;
  double t3513;
  double t3517;
  double t3554;
  double t3555;
  double t3562;
  double t3546;
  double t3547;
  double t3580;
  double t3581;
  double t3587;
  double t3590;
  double t3593;
  double t3595;
  double t3605;
  double t3613;
  double t3616;
  double t3631;
  double t3639;
  double t3641;
  double t3645;
  double t3646;
  double t3647;
  double t3652;
  double t3654;
  double t3656;
  double t3663;
  double t3666;
  double t3671;
  double t3675;
  double t3677;
  double t3678;
  double t3709;
  double t3710;
  double t3712;
  double t3718;
  double t3725;
  double t3729;
  double t3746;
  double t3747;
  double t3748;
  double t3753;
  double t3761;
  double t3763;
  double t3771;
  double t3774;
  double t3775;
  double t3778;
  double t3784;
  double t3788;
  double t3793;
  double t3794;
  double t3795;
  double t3798;
  double t3800;
  double t3801;
  double t3697;
  double t3698;
  double t3700;
  double t3702;
  double t3707;
  double t1572;
  double t1576;
  double t1580;
  double t3847;
  double t3848;
  double t3849;
  double t3851;
  double t3854;
  double t3855;
  double t3861;
  double t3862;
  double t3864;
  double t3869;
  double t3870;
  double t3871;
  double t3875;
  double t3876;
  double t3879;
  double t3882;
  double t3883;
  double t3889;
  double t3905;
  double t3910;
  double t3911;
  double t3914;
  double t3915;
  double t3917;
  double t3920;
  double t3921;
  double t3923;
  double t3936;
  double t3937;
  double t3938;
  double t3949;
  double t3956;
  double t3960;
  double t3971;
  double t3975;
  double t3976;
  double t3986;
  double t3988;
  double t3991;
  double t3998;
  double t4000;
  double t4001;
  double t4010;
  double t4011;
  double t4012;
  double t4051;
  double t4057;
  double t4065;
  double t4071;
  double t4072;
  double t4073;
  double t4082;
  double t4084;
  double t4088;
  double t4092;
  double t4096;
  double t4097;
  double t4100;
  double t4102;
  double t4103;
  double t4110;
  double t4111;
  double t4114;
  double t4120;
  double t4121;
  double t4123;
  double t4128;
  double t4137;
  double t4140;
  double t4151;
  double t4152;
  double t4157;
  double t4031;
  double t4032;
  double t4044;
  double t4047;
  double t4049;
  double t4192;
  double t4195;
  double t4196;
  double t4200;
  double t4201;
  double t4206;
  double t4211;
  double t4212;
  double t4217;
  double t4218;
  double t4225;
  double t4228;
  double t4229;
  double t4233;
  double t4238;
  double t4245;
  double t4246;
  double t4249;
  double t4250;
  double t4256;
  double t4291;
  double t4293;
  double t4294;
  double t4298;
  double t4299;
  double t4302;
  double t4304;
  double t4307;
  double t4308;
  double t4312;
  double t4313;
  double t4316;
  double t4329;
  double t4335;
  double t4341;
  double t4345;
  double t4346;
  double t4351;
  double t4356;
  double t4357;
  double t4361;
  double t4374;
  double t4388;
  double t4392;
  double t4406;
  double t4412;
  double t4413;
  double t4463;
  double t4466;
  double t4470;
  double t4487;
  double t4489;
  double t4496;
  double t4499;
  double t4503;
  double t4504;
  double t4505;
  double t4508;
  double t4509;
  double t4510;
  double t4517;
  double t4521;
  double t4524;
  double t4529;
  double t4532;
  double t4533;
  double t4454;
  double t4458;
  double t4460;
  double t4480;
  double t4481;
  double t4555;
  double t4556;
  double t4559;
  double t4561;
  double t4563;
  double t4567;
  double t4570;
  double t4578;
  double t4579;
  double t4582;
  double t4586;
  double t4587;
  double t4589;
  double t4641;
  double t4650;
  double t4652;
  double t4663;
  double t4666;
  double t4674;
  double t4675;
  double t4682;
  double t4683;
  double t4685;
  double t4691;
  double t4693;
  double t4695;
  double t4697;
  double t4699;
  double t4701;
  double t4705;
  double t4706;
  double t4707;
  double t4769;
  double t4770;
  double t4774;
  double t4779;
  double t4784;
  double t4788;
  double t4793;
  double t4801;
  double t4802;
  double t4805;
  double t4808;
  double t4811;
  double t4814;
  double t4745;
  double t4751;
  double t4762;
  double t4766;
  double t4768;
  double t4841;
  double t4847;
  double t4856;
  double t4860;
  double t4883;
  double t4884;
  double t4885;
  double t4913;
  double t4915;
  double t4921;
  double t4930;
  double t4933;
  double t4939;
  double t4943;
  double t4950;
  double t4957;
  double t4959;
  double t4964;
  double t4966;
  double t4971;
  double t5016;
  double t5017;
  double t5019;
  double t5026;
  double t5028;
  double t5030;
  double t5033;
  double t5006;
  double t5008;
  double t5009;
  double t5022;
  double t5023;
  double t5058;
  double t5060;
  double t1765;
  double t5107;
  double t5109;
  double t5110;
  double t5125;
  double t5133;
  double t5144;
  double t5150;
  double t5035;
  double t5208;
  double t5210;
  double t5212;
  double t5046;
  double t5196;
  double t5197;
  double t5200;
  double t5201;
  double t5207;
  double t5067;
  double t1780;
  double t1787;
  double t5162;
  double t5273;
  double t5276;
  double t5278;
  double t5179;
  t243 = Cos(var1[3]);
  t488 = Cos(var1[5]);
  t588 = Sin(var1[3]);
  t501 = Sin(var1[4]);
  t590 = Sin(var1[5]);
  t404 = Cos(var1[15]);
  t435 = -1.*t404;
  t460 = 1. + t435;
  t474 = Sin(var1[15]);
  t287 = Cos(var1[4]);
  t310 = Sin(var1[14]);
  t640 = Cos(var1[14]);
  t676 = -1.*t488*t588;
  t682 = -1.*t243*t501*t590;
  t689 = t676 + t682;
  t576 = t243*t488*t501;
  t592 = -1.*t588*t590;
  t596 = t576 + t592;
  t739 = -1.*t243*t287*t310;
  t763 = t640*t689;
  t769 = t739 + t763;
  t778 = Cos(var1[16]);
  t793 = -1.*t778;
  t828 = 1. + t793;
  t850 = Sin(var1[16]);
  t875 = -1.*t640*t243*t287;
  t877 = -1.*t310*t689;
  t913 = t875 + t877;
  t980 = t404*t596;
  t986 = t474*t769;
  t992 = t980 + t986;
  t1004 = Cos(var1[17]);
  t1011 = -1.*t1004;
  t1014 = 1. + t1011;
  t1021 = Sin(var1[17]);
  t1040 = t850*t913;
  t1049 = t778*t992;
  t1059 = t1040 + t1049;
  t1107 = t778*t913;
  t1110 = -1.*t850*t992;
  t1118 = t1107 + t1110;
  t1127 = Cos(var1[18]);
  t1132 = -1.*t1127;
  t1140 = 1. + t1132;
  t1144 = Sin(var1[18]);
  t1160 = -1.*t1021*t1059;
  t1162 = t1004*t1118;
  t1163 = t1160 + t1162;
  t1198 = t1004*t1059;
  t1201 = t1021*t1118;
  t1216 = t1198 + t1201;
  t1226 = Cos(var1[19]);
  t1236 = -1.*t1226;
  t1248 = 1. + t1236;
  t1298 = Sin(var1[19]);
  t1323 = t1144*t1163;
  t1324 = t1127*t1216;
  t1325 = t1323 + t1324;
  t1340 = t1127*t1163;
  t1359 = -1.*t1144*t1216;
  t1368 = t1340 + t1359;
  t1381 = Cos(var1[21]);
  t1389 = -1.*t1381;
  t1394 = 1. + t1389;
  t1398 = Sin(var1[21]);
  t1408 = -1.*t1298*t1325;
  t1413 = t1226*t1368;
  t1421 = t1408 + t1413;
  t1461 = t1226*t1325;
  t1462 = t1298*t1368;
  t1464 = t1461 + t1462;
  t324 = 0.135*t310;
  t326 = 0. + t324;
  t469 = -0.049*t460;
  t480 = -0.135*t474;
  t482 = 0. + t469 + t480;
  t652 = -1.*t640;
  t659 = 1. + t652;
  t664 = -0.135*t659;
  t669 = 0. + t664;
  t714 = -0.135*t460;
  t718 = 0.049*t474;
  t730 = 0. + t714 + t718;
  t1525 = t243*t488;
  t1526 = -1.*t588*t501*t590;
  t1536 = t1525 + t1526;
  t846 = -0.09*t828;
  t851 = 0.049*t850;
  t855 = 0. + t846 + t851;
  t1509 = t488*t588*t501;
  t1517 = t243*t590;
  t1520 = t1509 + t1517;
  t1540 = -1.*t287*t310*t588;
  t1545 = t640*t1536;
  t1550 = t1540 + t1545;
  t954 = -0.049*t828;
  t968 = -0.09*t850;
  t978 = 0. + t954 + t968;
  t1017 = -0.049*t1014;
  t1024 = -0.21*t1021;
  t1038 = 0. + t1017 + t1024;
  t1557 = -1.*t640*t287*t588;
  t1559 = -1.*t310*t1536;
  t1564 = t1557 + t1559;
  t1595 = t404*t1520;
  t1598 = t474*t1550;
  t1600 = t1595 + t1598;
  t1079 = -0.21*t1014;
  t1098 = 0.049*t1021;
  t1099 = 0. + t1079 + t1098;
  t1143 = -0.27068*t1140;
  t1149 = 0.00159*t1144;
  t1159 = 0. + t1143 + t1149;
  t1612 = t850*t1564;
  t1614 = t778*t1600;
  t1616 = t1612 + t1614;
  t1619 = t778*t1564;
  t1630 = -1.*t850*t1600;
  t1635 = t1619 + t1630;
  t1169 = -0.00159*t1140;
  t1172 = -0.27068*t1144;
  t1177 = 0. + t1169 + t1172;
  t1252 = 0.01841*t1248;
  t1310 = -0.70544*t1298;
  t1316 = 0. + t1252 + t1310;
  t1645 = -1.*t1021*t1616;
  t1646 = t1004*t1635;
  t1650 = t1645 + t1646;
  t1670 = t1004*t1616;
  t1686 = t1021*t1635;
  t1688 = t1670 + t1686;
  t1328 = -0.70544*t1248;
  t1334 = -0.01841*t1298;
  t1335 = 0. + t1328 + t1334;
  t1395 = -1.11344*t1394;
  t1402 = 0.02159*t1398;
  t1404 = 0. + t1395 + t1402;
  t1691 = t1144*t1650;
  t1692 = t1127*t1688;
  t1700 = t1691 + t1692;
  t1704 = t1127*t1650;
  t1705 = -1.*t1144*t1688;
  t1706 = t1704 + t1705;
  t1431 = -0.02159*t1394;
  t1433 = -1.11344*t1398;
  t1451 = 0. + t1431 + t1433;
  t1712 = -1.*t1298*t1700;
  t1713 = t1226*t1706;
  t1716 = t1712 + t1713;
  t1729 = t1226*t1700;
  t1732 = t1298*t1706;
  t1744 = t1729 + t1732;
  t1812 = t287*t310;
  t1814 = t640*t501*t590;
  t1817 = t1812 + t1814;
  t1819 = t640*t287;
  t1823 = -1.*t310*t501*t590;
  t1833 = t1819 + t1823;
  t1848 = -1.*t404*t488*t501;
  t1851 = t474*t1817;
  t1853 = t1848 + t1851;
  t1862 = t850*t1833;
  t1874 = t778*t1853;
  t1884 = t1862 + t1874;
  t1904 = t778*t1833;
  t1906 = -1.*t850*t1853;
  t1907 = t1904 + t1906;
  t1911 = -1.*t1021*t1884;
  t1917 = t1004*t1907;
  t1918 = t1911 + t1917;
  t1929 = t1004*t1884;
  t1931 = t1021*t1907;
  t1932 = t1929 + t1931;
  t1940 = t1144*t1918;
  t1942 = t1127*t1932;
  t1944 = t1940 + t1942;
  t1950 = t1127*t1918;
  t1951 = -1.*t1144*t1932;
  t1952 = t1950 + t1951;
  t1955 = -1.*t1298*t1944;
  t1957 = t1226*t1952;
  t1961 = t1955 + t1957;
  t1965 = t1226*t1944;
  t1966 = t1298*t1952;
  t1968 = t1965 + t1966;
  t2007 = t310*t588*t501;
  t2009 = -1.*t640*t287*t588*t590;
  t2010 = t2007 + t2009;
  t2014 = t640*t588*t501;
  t2015 = t287*t310*t588*t590;
  t2020 = t2014 + t2015;
  t2043 = t404*t287*t488*t588;
  t2044 = t474*t2010;
  t2045 = t2043 + t2044;
  t2054 = t850*t2020;
  t2055 = t778*t2045;
  t2056 = t2054 + t2055;
  t2065 = t778*t2020;
  t2067 = -1.*t850*t2045;
  t2069 = t2065 + t2067;
  t2077 = -1.*t1021*t2056;
  t2081 = t1004*t2069;
  t2087 = t2077 + t2081;
  t2093 = t1004*t2056;
  t2094 = t1021*t2069;
  t2112 = t2093 + t2094;
  t2118 = t1144*t2087;
  t2127 = t1127*t2112;
  t2129 = t2118 + t2127;
  t2142 = t1127*t2087;
  t2145 = -1.*t1144*t2112;
  t2146 = t2142 + t2145;
  t2153 = -1.*t1298*t2129;
  t2162 = t1226*t2146;
  t2163 = t2153 + t2162;
  t2166 = t1226*t2129;
  t2168 = t1298*t2146;
  t2169 = t2166 + t2168;
  t2224 = -1.*t243*t310*t501;
  t2225 = t640*t243*t287*t590;
  t2229 = t2224 + t2225;
  t2235 = -1.*t640*t243*t501;
  t2237 = -1.*t243*t287*t310*t590;
  t2241 = t2235 + t2237;
  t2268 = -1.*t404*t243*t287*t488;
  t2275 = t474*t2229;
  t2281 = t2268 + t2275;
  t2289 = t850*t2241;
  t2292 = t778*t2281;
  t2300 = t2289 + t2292;
  t2311 = t778*t2241;
  t2319 = -1.*t850*t2281;
  t2327 = t2311 + t2319;
  t2336 = -1.*t1021*t2300;
  t2344 = t1004*t2327;
  t2365 = t2336 + t2344;
  t2369 = t1004*t2300;
  t2380 = t1021*t2327;
  t2382 = t2369 + t2380;
  t2393 = t1144*t2365;
  t2396 = t1127*t2382;
  t2398 = t2393 + t2396;
  t2402 = t1127*t2365;
  t2405 = -1.*t1144*t2382;
  t2410 = t2402 + t2405;
  t2414 = -1.*t1298*t2398;
  t2416 = t1226*t2410;
  t2418 = t2414 + t2416;
  t2430 = t1226*t2398;
  t2432 = t1298*t2410;
  t2438 = t2430 + t2432;
  t2512 = -1.*t640*t287*t488*t474;
  t2514 = -1.*t404*t287*t590;
  t2515 = t2512 + t2514;
  t2536 = t287*t488*t310*t850;
  t2539 = t778*t2515;
  t2548 = t2536 + t2539;
  t2552 = t778*t287*t488*t310;
  t2553 = -1.*t850*t2515;
  t2560 = t2552 + t2553;
  t2565 = -1.*t1021*t2548;
  t2566 = t1004*t2560;
  t2573 = t2565 + t2566;
  t2578 = t1004*t2548;
  t2581 = t1021*t2560;
  t2588 = t2578 + t2581;
  t2604 = t1144*t2573;
  t2607 = t1127*t2588;
  t2616 = t2604 + t2607;
  t2620 = t1127*t2573;
  t2625 = -1.*t1144*t2588;
  t2626 = t2620 + t2625;
  t2637 = -1.*t1298*t2616;
  t2639 = t1226*t2626;
  t2641 = t2637 + t2639;
  t2646 = t1226*t2616;
  t2653 = t1298*t2626;
  t2654 = t2646 + t2653;
  t2709 = -1.*t488*t588*t501;
  t2719 = -1.*t243*t590;
  t2720 = t2709 + t2719;
  t2729 = t640*t474*t2720;
  t2732 = t404*t1536;
  t2736 = t2729 + t2732;
  t2754 = -1.*t310*t850*t2720;
  t2755 = t778*t2736;
  t2762 = t2754 + t2755;
  t2766 = -1.*t778*t310*t2720;
  t2778 = -1.*t850*t2736;
  t2787 = t2766 + t2778;
  t2790 = -1.*t1021*t2762;
  t2791 = t1004*t2787;
  t2798 = t2790 + t2791;
  t2802 = t1004*t2762;
  t2809 = t1021*t2787;
  t2813 = t2802 + t2809;
  t2826 = t1144*t2798;
  t2828 = t1127*t2813;
  t2842 = t2826 + t2828;
  t2854 = t1127*t2798;
  t2855 = -1.*t1144*t2813;
  t2875 = t2854 + t2855;
  t2887 = -1.*t1298*t2842;
  t2890 = t1226*t2875;
  t2894 = t2887 + t2890;
  t2900 = t1226*t2842;
  t2904 = t1298*t2875;
  t2909 = t2900 + t2904;
  t2982 = t488*t588;
  t2984 = t243*t501*t590;
  t2986 = t2982 + t2984;
  t2998 = t640*t474*t596;
  t2999 = t404*t2986;
  t3005 = t2998 + t2999;
  t3027 = -1.*t310*t850*t596;
  t3029 = t778*t3005;
  t3047 = t3027 + t3029;
  t3074 = -1.*t778*t310*t596;
  t3075 = -1.*t850*t3005;
  t3076 = t3074 + t3075;
  t3092 = -1.*t1021*t3047;
  t3097 = t1004*t3076;
  t3099 = t3092 + t3097;
  t3103 = t1004*t3047;
  t3108 = t1021*t3076;
  t3110 = t3103 + t3108;
  t3123 = t1144*t3099;
  t3129 = t1127*t3110;
  t3130 = t3123 + t3129;
  t3135 = t1127*t3099;
  t3137 = -1.*t1144*t3110;
  t3138 = t3135 + t3137;
  t3158 = -1.*t1298*t3130;
  t3162 = t1226*t3138;
  t3167 = t3158 + t3162;
  t3177 = t1226*t3130;
  t3185 = t1298*t3138;
  t3187 = t3177 + t3185;
  t3236 = t640*t501;
  t3244 = t287*t310*t590;
  t3245 = t3236 + t3244;
  t3212 = -1.*t310*t501;
  t3215 = t640*t287*t590;
  t3220 = t3212 + t3215;
  t3254 = t850*t3220;
  t3257 = t778*t474*t3245;
  t3264 = t3254 + t3257;
  t3270 = t778*t3220;
  t3272 = -1.*t474*t850*t3245;
  t3276 = t3270 + t3272;
  t3288 = -1.*t1021*t3264;
  t3289 = t1004*t3276;
  t3294 = t3288 + t3289;
  t3300 = t1004*t3264;
  t3303 = t1021*t3276;
  t3308 = t3300 + t3303;
  t3317 = t1144*t3294;
  t3319 = t1127*t3308;
  t3321 = t3317 + t3319;
  t3331 = t1127*t3294;
  t3333 = -1.*t1144*t3308;
  t3336 = t3331 + t3333;
  t3340 = -1.*t1298*t3321;
  t3342 = t1226*t3336;
  t3344 = t3340 + t3342;
  t3346 = t1226*t3321;
  t3349 = t1298*t3336;
  t3351 = t3346 + t3349;
  t3392 = t287*t310*t588;
  t3394 = -1.*t640*t1536;
  t3396 = t3392 + t3394;
  t3412 = t850*t3396;
  t3413 = t778*t474*t1564;
  t3416 = t3412 + t3413;
  t3418 = t778*t3396;
  t3420 = -1.*t474*t850*t1564;
  t3423 = t3418 + t3420;
  t3436 = -1.*t1021*t3416;
  t3437 = t1004*t3423;
  t3439 = t3436 + t3437;
  t3454 = t1004*t3416;
  t3467 = t1021*t3423;
  t3468 = t3454 + t3467;
  t3477 = t1144*t3439;
  t3479 = t1127*t3468;
  t3484 = t3477 + t3479;
  t3488 = t1127*t3439;
  t3491 = -1.*t1144*t3468;
  t3492 = t3488 + t3491;
  t3501 = -1.*t1298*t3484;
  t3504 = t1226*t3492;
  t3506 = t3501 + t3504;
  t3510 = t1226*t3484;
  t3513 = t1298*t3492;
  t3517 = t3510 + t3513;
  t3554 = t640*t243*t287;
  t3555 = -1.*t310*t2986;
  t3562 = t3554 + t3555;
  t3546 = -1.*t640*t2986;
  t3547 = t739 + t3546;
  t3580 = t850*t3547;
  t3581 = t778*t474*t3562;
  t3587 = t3580 + t3581;
  t3590 = t778*t3547;
  t3593 = -1.*t474*t850*t3562;
  t3595 = t3590 + t3593;
  t3605 = -1.*t1021*t3587;
  t3613 = t1004*t3595;
  t3616 = t3605 + t3613;
  t3631 = t1004*t3587;
  t3639 = t1021*t3595;
  t3641 = t3631 + t3639;
  t3645 = t1144*t3616;
  t3646 = t1127*t3641;
  t3647 = t3645 + t3646;
  t3652 = t1127*t3616;
  t3654 = -1.*t1144*t3641;
  t3656 = t3652 + t3654;
  t3663 = -1.*t1298*t3647;
  t3666 = t1226*t3656;
  t3671 = t3663 + t3666;
  t3675 = t1226*t3647;
  t3677 = t1298*t3656;
  t3678 = t3675 + t3677;
  t3709 = t310*t501;
  t3710 = -1.*t640*t287*t590;
  t3712 = t3709 + t3710;
  t3718 = -1.*t287*t488*t474;
  t3725 = t404*t3712;
  t3729 = t3718 + t3725;
  t3746 = -1.*t1004*t850*t3729;
  t3747 = -1.*t778*t1021*t3729;
  t3748 = t3746 + t3747;
  t3753 = t778*t1004*t3729;
  t3761 = -1.*t850*t1021*t3729;
  t3763 = t3753 + t3761;
  t3771 = t1144*t3748;
  t3774 = t1127*t3763;
  t3775 = t3771 + t3774;
  t3778 = t1127*t3748;
  t3784 = -1.*t1144*t3763;
  t3788 = t3778 + t3784;
  t3793 = -1.*t1298*t3775;
  t3794 = t1226*t3788;
  t3795 = t3793 + t3794;
  t3798 = t1226*t3775;
  t3800 = t1298*t3788;
  t3801 = t3798 + t3800;
  t3697 = -0.135*t404;
  t3698 = -0.049*t474;
  t3700 = t3697 + t3698;
  t3702 = 0.049*t404;
  t3707 = t3702 + t480;
  t1572 = -1.*t474*t1520;
  t1576 = t404*t1550;
  t1580 = t1572 + t1576;
  t3847 = -1.*t1004*t850*t1580;
  t3848 = -1.*t778*t1021*t1580;
  t3849 = t3847 + t3848;
  t3851 = t778*t1004*t1580;
  t3854 = -1.*t850*t1021*t1580;
  t3855 = t3851 + t3854;
  t3861 = t1144*t3849;
  t3862 = t1127*t3855;
  t3864 = t3861 + t3862;
  t3869 = t1127*t3849;
  t3870 = -1.*t1144*t3855;
  t3871 = t3869 + t3870;
  t3875 = -1.*t1298*t3864;
  t3876 = t1226*t3871;
  t3879 = t3875 + t3876;
  t3882 = t1226*t3864;
  t3883 = t1298*t3871;
  t3889 = t3882 + t3883;
  t3905 = -1.*t243*t488*t501;
  t3910 = t588*t590;
  t3911 = t3905 + t3910;
  t3914 = t243*t287*t310;
  t3915 = t640*t2986;
  t3917 = t3914 + t3915;
  t3920 = -1.*t474*t3911;
  t3921 = t404*t3917;
  t3923 = t3920 + t3921;
  t3936 = -1.*t1004*t850*t3923;
  t3937 = -1.*t778*t1021*t3923;
  t3938 = t3936 + t3937;
  t3949 = t778*t1004*t3923;
  t3956 = -1.*t850*t1021*t3923;
  t3960 = t3949 + t3956;
  t3971 = t1144*t3938;
  t3975 = t1127*t3960;
  t3976 = t3971 + t3975;
  t3986 = t1127*t3938;
  t3988 = -1.*t1144*t3960;
  t3991 = t3986 + t3988;
  t3998 = -1.*t1298*t3976;
  t4000 = t1226*t3991;
  t4001 = t3998 + t4000;
  t4010 = t1226*t3976;
  t4011 = t1298*t3991;
  t4012 = t4010 + t4011;
  t4051 = t404*t287*t488;
  t4057 = t474*t3712;
  t4065 = t4051 + t4057;
  t4071 = -1.*t850*t3245;
  t4072 = -1.*t778*t4065;
  t4073 = t4071 + t4072;
  t4082 = t778*t3245;
  t4084 = -1.*t850*t4065;
  t4088 = t4082 + t4084;
  t4092 = t1021*t4073;
  t4096 = t1004*t4088;
  t4097 = t4092 + t4096;
  t4100 = t1004*t4073;
  t4102 = -1.*t1021*t4088;
  t4103 = t4100 + t4102;
  t4110 = -1.*t1144*t4097;
  t4111 = t1127*t4103;
  t4114 = t4110 + t4111;
  t4120 = t1127*t4097;
  t4121 = t1144*t4103;
  t4123 = t4120 + t4121;
  t4128 = t1298*t4114;
  t4137 = t1226*t4123;
  t4140 = t4128 + t4137;
  t4151 = t1226*t4114;
  t4152 = -1.*t1298*t4123;
  t4157 = t4151 + t4152;
  t4031 = 0.049*t778;
  t4032 = t4031 + t968;
  t4044 = -0.09*t778;
  t4047 = -0.049*t850;
  t4049 = t4044 + t4047;
  t4192 = -1.*t850*t1564;
  t4195 = -1.*t778*t1600;
  t4196 = t4192 + t4195;
  t4200 = t1021*t4196;
  t4201 = t4200 + t1646;
  t4206 = t1004*t4196;
  t4211 = -1.*t1021*t1635;
  t4212 = t4206 + t4211;
  t4217 = -1.*t1144*t4201;
  t4218 = t1127*t4212;
  t4225 = t4217 + t4218;
  t4228 = t1127*t4201;
  t4229 = t1144*t4212;
  t4233 = t4228 + t4229;
  t4238 = t1298*t4225;
  t4245 = t1226*t4233;
  t4246 = t4238 + t4245;
  t4249 = t1226*t4225;
  t4250 = -1.*t1298*t4233;
  t4256 = t4249 + t4250;
  t4291 = t404*t3911;
  t4293 = t474*t3917;
  t4294 = t4291 + t4293;
  t4298 = -1.*t850*t3562;
  t4299 = -1.*t778*t4294;
  t4302 = t4298 + t4299;
  t4304 = t778*t3562;
  t4307 = -1.*t850*t4294;
  t4308 = t4304 + t4307;
  t4312 = t1021*t4302;
  t4313 = t1004*t4308;
  t4316 = t4312 + t4313;
  t4329 = t1004*t4302;
  t4335 = -1.*t1021*t4308;
  t4341 = t4329 + t4335;
  t4345 = -1.*t1144*t4316;
  t4346 = t1127*t4341;
  t4351 = t4345 + t4346;
  t4356 = t1127*t4316;
  t4357 = t1144*t4341;
  t4361 = t4356 + t4357;
  t4374 = t1298*t4351;
  t4388 = t1226*t4361;
  t4392 = t4374 + t4388;
  t4406 = t1226*t4351;
  t4412 = -1.*t1298*t4361;
  t4413 = t4406 + t4412;
  t4463 = t850*t3245;
  t4466 = t778*t4065;
  t4470 = t4463 + t4466;
  t4487 = -1.*t1021*t4470;
  t4489 = t4487 + t4096;
  t4496 = -1.*t1004*t4470;
  t4499 = t4496 + t4102;
  t4503 = -1.*t1144*t4489;
  t4504 = t1127*t4499;
  t4505 = t4503 + t4504;
  t4508 = t1127*t4489;
  t4509 = t1144*t4499;
  t4510 = t4508 + t4509;
  t4517 = t1298*t4505;
  t4521 = t1226*t4510;
  t4524 = t4517 + t4521;
  t4529 = t1226*t4505;
  t4532 = -1.*t1298*t4510;
  t4533 = t4529 + t4532;
  t4454 = -0.21*t1004;
  t4458 = -0.049*t1021;
  t4460 = t4454 + t4458;
  t4480 = 0.049*t1004;
  t4481 = t4480 + t1024;
  t4555 = -1.*t1004*t1616;
  t4556 = t4555 + t4211;
  t4559 = -1.*t1144*t1650;
  t4561 = t1127*t4556;
  t4563 = t4559 + t4561;
  t4567 = t1144*t4556;
  t4570 = t1704 + t4567;
  t4578 = t1298*t4563;
  t4579 = t1226*t4570;
  t4582 = t4578 + t4579;
  t4586 = t1226*t4563;
  t4587 = -1.*t1298*t4570;
  t4589 = t4586 + t4587;
  t4641 = t850*t3562;
  t4650 = t778*t4294;
  t4652 = t4641 + t4650;
  t4663 = -1.*t1021*t4652;
  t4666 = t4663 + t4313;
  t4674 = -1.*t1004*t4652;
  t4675 = t4674 + t4335;
  t4682 = -1.*t1144*t4666;
  t4683 = t1127*t4675;
  t4685 = t4682 + t4683;
  t4691 = t1127*t4666;
  t4693 = t1144*t4675;
  t4695 = t4691 + t4693;
  t4697 = t1298*t4685;
  t4699 = t1226*t4695;
  t4701 = t4697 + t4699;
  t4705 = t1226*t4685;
  t4706 = -1.*t1298*t4695;
  t4707 = t4705 + t4706;
  t4769 = t1004*t4470;
  t4770 = t1021*t4088;
  t4774 = t4769 + t4770;
  t4779 = -1.*t1127*t4774;
  t4784 = t4503 + t4779;
  t4788 = -1.*t1144*t4774;
  t4793 = t4508 + t4788;
  t4801 = t1298*t4784;
  t4802 = t1226*t4793;
  t4805 = t4801 + t4802;
  t4808 = t1226*t4784;
  t4811 = -1.*t1298*t4793;
  t4814 = t4808 + t4811;
  t4745 = 0.00159*t1127;
  t4751 = t4745 + t1172;
  t4762 = -0.27068*t1127;
  t4766 = -0.00159*t1144;
  t4768 = t4762 + t4766;
  t4841 = -1.*t1127*t1688;
  t4847 = t4559 + t4841;
  t4856 = t1298*t4847;
  t4860 = t4856 + t1713;
  t4883 = t1226*t4847;
  t4884 = -1.*t1298*t1706;
  t4885 = t4883 + t4884;
  t4913 = t1004*t4652;
  t4915 = t1021*t4308;
  t4921 = t4913 + t4915;
  t4930 = -1.*t1127*t4921;
  t4933 = t4682 + t4930;
  t4939 = -1.*t1144*t4921;
  t4943 = t4691 + t4939;
  t4950 = t1298*t4933;
  t4957 = t1226*t4943;
  t4959 = t4950 + t4957;
  t4964 = t1226*t4933;
  t4966 = -1.*t1298*t4943;
  t4971 = t4964 + t4966;
  t5016 = t1144*t4489;
  t5017 = t1127*t4774;
  t5019 = t5016 + t5017;
  t5026 = -1.*t1298*t5019;
  t5028 = t5026 + t4802;
  t5030 = -1.*t1226*t5019;
  t5033 = t5030 + t4811;
  t5006 = -0.70544*t1226;
  t5008 = 0.01841*t1298;
  t5009 = t5006 + t5008;
  t5022 = -0.01841*t1226;
  t5023 = t5022 + t1310;
  t5058 = -1.*t1226*t1700;
  t5060 = t5058 + t4884;
  t1765 = t1381*t1716;
  t5107 = t1144*t4666;
  t5109 = t1127*t4921;
  t5110 = t5107 + t5109;
  t5125 = -1.*t1298*t5110;
  t5133 = t5125 + t4957;
  t5144 = -1.*t1226*t5110;
  t5150 = t5144 + t4966;
  t5035 = -1.*t1398*t5028;
  t5208 = t1226*t5019;
  t5210 = t1298*t4793;
  t5212 = t5208 + t5210;
  t5046 = t1381*t5028;
  t5196 = 0.02159*t1381;
  t5197 = t5196 + t1433;
  t5200 = -1.11344*t1381;
  t5201 = -0.02159*t1398;
  t5207 = t5200 + t5201;
  t5067 = -1.*t1398*t1716;
  t1780 = -1.*t1398*t1744;
  t1787 = t1765 + t1780;
  t5162 = -1.*t1398*t5133;
  t5273 = t1226*t5110;
  t5276 = t1298*t4943;
  t5278 = t5273 + t5276;
  t5179 = t1381*t5133;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=1.;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=1.;
  p_output1[9]=0;
  p_output1[10]=t1038*t1059 + t1099*t1118 + t1159*t1163 + t1177*t1216 + t1316*t1325 + t1335*t1368 + t1404*t1421 + t1451*t1464 - 0.014395*(t1398*t1421 + t1381*t1464) - 1.184683*(t1381*t1421 - 1.*t1398*t1464) - 1.*t243*t287*t326 + t482*t596 + t669*t689 + t730*t769 - 0.1305*(-1.*t474*t596 + t404*t769) + t855*t913 + t978*t992;
  p_output1[11]=-0.1305*t1580 + t1038*t1616 + t1099*t1635 + t1159*t1650 + t1177*t1688 + t1316*t1700 + t1335*t1706 + t1404*t1716 + t1451*t1744 - 0.014395*(t1398*t1716 + t1381*t1744) - 1.184683*t1787 + t1520*t482 - 1.*t287*t326*t588 + t1536*t669 + t1550*t730 + t1564*t855 + t1600*t978;
  p_output1[12]=t1038*t1884 + t1099*t1907 + t1159*t1918 + t1177*t1932 + t1316*t1944 + t1335*t1952 + t1404*t1961 + t1451*t1968 - 0.014395*(t1398*t1961 + t1381*t1968) - 1.184683*(t1381*t1961 - 1.*t1398*t1968) + t287*t326 - 1.*t482*t488*t501 - 0.1305*(t1817*t404 + t474*t488*t501) + t501*t590*t669 + t1817*t730 + t1833*t855 + t1853*t978;
  p_output1[13]=t1038*t2056 + t1099*t2069 + t1159*t2087 + t1177*t2112 + t1316*t2129 + t1335*t2146 + t1404*t2163 + t1451*t2169 - 0.014395*(t1398*t2163 + t1381*t2169) - 1.184683*(t1381*t2163 - 1.*t1398*t2169) + t287*t482*t488*t588 + t326*t501*t588 - 0.1305*(t2010*t404 - 1.*t287*t474*t488*t588) - 1.*t287*t588*t590*t669 + t2010*t730 + t2020*t855 + t2045*t978;
  p_output1[14]=t1038*t2300 + t1099*t2327 + t1159*t2365 + t1177*t2382 + t1316*t2398 + t1335*t2410 + t1404*t2418 + t1451*t2438 - 0.014395*(t1398*t2418 + t1381*t2438) - 1.184683*(t1381*t2418 - 1.*t1398*t2438) - 1.*t243*t287*t482*t488 - 0.1305*(t2229*t404 + t243*t287*t474*t488) - 1.*t243*t326*t501 + t243*t287*t590*t669 + t2229*t730 + t2241*t855 + t2281*t978;
  p_output1[15]=t1038*t2548 + t1099*t2560 + t1159*t2573 + t1177*t2588 + t1316*t2616 + t1335*t2626 + t1404*t2641 + t1451*t2654 - 0.014395*(t1398*t2641 + t1381*t2654) - 1.184683*(t1381*t2641 - 1.*t1398*t2654) - 1.*t287*t482*t590 - 0.1305*(t287*t474*t590 - 1.*t287*t404*t488*t640) - 1.*t287*t488*t669 - 1.*t287*t488*t640*t730 + t287*t310*t488*t855 + t2515*t978;
  p_output1[16]=t1038*t2762 + t1099*t2787 + t1159*t2798 + t1177*t2813 + t1316*t2842 + t1335*t2875 + t1404*t2894 + t1451*t2909 - 0.014395*(t1398*t2894 + t1381*t2909) - 1.184683*(t1381*t2894 - 1.*t1398*t2909) + t1536*t482 - 0.1305*(-1.*t1536*t474 + t2720*t404*t640) + t2720*t669 + t2720*t640*t730 - 1.*t2720*t310*t855 + t2736*t978;
  p_output1[17]=t1038*t3047 + t1099*t3076 + t1159*t3099 + t1177*t3110 + t1316*t3130 + t1335*t3138 + t1404*t3167 + t1451*t3187 - 0.014395*(t1398*t3167 + t1381*t3187) - 1.184683*(t1381*t3167 - 1.*t1398*t3187) + t2986*t482 - 0.1305*(-1.*t2986*t474 + t404*t596*t640) + t596*t669 + t596*t640*t730 - 1.*t310*t596*t855 + t3005*t978;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=t1038*t3264 + t1099*t3276 + t1159*t3294 + t1177*t3308 + t1316*t3321 + t1335*t3336 + t1404*t3344 + t1451*t3351 - 0.014395*(t1398*t3344 + t1381*t3351) - 1.184683*(t1381*t3344 - 1.*t1398*t3351) - 0.1305*t3245*t404 + 0.135*t287*t310*t590 + 0.135*t501*t640 + t3245*t730 + t3220*t855 + t3245*t474*t978;
  p_output1[43]=-0.135*t1536*t310 + t1038*t3416 + t1099*t3423 + t1159*t3439 + t1177*t3468 + t1316*t3484 + t1335*t3492 + t1404*t3506 + t1451*t3517 - 0.014395*(t1398*t3506 + t1381*t3517) - 1.184683*(t1381*t3506 - 1.*t1398*t3517) - 0.1305*t1564*t404 - 0.135*t287*t588*t640 + t1564*t730 + t3396*t855 + t1564*t474*t978;
  p_output1[44]=-0.135*t2986*t310 + t1038*t3587 + t1099*t3595 + t1159*t3616 + t1177*t3641 + t1316*t3647 + t1335*t3656 + t1404*t3671 + t1451*t3678 - 0.014395*(t1398*t3671 + t1381*t3678) - 1.184683*(t1381*t3671 - 1.*t1398*t3678) - 0.1305*t3562*t404 + 0.135*t243*t287*t640 + t3562*t730 + t3547*t855 + t3562*t474*t978;
  p_output1[45]=t3707*t3712 + t1159*t3748 + t1177*t3763 + t1316*t3775 + t1335*t3788 + t1404*t3795 + t1451*t3801 - 0.014395*(t1398*t3795 + t1381*t3801) - 1.184683*(t1381*t3795 - 1.*t1398*t3801) + t287*t3700*t488 - 0.1305*(-1.*t3712*t474 - 1.*t287*t404*t488) + t1038*t3729*t778 - 1.*t1099*t3729*t850 + t3729*t978;
  p_output1[46]=t1520*t3700 + t1550*t3707 + t1159*t3849 + t1177*t3855 + t1316*t3864 + t1335*t3871 + t1404*t3879 + t1451*t3889 - 0.014395*(t1398*t3879 + t1381*t3889) - 1.184683*(t1381*t3879 - 1.*t1398*t3889) - 0.1305*(-1.*t1520*t404 - 1.*t1550*t474) + t1038*t1580*t778 - 1.*t1099*t1580*t850 + t1580*t978;
  p_output1[47]=t3700*t3911 + t3707*t3917 + t1159*t3938 + t1177*t3960 + t1316*t3976 + t1335*t3991 + t1404*t4001 + t1451*t4012 - 0.014395*(t1398*t4001 + t1381*t4012) - 1.184683*(t1381*t4001 - 1.*t1398*t4012) - 0.1305*(-1.*t3911*t404 - 1.*t3917*t474) + t1038*t3923*t778 - 1.*t1099*t3923*t850 + t3923*t978;
  p_output1[48]=t3245*t4032 + t4049*t4065 + t1099*t4073 + t1038*t4088 + t1177*t4097 + t1159*t4103 + t1335*t4114 + t1316*t4123 + t1451*t4140 + t1404*t4157 - 1.184683*(-1.*t1398*t4140 + t1381*t4157) - 0.014395*(t1381*t4140 + t1398*t4157);
  p_output1[49]=t1038*t1635 + t1564*t4032 + t1600*t4049 + t1099*t4196 + t1177*t4201 + t1159*t4212 + t1335*t4225 + t1316*t4233 + t1451*t4246 + t1404*t4256 - 1.184683*(-1.*t1398*t4246 + t1381*t4256) - 0.014395*(t1381*t4246 + t1398*t4256);
  p_output1[50]=t3562*t4032 + t4049*t4294 + t1099*t4302 + t1038*t4308 + t1177*t4316 + t1159*t4341 + t1335*t4351 + t1316*t4361 + t1451*t4392 + t1404*t4413 - 1.184683*(-1.*t1398*t4392 + t1381*t4413) - 0.014395*(t1381*t4392 + t1398*t4413);
  p_output1[51]=t4460*t4470 + t4088*t4481 + t1177*t4489 + t1159*t4499 + t1335*t4505 + t1316*t4510 + t1451*t4524 + t1404*t4533 - 1.184683*(-1.*t1398*t4524 + t1381*t4533) - 0.014395*(t1381*t4524 + t1398*t4533);
  p_output1[52]=t1177*t1650 + t1616*t4460 + t1635*t4481 + t1159*t4556 + t1335*t4563 + t1316*t4570 + t1451*t4582 + t1404*t4589 - 1.184683*(-1.*t1398*t4582 + t1381*t4589) - 0.014395*(t1381*t4582 + t1398*t4589);
  p_output1[53]=t4308*t4481 + t4460*t4652 + t1177*t4666 + t1159*t4675 + t1335*t4685 + t1316*t4695 + t1451*t4701 + t1404*t4707 - 1.184683*(-1.*t1398*t4701 + t1381*t4707) - 0.014395*(t1381*t4701 + t1398*t4707);
  p_output1[54]=t4489*t4751 + t4768*t4774 + t1335*t4784 + t1316*t4793 + t1451*t4805 + t1404*t4814 - 1.184683*(-1.*t1398*t4805 + t1381*t4814) - 0.014395*(t1381*t4805 + t1398*t4814);
  p_output1[55]=t1316*t1706 + t1650*t4751 + t1688*t4768 + t1335*t4847 + t1451*t4860 + t1404*t4885 - 1.184683*(-1.*t1398*t4860 + t1381*t4885) - 0.014395*(t1381*t4860 + t1398*t4885);
  p_output1[56]=t4666*t4751 + t4768*t4921 + t1335*t4933 + t1316*t4943 + t1451*t4959 + t1404*t4971 - 1.184683*(-1.*t1398*t4959 + t1381*t4971) - 0.014395*(t1381*t4959 + t1398*t4971);
  p_output1[57]=t5009*t5019 + t4793*t5023 + t1451*t5028 + t1404*t5033 - 1.184683*(t1381*t5033 + t5035) - 0.014395*(t1398*t5033 + t5046);
  p_output1[58]=t1451*t1716 + t1700*t5009 + t1706*t5023 + t1404*t5060 - 0.014395*(t1765 + t1398*t5060) - 1.184683*(t1381*t5060 + t5067);
  p_output1[59]=t4943*t5023 + t5009*t5110 + t1451*t5133 + t1404*t5150 - 1.184683*(t1381*t5150 + t5162) - 0.014395*(t1398*t5150 + t5179);
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=t5028*t5197 + t5207*t5212 - 1.184683*(t5035 - 1.*t1381*t5212) - 0.014395*(t5046 - 1.*t1398*t5212);
  p_output1[64]=-0.014395*t1787 - 1.184683*(-1.*t1381*t1744 + t5067) + t1716*t5197 + t1744*t5207;
  p_output1[65]=t5133*t5197 + t5207*t5278 - 1.184683*(t5162 - 1.*t1381*t5278) - 0.014395*(t5179 - 1.*t1398*t5278);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 22, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#endif // MATLAB_MEX_FILE

namespace SymFunction
{

void J_rightHeel_constraint_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}




