/*
 * Automatically Generated from Mathematica.
 * Sun 7 Nov 2021 14:26:31 GMT-08:00
 */

#ifdef MATLAB_MEX_FILE
// No need to include header
#else
#include "Jdot_achilles_constraint.hh"
#endif

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t250;
  double t35;
  double t88;
  double t273;
  double t395;
  double t398;
  double t462;
  double t470;
  double t484;
  double t220;
  double t332;
  double t378;
  double t503;
  double t510;
  double t517;
  double t532;
  double t535;
  double t538;
  double t579;
  double t552;
  double t553;
  double t554;
  double t608;
  double t895;
  double t572;
  double t971;
  double t1010;
  double t1012;
  double t400;
  double t1039;
  double t1050;
  double t518;
  double t530;
  double t1060;
  double t1065;
  double t1066;
  double t627;
  double t1085;
  double t1086;
  double t752;
  double t757;
  double t769;
  double t1091;
  double t1092;
  double t820;
  double t822;
  double t836;
  double t872;
  double t873;
  double t904;
  double t907;
  double t915;
  double t917;
  double t931;
  double t934;
  double t941;
  double t951;
  double t959;
  double t960;
  double t964;
  double t965;
  double t969;
  double t972;
  double t976;
  double t980;
  double t991;
  double t994;
  double t1000;
  double t397;
  double t405;
  double t418;
  double t492;
  double t496;
  double t499;
  double t500;
  double t541;
  double t720;
  double t747;
  double t750;
  double t783;
  double t861;
  double t862;
  double t871;
  double t944;
  double t990;
  double t999;
  double t1001;
  double t1002;
  double t1005;
  double t1006;
  double t1017;
  double t1018;
  double t1023;
  double t1033;
  double t1035;
  double t1036;
  double t1053;
  double t1056;
  double t1076;
  double t1077;
  double t1082;
  double t1165;
  double t1166;
  double t1173;
  double t1184;
  double t1185;
  double t1188;
  double t1191;
  double t1192;
  double t1199;
  double t1257;
  double t1258;
  double t1286;
  double t1287;
  double t1138;
  double t1139;
  double t1240;
  double t1242;
  double t1244;
  double t1251;
  double t1252;
  double t1254;
  double t1259;
  double t1261;
  double t1263;
  double t1265;
  double t1269;
  double t1270;
  double t1271;
  double t1272;
  double t1274;
  double t1276;
  double t1277;
  double t1279;
  double t1281;
  double t1435;
  double t1439;
  double t1440;
  double t1058;
  double t1083;
  double t1090;
  double t1093;
  double t1094;
  double t1095;
  double t1097;
  double t1098;
  double t1099;
  double t1103;
  double t1105;
  double t1112;
  double t1115;
  double t1119;
  double t1124;
  double t1125;
  double t1008;
  double t1009;
  double t1025;
  double t1037;
  double t1126;
  double t1527;
  double t1531;
  double t1537;
  double t1544;
  double t1554;
  double t1555;
  double t1558;
  double t1562;
  double t1140;
  double t1149;
  double t1150;
  double t1154;
  double t1176;
  double t1183;
  double t1190;
  double t1202;
  double t1203;
  double t1204;
  double t1206;
  double t1209;
  double t1211;
  double t1220;
  double t1221;
  double t1223;
  double t1224;
  double t1225;
  double t1226;
  double t1227;
  double t1233;
  double t1237;
  double t1282;
  double t1423;
  double t1429;
  double t1646;
  double t1658;
  double t1664;
  double t1638;
  double t1643;
  double t1657;
  double t1666;
  double t1668;
  double t1670;
  double t1676;
  double t1687;
  double t1688;
  double t1689;
  double t1691;
  double t1692;
  double t1693;
  double t1695;
  double t1698;
  double t1702;
  double t1805;
  double t1831;
  double t1802;
  double t1849;
  double t1751;
  double t1757;
  double t1759;
  double t1764;
  double t1765;
  double t1769;
  double t1770;
  double t1778;
  double t1780;
  double t1784;
  double t1787;
  double t1792;
  double t1796;
  double t1797;
  double t1806;
  double t1808;
  double t1811;
  double t1813;
  double t1816;
  double t1824;
  double t1825;
  double t1827;
  double t1829;
  double t1832;
  double t1837;
  double t1838;
  double t1847;
  double t1848;
  double t1852;
  double t1858;
  double t1860;
  double t1865;
  double t1871;
  double t1872;
  double t1881;
  double t1882;
  double t1886;
  double t1888;
  double t1890;
  double t1234;
  double t1568;
  double t1585;
  double t1592;
  double t1284;
  double t1285;
  double t1289;
  double t1290;
  double t1292;
  double t1295;
  double t1305;
  double t1307;
  double t1309;
  double t1313;
  double t1356;
  double t1381;
  double t1396;
  double t1399;
  double t1402;
  double t1405;
  double t1411;
  double t1430;
  double t1431;
  double t1444;
  double t1445;
  double t1452;
  double t1460;
  double t1468;
  double t1471;
  double t1472;
  double t1475;
  double t1476;
  double t1477;
  double t1478;
  double t1479;
  double t1488;
  double t1492;
  double t1497;
  double t1506;
  double t1566;
  double t1567;
  double t1615;
  double t1622;
  double t1627;
  double t1710;
  double t1714;
  double t1716;
  double t2030;
  double t2032;
  double t2033;
  double t1895;
  double t1900;
  double t1902;
  double t1903;
  double t1905;
  double t1915;
  double t1917;
  double t1919;
  double t1921;
  double t1922;
  double t1923;
  double t1927;
  double t1928;
  double t1930;
  double t1937;
  double t1940;
  double t1956;
  double t1963;
  double t1969;
  double t1970;
  double t1976;
  double t1979;
  double t1987;
  double t1989;
  double t1991;
  double t1995;
  double t1996;
  double t1997;
  double t1999;
  double t2000;
  double t2004;
  double t2014;
  double t2081;
  double t2074;
  double t2076;
  double t2077;
  double t2124;
  double t2019;
  double t2020;
  double t2024;
  double t1128;
  double t1415;
  double t1521;
  double t2156;
  double t2157;
  double t2158;
  double t2159;
  double t2160;
  double t2162;
  double t2163;
  double t2165;
  double t2166;
  double t2168;
  double t2169;
  double t2170;
  double t2171;
  double t2173;
  double t2174;
  double t2175;
  double t2176;
  double t2179;
  double t2182;
  double t2183;
  double t2184;
  double t2185;
  double t2188;
  double t2190;
  double t2192;
  double t2194;
  double t2196;
  double t2200;
  double t2203;
  double t2207;
  double t2209;
  double t2217;
  double t2219;
  double t2221;
  double t2222;
  double t2253;
  double t2244;
  double t2245;
  double t2252;
  double t2255;
  double t2259;
  double t2262;
  double t2263;
  double t2264;
  double t2266;
  double t2270;
  double t2271;
  double t2273;
  double t2274;
  double t2284;
  double t2287;
  double t2290;
  double t2291;
  double t2292;
  double t2294;
  double t2295;
  double t2298;
  double t2060;
  double t2061;
  double t2064;
  double t1894;
  double t1954;
  double t2015;
  double t2428;
  double t2422;
  double t2426;
  double t2431;
  double t2436;
  double t2440;
  double t2447;
  double t2448;
  double t2449;
  double t2427;
  double t2432;
  double t2434;
  double t2455;
  double t2456;
  double t2458;
  double t2464;
  double t2466;
  double t2467;
  double t2476;
  double t2481;
  double t2469;
  double t2470;
  double t2471;
  double t2494;
  double t2472;
  double t2541;
  double t2562;
  double t2564;
  double t2442;
  double t2577;
  double t2578;
  double t2459;
  double t2463;
  double t2587;
  double t2589;
  double t2590;
  double t2482;
  double t2598;
  double t2601;
  double t2492;
  double t2493;
  double t2495;
  double t2497;
  double t2498;
  double t2503;
  double t2504;
  double t2505;
  double t2506;
  double t2603;
  double t2604;
  double t2510;
  double t2511;
  double t2513;
  double t2517;
  double t2518;
  double t2520;
  double t2530;
  double t2532;
  double t2533;
  double t2535;
  double t2537;
  double t2540;
  double t2543;
  double t2544;
  double t2545;
  double t2549;
  double t2550;
  double t2552;
  double t2437;
  double t2444;
  double t2445;
  double t2450;
  double t2451;
  double t2452;
  double t2454;
  double t2468;
  double t2484;
  double t2488;
  double t2489;
  double t2509;
  double t2515;
  double t2523;
  double t2524;
  double t2525;
  double t2547;
  double t2551;
  double t2554;
  double t2555;
  double t2556;
  double t2558;
  double t2565;
  double t2566;
  double t2569;
  double t2572;
  double t2573;
  double t2575;
  double t2579;
  double t2580;
  double t2591;
  double t2592;
  double t2593;
  double t2647;
  double t2648;
  double t2649;
  double t2653;
  double t2654;
  double t2656;
  double t2659;
  double t2660;
  double t2661;
  double t2694;
  double t2695;
  double t2723;
  double t2727;
  double t2633;
  double t2634;
  double t2686;
  double t2687;
  double t2688;
  double t2689;
  double t2690;
  double t2691;
  double t2696;
  double t2699;
  double t2700;
  double t2701;
  double t2702;
  double t2703;
  double t2705;
  double t2707;
  double t2710;
  double t2711;
  double t2712;
  double t2713;
  double t2715;
  double t2760;
  double t2763;
  double t2765;
  double t2586;
  double t2594;
  double t2602;
  double t2605;
  double t2609;
  double t2610;
  double t2611;
  double t2612;
  double t2615;
  double t2616;
  double t2617;
  double t2619;
  double t2623;
  double t2624;
  double t2625;
  double t2627;
  double t2559;
  double t2560;
  double t2570;
  double t2576;
  double t2628;
  double t2794;
  double t2795;
  double t2796;
  double t2797;
  double t2800;
  double t2802;
  double t2803;
  double t2804;
  double t2638;
  double t2640;
  double t2643;
  double t2644;
  double t2650;
  double t2651;
  double t2658;
  double t2663;
  double t2665;
  double t2666;
  double t2669;
  double t2670;
  double t2671;
  double t2672;
  double t2673;
  double t2674;
  double t2675;
  double t2677;
  double t2678;
  double t2679;
  double t2683;
  double t2685;
  double t2716;
  double t2755;
  double t2757;
  double t2821;
  double t2824;
  double t2825;
  double t2817;
  double t2820;
  double t2823;
  double t2826;
  double t2828;
  double t2829;
  double t2830;
  double t2831;
  double t2833;
  double t2835;
  double t2836;
  double t2838;
  double t2839;
  double t2840;
  double t2842;
  double t2843;
  double t2906;
  double t2930;
  double t2896;
  double t2943;
  double t2864;
  double t2865;
  double t2866;
  double t2867;
  double t2868;
  double t2871;
  double t2872;
  double t2873;
  double t2878;
  double t2893;
  double t2907;
  double t2912;
  double t2917;
  double t2918;
  double t2919;
  double t2925;
  double t2926;
  double t2927;
  double t2929;
  double t2931;
  double t2933;
  double t2935;
  double t2936;
  double t2937;
  double t2938;
  double t2939;
  double t2940;
  double t2941;
  double t2945;
  double t2948;
  double t2949;
  double t2950;
  double t2951;
  double t2952;
  double t2955;
  double t2957;
  double t2958;
  double t2959;
  double t2960;
  double t2684;
  double t2810;
  double t2811;
  double t2812;
  double t2721;
  double t2722;
  double t2730;
  double t2731;
  double t2735;
  double t2739;
  double t2740;
  double t2741;
  double t2744;
  double t2745;
  double t2746;
  double t2747;
  double t2748;
  double t2750;
  double t2751;
  double t2752;
  double t2753;
  double t2758;
  double t2759;
  double t2769;
  double t2770;
  double t2771;
  double t2772;
  double t2773;
  double t2774;
  double t2777;
  double t2778;
  double t2779;
  double t2781;
  double t2783;
  double t2785;
  double t2786;
  double t2788;
  double t2790;
  double t2791;
  double t2807;
  double t2808;
  double t2814;
  double t2815;
  double t2816;
  double t2844;
  double t2845;
  double t2846;
  double t3058;
  double t3059;
  double t3061;
  double t2963;
  double t2965;
  double t2966;
  double t2967;
  double t2968;
  double t2972;
  double t2973;
  double t2975;
  double t2978;
  double t2979;
  double t2981;
  double t2982;
  double t2983;
  double t2984;
  double t2987;
  double t2988;
  double t2994;
  double t2995;
  double t2998;
  double t3007;
  double t3011;
  double t3013;
  double t3017;
  double t3020;
  double t3024;
  double t3028;
  double t3030;
  double t3033;
  double t3035;
  double t3036;
  double t3038;
  double t3040;
  double t3104;
  double t3093;
  double t3094;
  double t3099;
  double t3168;
  double t3046;
  double t3047;
  double t3051;
  double t2630;
  double t2754;
  double t2792;
  double t3216;
  double t3217;
  double t3218;
  double t3219;
  double t3221;
  double t3223;
  double t3224;
  double t3225;
  double t3226;
  double t3227;
  double t3228;
  double t3230;
  double t3232;
  double t3233;
  double t3234;
  double t3235;
  double t3238;
  double t3239;
  double t3241;
  double t3242;
  double t3243;
  double t3250;
  double t3252;
  double t3256;
  double t3260;
  double t3261;
  double t3272;
  double t3273;
  double t3274;
  double t3275;
  double t3276;
  double t3280;
  double t3290;
  double t3293;
  double t3294;
  double t3327;
  double t3309;
  double t3315;
  double t3323;
  double t3329;
  double t3332;
  double t3334;
  double t3335;
  double t3337;
  double t3341;
  double t3350;
  double t3377;
  double t3388;
  double t3389;
  double t3398;
  double t3401;
  double t3405;
  double t3414;
  double t3421;
  double t3422;
  double t3428;
  double t3433;
  double t3084;
  double t3085;
  double t3086;
  double t2962;
  double t2989;
  double t3041;
  t250 = Cos(var1[9]);
  t35 = Cos(var1[10]);
  t88 = Sin(var1[9]);
  t273 = Sin(var1[10]);
  t395 = Cos(var1[11]);
  t398 = Sin(var1[11]);
  t462 = t250*t35;
  t470 = -1.*t88*t273;
  t484 = t462 + t470;
  t220 = -1.*t35*t88;
  t332 = -1.*t250*t273;
  t378 = t220 + t332;
  t503 = Cos(var1[12]);
  t510 = -1.*t503;
  t517 = 1. + t510;
  t532 = -1.*t395*t484;
  t535 = -1.*t378*t398;
  t538 = t532 + t535;
  t579 = Sin(var1[12]);
  t552 = t395*t378;
  t553 = -1.*t484*t398;
  t554 = t552 + t553;
  t608 = -0.996943*t579;
  t895 = -0.0004284921280000001*t517;
  t572 = 0.0004284921280000001*t517;
  t971 = 0.996943*t579;
  t1010 = -1.*t35;
  t1012 = 1. + t1010;
  t400 = -0.70544*t398;
  t1039 = -1.*t395;
  t1050 = 1. + t1039;
  t518 = -0.999969365345*t517;
  t530 = 1. + t518;
  t1060 = -1.*t250*t35;
  t1065 = t88*t273;
  t1066 = t1060 + t1065;
  t627 = t572 + t608;
  t1085 = t395*t1066;
  t1086 = t1085 + t535;
  t752 = 0.005481192614*t517;
  t757 = -0.077936*t579;
  t769 = t752 + t757;
  t1091 = t1066*t398;
  t1092 = t552 + t1091;
  t820 = 0.07769774964800001*t517;
  t822 = 0.005498*t579;
  t836 = t820 + t822;
  t872 = -1.2096424700126054e-9*var1[12];
  t873 = -0.6934128581485427*t517;
  t904 = t895 + t608;
  t907 = -0.021877537552*t904;
  t915 = -0.005481192614*t517;
  t917 = 0.077936*t579;
  t931 = t915 + t917;
  t934 = 0.005534467322*t931;
  t941 = t872 + t873 + t907 + t934;
  t951 = -1.7147089040178687e-8*var1[12];
  t959 = -0.021744644052735636*t517;
  t960 = -0.07769774964800001*t517;
  t964 = -0.005498*t579;
  t965 = t960 + t964;
  t969 = 0.005534467322*t965;
  t972 = t895 + t971;
  t976 = -0.6934341012630001*t972;
  t980 = t951 + t959 + t969 + t976;
  t991 = -0.993925573253*t517;
  t994 = 1. + t991;
  t1000 = t572 + t971;
  t397 = -0.01841*t395;
  t405 = t397 + t400;
  t418 = -1.*t378*t405;
  t492 = -0.70544*t395;
  t496 = 0.01841*t398;
  t499 = t492 + t496;
  t500 = -1.*t484*t499;
  t541 = t530*t538;
  t720 = t554*t627;
  t747 = t541 + t720;
  t750 = 0.588518*t747;
  t783 = t538*t769;
  t861 = t554*t836;
  t862 = t783 + t861;
  t871 = -0.124503*t862;
  t944 = -1.*t538*t941;
  t990 = -1.*t554*t980;
  t999 = t994*t554;
  t1001 = t538*t1000;
  t1002 = t999 + t1001;
  t1005 = -0.045407*t1002;
  t1006 = t418 + t500 + t750 + t871 + t944 + t990 + t1005;
  t1017 = -0.00159*t1012;
  t1018 = -0.27068*t273;
  t1023 = t1017 + t1018;
  t1033 = -0.27068*t1012;
  t1035 = 0.00159*t273;
  t1036 = t1033 + t1035;
  t1053 = 0.01841*t1050;
  t1056 = t1053 + t400;
  t1076 = -0.70544*t1050;
  t1077 = -0.01841*t398;
  t1082 = t1076 + t1077;
  t1165 = t35*t88;
  t1166 = t250*t273;
  t1173 = t1165 + t1166;
  t1184 = t395*t484;
  t1185 = -1.*t1173*t398;
  t1188 = t1184 + t1185;
  t1191 = t395*t1173;
  t1192 = t484*t398;
  t1199 = t1191 + t1192;
  t1257 = t378*t398;
  t1258 = t1184 + t1257;
  t1286 = -1.*t395*t1173;
  t1287 = t1286 + t553;
  t1138 = -1.*t250;
  t1139 = 1. + t1138;
  t1240 = 0.21*t88;
  t1242 = -1.*t250*t1023;
  t1244 = t88*t1036;
  t1251 = -1.*t484*t1056;
  t1252 = -1.*t378*t1082;
  t1254 = t530*t554;
  t1259 = t1258*t627;
  t1261 = t1254 + t1259;
  t1263 = 0.588518*t1261;
  t1265 = t554*t769;
  t1269 = t1258*t836;
  t1270 = t1265 + t1269;
  t1271 = -0.124503*t1270;
  t1272 = -1.*t554*t941;
  t1274 = -1.*t1258*t980;
  t1276 = t994*t1258;
  t1277 = t554*t1000;
  t1279 = t1276 + t1277;
  t1281 = -0.045407*t1279;
  t1435 = -1.*t395*t378;
  t1439 = -1.*t1066*t398;
  t1440 = t1435 + t1439;
  t1058 = -1.*t378*t1056;
  t1083 = -1.*t1066*t1082;
  t1090 = t530*t1086;
  t1093 = t1092*t627;
  t1094 = t1090 + t1093;
  t1095 = 0.588518*t1094;
  t1097 = t1086*t769;
  t1098 = t1092*t836;
  t1099 = t1097 + t1098;
  t1103 = -0.124503*t1099;
  t1105 = -1.*t1086*t941;
  t1112 = -1.*t1092*t980;
  t1115 = t994*t1092;
  t1119 = t1086*t1000;
  t1124 = t1115 + t1119;
  t1125 = -0.045407*t1124;
  t1008 = 0.21*t250;
  t1009 = 0.049*t88;
  t1025 = t88*t1023;
  t1037 = t250*t1036;
  t1126 = t1008 + t1009 + t1025 + t1037 + t1058 + t1083 + t1095 + t1103 + t1105 + t1112 + t1125;
  t1527 = 0.00159*t35;
  t1531 = t1527 + t1018;
  t1537 = t88*t1531;
  t1544 = -0.27068*t35;
  t1554 = -0.00159*t273;
  t1555 = t1544 + t1554;
  t1558 = -1.*t250*t1555;
  t1562 = t1537 + t1558 + t1058 + t1083 + t1095 + t1103 + t1105 + t1112 + t1125;
  t1140 = 0.21*t1139;
  t1149 = -0.049*t88;
  t1150 = -1.*t88*t1023;
  t1154 = -1.*t250*t1036;
  t1176 = -1.*t1173*t1056;
  t1183 = -1.*t484*t1082;
  t1190 = t530*t1188;
  t1202 = t1199*t627;
  t1203 = t1190 + t1202;
  t1204 = 0.588518*t1203;
  t1206 = t1188*t769;
  t1209 = t1199*t836;
  t1211 = t1206 + t1209;
  t1220 = -0.124503*t1211;
  t1221 = -1.*t1188*t941;
  t1223 = -1.*t1199*t980;
  t1224 = t994*t1199;
  t1225 = t1188*t1000;
  t1226 = t1224 + t1225;
  t1227 = -0.045407*t1226;
  t1233 = -0.09 + t1140 + t1149 + t1150 + t1154 + t1176 + t1183 + t1204 + t1220 + t1221 + t1223 + t1227;
  t1237 = -0.049*t250;
  t1282 = t1237 + t1240 + t1242 + t1244 + t1251 + t1252 + t1263 + t1271 + t1272 + t1274 + t1281;
  t1423 = 0.049*t1139;
  t1429 = -0.049 + t1423 + t1240 + t1242 + t1244 + t1251 + t1252 + t1263 + t1271 + t1272 + t1274 + t1281;
  t1646 = t1191 + t1439;
  t1658 = t1173*t398;
  t1664 = t1085 + t1658;
  t1638 = -1.*t1066*t1056;
  t1643 = -1.*t1173*t1082;
  t1657 = t530*t1646;
  t1666 = t1664*t627;
  t1668 = t1657 + t1666;
  t1670 = 0.588518*t1668;
  t1676 = t1646*t769;
  t1687 = t1664*t836;
  t1688 = t1676 + t1687;
  t1689 = -0.124503*t1688;
  t1691 = -1.*t1646*t941;
  t1692 = -1.*t1664*t980;
  t1693 = t994*t1664;
  t1695 = t1646*t1000;
  t1698 = t1693 + t1695;
  t1702 = -0.045407*t1698;
  t1805 = -0.0004284921280000001*t579;
  t1831 = 0.996943*t503;
  t1802 = -0.996943*t503;
  t1849 = 0.0004284921280000001*t579;
  t1751 = -0.077936*t503;
  t1757 = 0.005481192614*t579;
  t1759 = t1751 + t1757;
  t1764 = t554*t1759;
  t1765 = 0.005498*t503;
  t1769 = 0.07769774964800001*t579;
  t1770 = t1765 + t1769;
  t1778 = t1258*t1770;
  t1780 = t1764 + t1778;
  t1784 = -0.124503*t1780;
  t1787 = 0.077936*t503;
  t1792 = -0.005481192614*t579;
  t1796 = t1787 + t1792;
  t1797 = 0.005534467322*t1796;
  t1806 = t1802 + t1805;
  t1808 = -0.021877537552*t1806;
  t1811 = -0.6934128581485427*t579;
  t1813 = -1.2096424700126054e-9 + t1797 + t1808 + t1811;
  t1816 = -1.*t554*t1813;
  t1824 = -0.005498*t503;
  t1825 = -0.07769774964800001*t579;
  t1827 = t1824 + t1825;
  t1829 = 0.005534467322*t1827;
  t1832 = t1831 + t1805;
  t1837 = -0.6934341012630001*t1832;
  t1838 = -0.021744644052735636*t579;
  t1847 = -1.7147089040178687e-8 + t1829 + t1837 + t1838;
  t1848 = -1.*t1258*t1847;
  t1852 = t1831 + t1849;
  t1858 = t554*t1852;
  t1860 = -0.993925573253*t1258*t579;
  t1865 = t1858 + t1860;
  t1871 = -0.045407*t1865;
  t1872 = t1802 + t1849;
  t1881 = t1258*t1872;
  t1882 = -0.999969365345*t554*t579;
  t1886 = t1881 + t1882;
  t1888 = 0.588518*t1886;
  t1890 = t1784 + t1816 + t1848 + t1871 + t1888;
  t1234 = 2.*t1006*t1233;
  t1568 = -1.*t250*t1531;
  t1585 = -1.*t88*t1555;
  t1592 = t1568 + t1585 + t1251 + t1252 + t1263 + t1271 + t1272 + t1274 + t1281;
  t1284 = -1.*t484*t405;
  t1285 = -1.*t1173*t499;
  t1289 = t530*t1287;
  t1290 = t1188*t627;
  t1292 = t1289 + t1290;
  t1295 = 0.588518*t1292;
  t1305 = t1287*t769;
  t1307 = t1188*t836;
  t1309 = t1305 + t1307;
  t1313 = -0.124503*t1309;
  t1356 = -1.*t1287*t941;
  t1381 = -1.*t1188*t980;
  t1396 = t994*t1188;
  t1399 = t1287*t1000;
  t1402 = t1396 + t1399;
  t1405 = -0.045407*t1402;
  t1411 = t1284 + t1285 + t1295 + t1313 + t1356 + t1381 + t1405;
  t1430 = -1.*t1066*t405;
  t1431 = -1.*t378*t499;
  t1444 = t530*t1440;
  t1445 = t1086*t627;
  t1452 = t1444 + t1445;
  t1460 = 0.588518*t1452;
  t1468 = t1440*t769;
  t1471 = t1086*t836;
  t1472 = t1468 + t1471;
  t1475 = -0.124503*t1472;
  t1476 = -1.*t1440*t941;
  t1477 = -1.*t1086*t980;
  t1478 = t994*t1086;
  t1479 = t1440*t1000;
  t1488 = t1478 + t1479;
  t1492 = -0.045407*t1488;
  t1497 = t1430 + t1431 + t1460 + t1475 + t1476 + t1477 + t1492;
  t1506 = 2.*t1429*t1497;
  t1566 = 2.*t1562*t1126;
  t1567 = 2.*t1562*t1233;
  t1615 = 2.*t1592*t1282;
  t1622 = t250*t1531;
  t1627 = t88*t1555;
  t1710 = t1622 + t1627 + t1638 + t1643 + t1670 + t1689 + t1691 + t1692 + t1702;
  t1714 = 2.*t1429*t1710;
  t1716 = t1566 + t1567 + t1615 + t1714;
  t2030 = -0.00159*t35;
  t2032 = 0.27068*t273;
  t2033 = t2030 + t2032;
  t1895 = 2.*t1233*t1890;
  t1900 = t1188*t1759;
  t1902 = t1199*t1770;
  t1903 = t1900 + t1902;
  t1905 = -0.124503*t1903;
  t1915 = -1.*t1188*t1813;
  t1917 = -1.*t1199*t1847;
  t1919 = t1199*t1872;
  t1921 = -0.999969365345*t1188*t579;
  t1922 = t1919 + t1921;
  t1923 = 0.588518*t1922;
  t1927 = t1188*t1852;
  t1928 = -0.993925573253*t1199*t579;
  t1930 = t1927 + t1928;
  t1937 = -0.045407*t1930;
  t1940 = t1905 + t1915 + t1917 + t1923 + t1937;
  t1956 = t1086*t1759;
  t1963 = t1092*t1770;
  t1969 = t1956 + t1963;
  t1970 = -0.124503*t1969;
  t1976 = -1.*t1086*t1813;
  t1979 = -1.*t1092*t1847;
  t1987 = t1092*t1872;
  t1989 = -0.999969365345*t1086*t579;
  t1991 = t1987 + t1989;
  t1995 = 0.588518*t1991;
  t1996 = t1086*t1852;
  t1997 = -0.993925573253*t1092*t579;
  t1999 = t1996 + t1997;
  t2000 = -0.045407*t1999;
  t2004 = t1970 + t1976 + t1979 + t1995 + t2000;
  t2014 = 2.*t1429*t2004;
  t2081 = t532 + t1658;
  t2074 = 0.01841*t395;
  t2076 = 0.70544*t398;
  t2077 = t2074 + t2076;
  t2124 = t1435 + t1192;
  t2019 = 2.*t1006*t1562;
  t2020 = 2.*t1592*t1411;
  t2024 = t2019 + t1234 + t2020 + t1506;
  t1128 = 2.*t1006*t1126;
  t1415 = 2.*t1282*t1411;
  t1521 = t1128 + t1234 + t1415 + t1506;
  t2156 = 2.*t1006*t1890;
  t2157 = t538*t1759;
  t2158 = t554*t1770;
  t2159 = t2157 + t2158;
  t2160 = -0.124503*t2159;
  t2162 = -1.*t538*t1813;
  t2163 = -1.*t554*t1847;
  t2165 = t554*t1872;
  t2166 = -0.999969365345*t538*t579;
  t2168 = t2165 + t2166;
  t2169 = 0.588518*t2168;
  t2170 = t538*t1852;
  t2171 = -0.993925573253*t554*t579;
  t2173 = t2170 + t2171;
  t2174 = -0.045407*t2173;
  t2175 = t2160 + t2162 + t2163 + t2169 + t2174;
  t2176 = 2.*t1429*t2175;
  t2179 = t1287*t1759;
  t2182 = t1188*t1770;
  t2183 = t2179 + t2182;
  t2184 = -0.124503*t2183;
  t2185 = -1.*t1287*t1813;
  t2188 = -1.*t1188*t1847;
  t2190 = t1287*t1852;
  t2192 = -0.993925573253*t1188*t579;
  t2194 = t2190 + t2192;
  t2196 = -0.045407*t2194;
  t2200 = t1188*t1872;
  t2203 = -0.999969365345*t1287*t579;
  t2207 = t2200 + t2203;
  t2209 = 0.588518*t2207;
  t2217 = t2184 + t2185 + t2188 + t2196 + t2209;
  t2219 = 2.*t1233*t2217;
  t2221 = 2.*t1411*t1940;
  t2222 = t2156 + t2176 + t2219 + t2221;
  t2253 = -0.0004284921280000001*t503;
  t2244 = 0.0004284921280000001*t503;
  t2245 = t2244 + t608;
  t2252 = -0.021744644052735636*t503;
  t2255 = t2253 + t608;
  t2259 = -0.6934341012630001*t2255;
  t2262 = -0.07769774964800001*t503;
  t2263 = t2262 + t822;
  t2264 = 0.005534467322*t2263;
  t2266 = t2252 + t2259 + t2264;
  t2270 = 0.07769774964800001*t503;
  t2271 = t2270 + t964;
  t2273 = 0.005481192614*t503;
  t2274 = t2273 + t917;
  t2284 = -0.6934128581485427*t503;
  t2287 = -0.005481192614*t503;
  t2290 = t2287 + t757;
  t2291 = 0.005534467322*t2290;
  t2292 = t2253 + t971;
  t2294 = -0.021877537552*t2292;
  t2295 = t2284 + t2291 + t2294;
  t2298 = t2244 + t971;
  t2060 = 2.*t1562*t1890;
  t2061 = 2.*t1592*t1940;
  t2064 = t2060 + t1895 + t2061 + t2014;
  t1894 = 2.*t1126*t1890;
  t1954 = 2.*t1282*t1940;
  t2015 = t1894 + t1895 + t1954 + t2014;
  t2428 = Cos(var1[17]);
  t2422 = Cos(var1[18]);
  t2426 = Sin(var1[17]);
  t2431 = Sin(var1[18]);
  t2436 = Cos(var1[19]);
  t2440 = Sin(var1[19]);
  t2447 = t2428*t2422;
  t2448 = -1.*t2426*t2431;
  t2449 = t2447 + t2448;
  t2427 = -1.*t2422*t2426;
  t2432 = -1.*t2428*t2431;
  t2434 = t2427 + t2432;
  t2455 = Cos(var1[20]);
  t2456 = -1.*t2455;
  t2458 = 1. + t2456;
  t2464 = -1.*t2436*t2449;
  t2466 = -1.*t2434*t2440;
  t2467 = t2464 + t2466;
  t2476 = Sin(var1[20]);
  t2481 = -0.996943*t2476;
  t2469 = t2436*t2434;
  t2470 = -1.*t2449*t2440;
  t2471 = t2469 + t2470;
  t2494 = -0.0004284921280000001*t2458;
  t2472 = 0.0004284921280000001*t2458;
  t2541 = 0.996943*t2476;
  t2562 = -1.*t2422;
  t2564 = 1. + t2562;
  t2442 = -0.70544*t2440;
  t2577 = -1.*t2436;
  t2578 = 1. + t2577;
  t2459 = -0.999969365345*t2458;
  t2463 = 1. + t2459;
  t2587 = -1.*t2428*t2422;
  t2589 = t2426*t2431;
  t2590 = t2587 + t2589;
  t2482 = t2472 + t2481;
  t2598 = t2436*t2590;
  t2601 = t2598 + t2466;
  t2492 = -1.2096424700126054e-9*var1[20];
  t2493 = -0.6934128581485427*t2458;
  t2495 = t2494 + t2481;
  t2497 = -0.021877537552*t2495;
  t2498 = 0.005481192614*t2458;
  t2503 = -0.077936*t2476;
  t2504 = t2498 + t2503;
  t2505 = -0.005534467322*t2504;
  t2506 = t2492 + t2493 + t2497 + t2505;
  t2603 = t2590*t2440;
  t2604 = t2469 + t2603;
  t2510 = -0.07769774964800001*t2458;
  t2511 = -0.005498*t2476;
  t2513 = t2510 + t2511;
  t2517 = -0.005481192614*t2458;
  t2518 = 0.077936*t2476;
  t2520 = t2517 + t2518;
  t2530 = -1.7147089040178687e-8*var1[20];
  t2532 = -0.021744644052735636*t2458;
  t2533 = 0.07769774964800001*t2458;
  t2535 = 0.005498*t2476;
  t2537 = t2533 + t2535;
  t2540 = -0.005534467322*t2537;
  t2543 = t2494 + t2541;
  t2544 = -0.6934341012630001*t2543;
  t2545 = t2530 + t2532 + t2540 + t2544;
  t2549 = -0.993925573253*t2458;
  t2550 = 1. + t2549;
  t2552 = t2472 + t2541;
  t2437 = -0.01841*t2436;
  t2444 = t2437 + t2442;
  t2445 = -1.*t2434*t2444;
  t2450 = -0.70544*t2436;
  t2451 = 0.01841*t2440;
  t2452 = t2450 + t2451;
  t2454 = -1.*t2449*t2452;
  t2468 = t2463*t2467;
  t2484 = t2471*t2482;
  t2488 = t2468 + t2484;
  t2489 = 0.588518*t2488;
  t2509 = -1.*t2467*t2506;
  t2515 = t2471*t2513;
  t2523 = t2467*t2520;
  t2524 = t2515 + t2523;
  t2525 = 0.124503*t2524;
  t2547 = -1.*t2471*t2545;
  t2551 = t2550*t2471;
  t2554 = t2467*t2552;
  t2555 = t2551 + t2554;
  t2556 = -0.045407*t2555;
  t2558 = t2445 + t2454 + t2489 + t2509 + t2525 + t2547 + t2556;
  t2565 = -0.00159*t2564;
  t2566 = -0.27068*t2431;
  t2569 = t2565 + t2566;
  t2572 = -0.27068*t2564;
  t2573 = 0.00159*t2431;
  t2575 = t2572 + t2573;
  t2579 = 0.01841*t2578;
  t2580 = t2579 + t2442;
  t2591 = -0.70544*t2578;
  t2592 = -0.01841*t2440;
  t2593 = t2591 + t2592;
  t2647 = t2422*t2426;
  t2648 = t2428*t2431;
  t2649 = t2647 + t2648;
  t2653 = t2436*t2449;
  t2654 = -1.*t2649*t2440;
  t2656 = t2653 + t2654;
  t2659 = t2436*t2649;
  t2660 = t2449*t2440;
  t2661 = t2659 + t2660;
  t2694 = t2434*t2440;
  t2695 = t2653 + t2694;
  t2723 = -1.*t2436*t2649;
  t2727 = t2723 + t2470;
  t2633 = -1.*t2428;
  t2634 = 1. + t2633;
  t2686 = 0.21*t2426;
  t2687 = -1.*t2428*t2569;
  t2688 = t2426*t2575;
  t2689 = -1.*t2449*t2580;
  t2690 = -1.*t2434*t2593;
  t2691 = t2463*t2471;
  t2696 = t2695*t2482;
  t2699 = t2691 + t2696;
  t2700 = 0.588518*t2699;
  t2701 = -1.*t2471*t2506;
  t2702 = t2695*t2513;
  t2703 = t2471*t2520;
  t2705 = t2702 + t2703;
  t2707 = 0.124503*t2705;
  t2710 = -1.*t2695*t2545;
  t2711 = t2550*t2695;
  t2712 = t2471*t2552;
  t2713 = t2711 + t2712;
  t2715 = -0.045407*t2713;
  t2760 = -1.*t2436*t2434;
  t2763 = -1.*t2590*t2440;
  t2765 = t2760 + t2763;
  t2586 = -1.*t2434*t2580;
  t2594 = -1.*t2590*t2593;
  t2602 = t2463*t2601;
  t2605 = t2604*t2482;
  t2609 = t2602 + t2605;
  t2610 = 0.588518*t2609;
  t2611 = -1.*t2601*t2506;
  t2612 = t2604*t2513;
  t2615 = t2601*t2520;
  t2616 = t2612 + t2615;
  t2617 = 0.124503*t2616;
  t2619 = -1.*t2604*t2545;
  t2623 = t2550*t2604;
  t2624 = t2601*t2552;
  t2625 = t2623 + t2624;
  t2627 = -0.045407*t2625;
  t2559 = 0.21*t2428;
  t2560 = 0.049*t2426;
  t2570 = t2426*t2569;
  t2576 = t2428*t2575;
  t2628 = t2559 + t2560 + t2570 + t2576 + t2586 + t2594 + t2610 + t2611 + t2617 + t2619 + t2627;
  t2794 = 0.00159*t2422;
  t2795 = t2794 + t2566;
  t2796 = t2426*t2795;
  t2797 = -0.27068*t2422;
  t2800 = -0.00159*t2431;
  t2802 = t2797 + t2800;
  t2803 = -1.*t2428*t2802;
  t2804 = t2796 + t2803 + t2586 + t2594 + t2610 + t2611 + t2617 + t2619 + t2627;
  t2638 = 0.21*t2634;
  t2640 = -0.049*t2426;
  t2643 = -1.*t2426*t2569;
  t2644 = -1.*t2428*t2575;
  t2650 = -1.*t2649*t2580;
  t2651 = -1.*t2449*t2593;
  t2658 = t2463*t2656;
  t2663 = t2661*t2482;
  t2665 = t2658 + t2663;
  t2666 = 0.588518*t2665;
  t2669 = -1.*t2656*t2506;
  t2670 = t2661*t2513;
  t2671 = t2656*t2520;
  t2672 = t2670 + t2671;
  t2673 = 0.124503*t2672;
  t2674 = -1.*t2661*t2545;
  t2675 = t2550*t2661;
  t2677 = t2656*t2552;
  t2678 = t2675 + t2677;
  t2679 = -0.045407*t2678;
  t2683 = -0.09 + t2638 + t2640 + t2643 + t2644 + t2650 + t2651 + t2666 + t2669 + t2673 + t2674 + t2679;
  t2685 = -0.049*t2428;
  t2716 = t2685 + t2686 + t2687 + t2688 + t2689 + t2690 + t2700 + t2701 + t2707 + t2710 + t2715;
  t2755 = 0.049*t2634;
  t2757 = -0.049 + t2755 + t2686 + t2687 + t2688 + t2689 + t2690 + t2700 + t2701 + t2707 + t2710 + t2715;
  t2821 = t2659 + t2763;
  t2824 = t2649*t2440;
  t2825 = t2598 + t2824;
  t2817 = -1.*t2590*t2580;
  t2820 = -1.*t2649*t2593;
  t2823 = t2463*t2821;
  t2826 = t2825*t2482;
  t2828 = t2823 + t2826;
  t2829 = 0.588518*t2828;
  t2830 = -1.*t2821*t2506;
  t2831 = t2825*t2513;
  t2833 = t2821*t2520;
  t2835 = t2831 + t2833;
  t2836 = 0.124503*t2835;
  t2838 = -1.*t2825*t2545;
  t2839 = t2550*t2825;
  t2840 = t2821*t2552;
  t2842 = t2839 + t2840;
  t2843 = -0.045407*t2842;
  t2906 = -0.0004284921280000001*t2476;
  t2930 = 0.996943*t2455;
  t2896 = -0.996943*t2455;
  t2943 = 0.0004284921280000001*t2476;
  t2864 = -0.005498*t2455;
  t2865 = -0.07769774964800001*t2476;
  t2866 = t2864 + t2865;
  t2867 = t2695*t2866;
  t2868 = 0.077936*t2455;
  t2871 = -0.005481192614*t2476;
  t2872 = t2868 + t2871;
  t2873 = t2471*t2872;
  t2878 = t2867 + t2873;
  t2893 = 0.124503*t2878;
  t2907 = t2896 + t2906;
  t2912 = -0.021877537552*t2907;
  t2917 = -0.077936*t2455;
  t2918 = 0.005481192614*t2476;
  t2919 = t2917 + t2918;
  t2925 = -0.005534467322*t2919;
  t2926 = -0.6934128581485427*t2476;
  t2927 = -1.2096424700126054e-9 + t2912 + t2925 + t2926;
  t2929 = -1.*t2471*t2927;
  t2931 = t2930 + t2906;
  t2933 = -0.6934341012630001*t2931;
  t2935 = 0.005498*t2455;
  t2936 = 0.07769774964800001*t2476;
  t2937 = t2935 + t2936;
  t2938 = -0.005534467322*t2937;
  t2939 = -0.021744644052735636*t2476;
  t2940 = -1.7147089040178687e-8 + t2933 + t2938 + t2939;
  t2941 = -1.*t2695*t2940;
  t2945 = t2930 + t2943;
  t2948 = t2471*t2945;
  t2949 = -0.993925573253*t2695*t2476;
  t2950 = t2948 + t2949;
  t2951 = -0.045407*t2950;
  t2952 = t2896 + t2943;
  t2955 = t2695*t2952;
  t2957 = -0.999969365345*t2471*t2476;
  t2958 = t2955 + t2957;
  t2959 = 0.588518*t2958;
  t2960 = t2893 + t2929 + t2941 + t2951 + t2959;
  t2684 = 2.*t2558*t2683;
  t2810 = -1.*t2428*t2795;
  t2811 = -1.*t2426*t2802;
  t2812 = t2810 + t2811 + t2689 + t2690 + t2700 + t2701 + t2707 + t2710 + t2715;
  t2721 = -1.*t2449*t2444;
  t2722 = -1.*t2649*t2452;
  t2730 = t2463*t2727;
  t2731 = t2656*t2482;
  t2735 = t2730 + t2731;
  t2739 = 0.588518*t2735;
  t2740 = -1.*t2727*t2506;
  t2741 = t2656*t2513;
  t2744 = t2727*t2520;
  t2745 = t2741 + t2744;
  t2746 = 0.124503*t2745;
  t2747 = -1.*t2656*t2545;
  t2748 = t2550*t2656;
  t2750 = t2727*t2552;
  t2751 = t2748 + t2750;
  t2752 = -0.045407*t2751;
  t2753 = t2721 + t2722 + t2739 + t2740 + t2746 + t2747 + t2752;
  t2758 = -1.*t2590*t2444;
  t2759 = -1.*t2434*t2452;
  t2769 = t2463*t2765;
  t2770 = t2601*t2482;
  t2771 = t2769 + t2770;
  t2772 = 0.588518*t2771;
  t2773 = -1.*t2765*t2506;
  t2774 = t2601*t2513;
  t2777 = t2765*t2520;
  t2778 = t2774 + t2777;
  t2779 = 0.124503*t2778;
  t2781 = -1.*t2601*t2545;
  t2783 = t2550*t2601;
  t2785 = t2765*t2552;
  t2786 = t2783 + t2785;
  t2788 = -0.045407*t2786;
  t2790 = t2758 + t2759 + t2772 + t2773 + t2779 + t2781 + t2788;
  t2791 = 2.*t2757*t2790;
  t2807 = 2.*t2804*t2628;
  t2808 = 2.*t2804*t2683;
  t2814 = 2.*t2812*t2716;
  t2815 = t2428*t2795;
  t2816 = t2426*t2802;
  t2844 = t2815 + t2816 + t2817 + t2820 + t2829 + t2830 + t2836 + t2838 + t2843;
  t2845 = 2.*t2757*t2844;
  t2846 = t2807 + t2808 + t2814 + t2845;
  t3058 = -0.00159*t2422;
  t3059 = 0.27068*t2431;
  t3061 = t3058 + t3059;
  t2963 = 2.*t2683*t2960;
  t2965 = t2661*t2866;
  t2966 = t2656*t2872;
  t2967 = t2965 + t2966;
  t2968 = 0.124503*t2967;
  t2972 = -1.*t2656*t2927;
  t2973 = -1.*t2661*t2940;
  t2975 = t2661*t2952;
  t2978 = -0.999969365345*t2656*t2476;
  t2979 = t2975 + t2978;
  t2981 = 0.588518*t2979;
  t2982 = t2656*t2945;
  t2983 = -0.993925573253*t2661*t2476;
  t2984 = t2982 + t2983;
  t2987 = -0.045407*t2984;
  t2988 = t2968 + t2972 + t2973 + t2981 + t2987;
  t2994 = t2604*t2866;
  t2995 = t2601*t2872;
  t2998 = t2994 + t2995;
  t3007 = 0.124503*t2998;
  t3011 = -1.*t2601*t2927;
  t3013 = -1.*t2604*t2940;
  t3017 = t2604*t2952;
  t3020 = -0.999969365345*t2601*t2476;
  t3024 = t3017 + t3020;
  t3028 = 0.588518*t3024;
  t3030 = t2601*t2945;
  t3033 = -0.993925573253*t2604*t2476;
  t3035 = t3030 + t3033;
  t3036 = -0.045407*t3035;
  t3038 = t3007 + t3011 + t3013 + t3028 + t3036;
  t3040 = 2.*t2757*t3038;
  t3104 = t2464 + t2824;
  t3093 = 0.01841*t2436;
  t3094 = 0.70544*t2440;
  t3099 = t3093 + t3094;
  t3168 = t2760 + t2660;
  t3046 = 2.*t2558*t2804;
  t3047 = 2.*t2812*t2753;
  t3051 = t3046 + t2684 + t3047 + t2791;
  t2630 = 2.*t2558*t2628;
  t2754 = 2.*t2716*t2753;
  t2792 = t2630 + t2684 + t2754 + t2791;
  t3216 = 2.*t2558*t2960;
  t3217 = t2471*t2866;
  t3218 = t2467*t2872;
  t3219 = t3217 + t3218;
  t3221 = 0.124503*t3219;
  t3223 = -1.*t2467*t2927;
  t3224 = -1.*t2471*t2940;
  t3225 = t2471*t2952;
  t3226 = -0.999969365345*t2467*t2476;
  t3227 = t3225 + t3226;
  t3228 = 0.588518*t3227;
  t3230 = t2467*t2945;
  t3232 = -0.993925573253*t2471*t2476;
  t3233 = t3230 + t3232;
  t3234 = -0.045407*t3233;
  t3235 = t3221 + t3223 + t3224 + t3228 + t3234;
  t3238 = 2.*t2757*t3235;
  t3239 = t2656*t2866;
  t3241 = t2727*t2872;
  t3242 = t3239 + t3241;
  t3243 = 0.124503*t3242;
  t3250 = -1.*t2727*t2927;
  t3252 = -1.*t2656*t2940;
  t3256 = t2727*t2945;
  t3260 = -0.993925573253*t2656*t2476;
  t3261 = t3256 + t3260;
  t3272 = -0.045407*t3261;
  t3273 = t2656*t2952;
  t3274 = -0.999969365345*t2727*t2476;
  t3275 = t3273 + t3274;
  t3276 = 0.588518*t3275;
  t3280 = t3243 + t3250 + t3252 + t3272 + t3276;
  t3290 = 2.*t2683*t3280;
  t3293 = 2.*t2753*t2988;
  t3294 = t3216 + t3238 + t3290 + t3293;
  t3327 = -0.0004284921280000001*t2455;
  t3309 = 0.0004284921280000001*t2455;
  t3315 = t3309 + t2481;
  t3323 = -0.021744644052735636*t2455;
  t3329 = t3327 + t2481;
  t3332 = -0.6934341012630001*t3329;
  t3334 = 0.07769774964800001*t2455;
  t3335 = t3334 + t2511;
  t3337 = -0.005534467322*t3335;
  t3341 = t3323 + t3332 + t3337;
  t3350 = -0.005481192614*t2455;
  t3377 = t3350 + t2503;
  t3388 = -0.07769774964800001*t2455;
  t3389 = t3388 + t2535;
  t3398 = -0.6934128581485427*t2455;
  t3401 = 0.005481192614*t2455;
  t3405 = t3401 + t2518;
  t3414 = -0.005534467322*t3405;
  t3421 = t3327 + t2541;
  t3422 = -0.021877537552*t3421;
  t3428 = t3398 + t3414 + t3422;
  t3433 = t3309 + t2541;
  t3084 = 2.*t2804*t2960;
  t3085 = 2.*t2812*t2988;
  t3086 = t3084 + t2963 + t3085 + t3040;
  t2962 = 2.*t2628*t2960;
  t2989 = 2.*t2716*t2988;
  t3041 = t2962 + t2963 + t2989 + t3040;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=(2.*Power(t1126,2) + 2.*t1126*t1233 + 2.*Power(t1282,2) + 2.*t1429*(t1638 + t1643 + t1670 + t1689 + t1691 + t1692 + t1702 + 0.049*t250 + t1023*t250 - 0.21*t88 - 1.*t1036*t88))*var2[9] + t1716*var2[10] + t1521*var2[11] + t2015*var2[12];
  p_output1[19]=0;
  p_output1[20]=t1716*var2[9] + (2.*Power(t1562,2) + 2.*Power(t1592,2) + 2.*t1429*(t1627 + t1638 + t1643 + t1670 + t1689 + t1691 + t1692 + t1702 - 1.*t2033*t250) + 2.*t1233*(t1058 + t1083 + t1095 + t1103 + t1105 + t1112 + t1125 + t1558 - 1.*t2033*t88))*var2[10] + t2024*var2[11] + t2064*var2[12];
  p_output1[21]=0;
  p_output1[22]=t1521*var2[9] + t2024*var2[10] + (2.*Power(t1006,2) + 2.*Power(t1411,2) + 2.*t1233*(-1.*t1173*t2077 + t500 + 0.588518*(t2081*t530 + t1287*t627) - 0.124503*(t2081*t769 + t1287*t836) - 1.*t2081*t941 - 1.*t1287*t980 - 0.045407*(t1000*t2081 + t1287*t994)) + 2.*t1429*(t1431 - 1.*t2077*t484 + 0.588518*(t2124*t530 + t538*t627) - 0.124503*(t2124*t769 + t538*t836) - 1.*t2124*t941 - 1.*t538*t980 - 0.045407*(t1000*t2124 + t538*t994)))*var2[11] + t2222*var2[12];
  p_output1[23]=0;
  p_output1[24]=t2015*var2[9] + t2064*var2[10] + t2222*var2[11] + (2.*Power(t1890,2) + 2.*Power(t1940,2) + 2.*t1233*(-1.*t1199*t2266 - 0.124503*(t1199*t2271 + t1188*t2274) - 1.*t1188*t2295 + 0.588518*(t1199*t2298 - 0.999969365345*t1188*t503) - 0.045407*(t1188*t2245 - 0.993925573253*t1199*t503)) + 2.*t1429*(-1.*t1258*t2266 - 1.*t2295*t554 - 0.045407*(-0.993925573253*t1258*t503 + t2245*t554) - 0.124503*(t1258*t2271 + t2274*t554) + 0.588518*(t1258*t2298 - 0.999969365345*t503*t554)) + 2.*Power(2.1934241414728571e-7 + 0.588518*(t1757 + t1787) + 0.6934341012630001*(t1751 + t1792) - 0.045407*(t1769 + t1824) + 0.021877537552*(t1765 + t1825) + 0.0007262134395594695*t579,2) + 2.*(0.0007262134395594695*t503 + 0.588518*(t2273 + t757) - 0.045407*(t2270 + t822) + 0.6934341012630001*(t2287 + t917) + 0.021877537552*(t2262 + t964))*(0.09 - 0.124503*(1. - 0.006104248100000001*t517) - 0.000033783761634830594*t517 + 0.6934341012630001*(t757 + t915) + 0.588518*(t752 + t917) + 0.021877537552*(t822 + t960) - 0.045407*(t820 + t964) + 2.1934241414728571e-7*var1[12]))*var2[12];
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=(2.*Power(t2628,2) + 2.*t2628*t2683 + 2.*Power(t2716,2) + 2.*t2757*(-0.21*t2426 + 0.049*t2428 + t2428*t2569 - 1.*t2426*t2575 + t2817 + t2820 + t2829 + t2830 + t2836 + t2838 + t2843))*var2[17] + t2846*var2[18] + t2792*var2[19] + t3041*var2[20];
  p_output1[36]=0;
  p_output1[37]=t2846*var2[17] + (2.*Power(t2804,2) + 2.*Power(t2812,2) + 2.*t2683*(t2586 + t2594 + t2610 + t2611 + t2617 + t2619 + t2627 + t2803 - 1.*t2426*t3061) + 2.*t2757*(t2816 + t2817 + t2820 + t2829 + t2830 + t2836 + t2838 + t2843 - 1.*t2428*t3061))*var2[18] + t3051*var2[19] + t3086*var2[20];
  p_output1[38]=0;
  p_output1[39]=t2792*var2[17] + t3051*var2[18] + (2.*Power(t2558,2) + 2.*Power(t2753,2) + 2.*t2683*(t2454 - 1.*t2545*t2727 - 1.*t2649*t3099 - 1.*t2506*t3104 + 0.588518*(t2482*t2727 + t2463*t3104) + 0.124503*(t2513*t2727 + t2520*t3104) - 0.045407*(t2550*t2727 + t2552*t3104)) + 2.*t2757*(-1.*t2467*t2545 + t2759 - 1.*t2449*t3099 - 1.*t2506*t3168 + 0.588518*(t2467*t2482 + t2463*t3168) + 0.124503*(t2467*t2513 + t2520*t3168) - 0.045407*(t2467*t2550 + t2552*t3168)))*var2[19] + t3294*var2[20];
  p_output1[40]=0;
  p_output1[41]=t3041*var2[17] + t3086*var2[18] + t3294*var2[19] + (2.*Power(-2.1934241414728571e-7 - 0.0007262134395594695*t2476 + 0.588518*(t2871 + t2917) + 0.6934341012630001*(t2868 + t2918) - 0.045407*(t2865 + t2935) + 0.021877537552*(t2864 + t2936),2) + 2.*Power(t2960,2) + 2.*Power(t2988,2) + 2.*t2683*(-0.045407*(-0.993925573253*t2455*t2661 + t2656*t3315) - 1.*t2661*t3341 + 0.124503*(t2656*t3377 + t2661*t3389) - 1.*t2656*t3428 + 0.588518*(-0.999969365345*t2455*t2656 + t2661*t3433)) + 2.*t2757*(-0.045407*(-0.993925573253*t2455*t2695 + t2471*t3315) - 1.*t2695*t3341 + 0.124503*(t2471*t3377 + t2695*t3389) - 1.*t2471*t3428 + 0.588518*(-0.999969365345*t2455*t2471 + t2695*t3433)) + 2.*(-0.0007262134395594695*t2455 + 0.021877537552*(t2535 + t3334) + 0.588518*(t2518 + t3350) - 0.045407*(t2511 + t3388) + 0.6934341012630001*(t2503 + t3401))*(-0.09 + 0.124503*(1. - 0.006104248100000001*t2458) + 0.000033783761634830594*t2458 + 0.588518*(t2503 + t2517) + 0.6934341012630001*(t2498 + t2518) + 0.021877537552*(t2511 + t2533) - 0.045407*(t2510 + t2535) - 2.1934241414728571e-7*var1[20]))*var2[20];
  p_output1[42]=0;
  p_output1[43]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 2, (mwSize) 22, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#endif // MATLAB_MEX_FILE

namespace SymFunction
{

void Jdot_achilles_constraint_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}




