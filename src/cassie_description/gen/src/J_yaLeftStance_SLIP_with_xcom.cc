/*
 * Automatically Generated from Mathematica.
 * Mon 20 Dec 2021 14:46:04 GMT-08:00
 */

#ifdef MATLAB_MEX_FILE
// No need to include header
#else
#include "J_yaLeftStance_SLIP_with_xcom.hh"
#endif

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t203;
  double t257;
  double t280;
  double t306;
  double t309;
  double t345;
  double t348;
  double t351;
  double t341;
  double t370;
  double t679;
  double t706;
  double t718;
  double t746;
  double t824;
  double t827;
  double t846;
  double t863;
  double t868;
  double t871;
  double t879;
  double t895;
  double t897;
  double t899;
  double t913;
  double t915;
  double t916;
  double t919;
  double t923;
  double t928;
  double t930;
  double t936;
  double t937;
  double t942;
  double t953;
  double t954;
  double t955;
  double t973;
  double t977;
  double t981;
  double t983;
  double t1003;
  double t1004;
  double t1005;
  double t1022;
  double t1026;
  double t1027;
  double t1057;
  double t1059;
  double t356;
  double t368;
  double t369;
  double t482;
  double t650;
  double t1071;
  double t721;
  double t752;
  double t800;
  double t847;
  double t852;
  double t855;
  double t1076;
  double t1080;
  double t876;
  double t884;
  double t890;
  double t905;
  double t907;
  double t908;
  double t1089;
  double t1090;
  double t929;
  double t931;
  double t932;
  double t944;
  double t946;
  double t947;
  double t1132;
  double t1133;
  double t1134;
  double t1143;
  double t1119;
  double t1123;
  double t1151;
  double t1178;
  double t1140;
  double t1194;
  double t1191;
  double t1154;
  double t1199;
  double t1145;
  double t1241;
  double t1173;
  double t1202;
  double t1182;
  double t982;
  double t998;
  double t1001;
  double t1010;
  double t1012;
  double t1021;
  double t1033;
  double t1034;
  double t1040;
  double t1049;
  double t1053;
  double t1055;
  double t291;
  double t337;
  double t352;
  double t651;
  double t816;
  double t860;
  double t904;
  double t917;
  double t943;
  double t958;
  double t1006;
  double t1029;
  double t1046;
  double t1056;
  double t1341;
  double t1349;
  double t1350;
  double t1351;
  double t1353;
  double t1354;
  double t1355;
  double t1357;
  double t1358;
  double t1373;
  double t1410;
  double t1411;
  double t1417;
  double t1425;
  double t1426;
  double t1431;
  double t1433;
  double t1434;
  double t1435;
  double t1477;
  double t1480;
  double t1481;
  double t1498;
  double t1500;
  double t1503;
  double t1509;
  double t1511;
  double t1513;
  double t1515;
  double t1517;
  double t1520;
  double t1525;
  double t1526;
  double t1527;
  double t1529;
  double t1530;
  double t1531;
  double t1533;
  double t1534;
  double t1535;
  double t1537;
  double t1546;
  double t1553;
  double t1342;
  double t1343;
  double t1344;
  double t1347;
  double t1348;
  double t1352;
  double t1356;
  double t1399;
  double t1422;
  double t1432;
  double t1436;
  double t1438;
  double t1439;
  double t1440;
  double t1442;
  double t1444;
  double t1445;
  double t1446;
  double t1447;
  double t1595;
  double t1629;
  double t1645;
  double t1646;
  double t1654;
  double t1655;
  double t1131;
  double t1137;
  double t1146;
  double t1147;
  double t1157;
  double t1158;
  double t1159;
  double t1666;
  double t1667;
  double t1169;
  double t1172;
  double t1174;
  double t1177;
  double t1184;
  double t1185;
  double t1187;
  double t1189;
  double t1190;
  double t1192;
  double t1193;
  double t1195;
  double t1196;
  double t1197;
  double t1200;
  double t1203;
  double t1205;
  double t1208;
  double t1238;
  double t1239;
  double t1242;
  double t1244;
  double t1283;
  double t1288;
  double t1297;
  double t1308;
  double t1781;
  double t1784;
  double t1785;
  double t1793;
  double t1794;
  double t1802;
  double t1824;
  double t1826;
  double t1827;
  double t1839;
  double t1842;
  double t1853;
  double t1864;
  double t1867;
  double t1868;
  double t1870;
  double t1871;
  double t1872;
  double t1777;
  double t1778;
  double t1779;
  double t1787;
  double t1788;
  double t1791;
  double t1810;
  double t1811;
  double t1813;
  double t1911;
  double t1916;
  double t1942;
  double t1950;
  double t1952;
  double t1965;
  double t1967;
  double t1874;
  double t1875;
  double t1888;
  double t1891;
  double t1892;
  double t1895;
  double t1780;
  double t1792;
  double t1804;
  double t1814;
  double t1821;
  double t1822;
  double t1838;
  double t1863;
  double t1869;
  double t1873;
  double t1889;
  double t1908;
  double t2076;
  double t2077;
  double t2079;
  double t2088;
  double t2090;
  double t2091;
  double t2105;
  double t2117;
  double t2121;
  double t2129;
  double t2133;
  double t2137;
  double t2156;
  double t2157;
  double t2160;
  double t2180;
  double t2181;
  double t2184;
  double t2186;
  double t2188;
  double t2189;
  double t2203;
  double t2205;
  double t2206;
  double t2208;
  double t2209;
  double t2223;
  double t2229;
  double t2230;
  double t2231;
  double t2238;
  double t2239;
  double t2240;
  double t2074;
  double t2075;
  double t2080;
  double t2081;
  double t2082;
  double t2083;
  double t2084;
  double t2085;
  double t2086;
  double t2094;
  double t2126;
  double t2146;
  double t2162;
  double t2163;
  double t2164;
  double t2165;
  double t2168;
  double t2169;
  double t2172;
  double t2173;
  double t2175;
  double t2277;
  double t2278;
  double t2294;
  double t2298;
  double t2300;
  double t2316;
  double t2317;
  double t2375;
  double t2376;
  double t2377;
  double t2410;
  double t2412;
  double t2414;
  double t2416;
  double t2418;
  double t2422;
  double t2434;
  double t2435;
  double t2438;
  double t2442;
  double t2447;
  double t2449;
  double t2451;
  double t2453;
  double t2454;
  double t2465;
  double t2469;
  double t2473;
  double t2372;
  double t2373;
  double t2378;
  double t2399;
  double t2403;
  double t2521;
  double t2522;
  double t2542;
  double t2544;
  double t2579;
  double t2582;
  double t2485;
  double t2486;
  double t2488;
  double t2492;
  double t2493;
  double t2514;
  double t2374;
  double t2408;
  double t2415;
  double t2431;
  double t2439;
  double t2450;
  double t2455;
  double t2478;
  double t2489;
  double t2518;
  double t2708;
  double t2711;
  double t2716;
  double t2720;
  double t2723;
  double t2724;
  double t2738;
  double t2742;
  double t2747;
  double t2754;
  double t2755;
  double t2758;
  double t2783;
  double t2808;
  double t2828;
  double t2832;
  double t2838;
  double t2840;
  double t2852;
  double t2857;
  double t2858;
  double t2877;
  double t2878;
  double t2883;
  double t2888;
  double t2889;
  double t2891;
  double t2897;
  double t2898;
  double t2899;
  double t2901;
  double t2902;
  double t2903;
  double t2905;
  double t2906;
  double t2912;
  double t2915;
  double t2916;
  double t2919;
  double t2923;
  double t2924;
  double t2925;
  double t2707;
  double t2719;
  double t2726;
  double t2751;
  double t2762;
  double t2831;
  double t2844;
  double t2862;
  double t2863;
  double t2864;
  double t2865;
  double t2867;
  double t2868;
  double t2869;
  double t2870;
  double t2872;
  double t2937;
  double t2938;
  double t2947;
  double t2948;
  double t2958;
  double t2967;
  double t3035;
  double t3037;
  double t3039;
  double t3045;
  double t3047;
  double t3051;
  double t3052;
  double t3054;
  double t3055;
  double t3056;
  double t3058;
  double t3059;
  double t3060;
  double t3029;
  double t3031;
  double t3032;
  double t3041;
  double t3043;
  double t3077;
  double t3078;
  double t3118;
  double t3122;
  double t3066;
  double t3067;
  double t3068;
  double t3071;
  double t3073;
  double t3074;
  double t3040;
  double t3044;
  double t3048;
  double t3053;
  double t3057;
  double t3064;
  double t3070;
  double t3075;
  double t3195;
  double t3196;
  double t3197;
  double t3200;
  double t3203;
  double t3205;
  double t3206;
  double t3209;
  double t3211;
  double t3213;
  double t3215;
  double t3217;
  double t3218;
  double t3237;
  double t3238;
  double t3239;
  double t3242;
  double t3243;
  double t3245;
  double t3257;
  double t3265;
  double t3266;
  double t3267;
  double t3272;
  double t3275;
  double t3276;
  double t3198;
  double t3199;
  double t3204;
  double t3207;
  double t3214;
  double t3221;
  double t3223;
  double t3225;
  double t3226;
  double t3227;
  double t3229;
  double t3230;
  double t3231;
  double t3233;
  double t3298;
  double t3299;
  double t3316;
  double t3317;
  double t3382;
  double t3384;
  double t3388;
  double t3379;
  double t3389;
  double t3390;
  double t3394;
  double t3395;
  double t3365;
  double t3368;
  double t3369;
  double t3392;
  double t3393;
  double t3398;
  double t3399;
  double t3401;
  double t3407;
  double t3408;
  double t3409;
  double t3391;
  double t3396;
  double t3406;
  double t3410;
  double t3424;
  double t3425;
  double t3426;
  double t3423;
  double t3427;
  double t3429;
  double t3433;
  double t3436;
  double t3453;
  double t3454;
  double t3455;
  double t3452;
  double t3456;
  double t3457;
  double t3459;
  double t3461;
  double t3430;
  double t3438;
  double t3439;
  double t3440;
  double t3441;
  double t3442;
  double t3443;
  double t3445;
  double t3447;
  double t3448;
  double t3550;
  double t3546;
  double t3549;
  double t3556;
  double t3562;
  double t3567;
  double t3568;
  double t3574;
  double t3576;
  double t3577;
  double t3597;
  double t3608;
  double t3601;
  double t3604;
  double t3605;
  double t3612;
  double t3613;
  double t3614;
  double t3630;
  double t3633;
  double t3634;
  double t3641;
  double t3637;
  double t3642;
  double t3644;
  double t3645;
  double t3655;
  double t3658;
  double t3662;
  double t3663;
  double t3664;
  double t3665;
  double t3675;
  double t3708;
  double t3709;
  double t3710;
  double t3713;
  double t3679;
  double t3686;
  double t3693;
  double t3712;
  double t3714;
  double t3716;
  double t3720;
  double t3729;
  double t3732;
  double t3733;
  double t3736;
  double t3737;
  double t3740;
  double t3745;
  double t3748;
  double t3749;
  double t3751;
  double t3778;
  double t3779;
  double t3782;
  double t3786;
  double t3841;
  double t3843;
  double t3846;
  double t3850;
  double t3783;
  double t3791;
  double t3794;
  double t3795;
  double t3801;
  double t3802;
  double t3804;
  double t3806;
  double t3848;
  double t3810;
  double t3811;
  double t3814;
  double t3889;
  double t3865;
  double t3822;
  double t3823;
  double t3826;
  double t3923;
  double t3916;
  double t3851;
  double t3939;
  double t3868;
  double t3963;
  double t3884;
  double t3945;
  double t3890;
  double t3993;
  double t3995;
  double t3996;
  double t3998;
  double t3997;
  double t3999;
  double t4000;
  double t4001;
  double t4002;
  double t4003;
  double t4004;
  double t4005;
  double t4006;
  double t4007;
  double t4008;
  double t4010;
  double t4011;
  double t4012;
  double t4038;
  double t4039;
  double t4042;
  double t4044;
  double t4045;
  double t4046;
  double t4053;
  double t4054;
  double t4055;
  double t4058;
  double t4063;
  double t4065;
  double t4068;
  double t4069;
  double t4071;
  double t4073;
  double t4074;
  double t4075;
  double t4092;
  double t4094;
  double t4095;
  double t4101;
  double t4104;
  double t4105;
  double t4107;
  double t4108;
  double t4109;
  double t4115;
  double t4116;
  double t4117;
  double t4119;
  double t4120;
  double t4122;
  double t4124;
  double t4125;
  double t4126;
  double t4128;
  double t4129;
  double t4130;
  double t4132;
  double t4133;
  double t4134;
  double t4152;
  double t4153;
  double t4156;
  double t4158;
  double t4159;
  double t4162;
  double t4163;
  double t4165;
  double t4166;
  double t4164;
  double t4167;
  double t4168;
  double t4170;
  double t4171;
  double t4172;
  double t4169;
  double t4173;
  double t4174;
  double t4176;
  double t4177;
  double t4179;
  double t4175;
  double t4181;
  double t4182;
  double t4185;
  double t4188;
  double t4191;
  double t4030;
  double t4035;
  double t4036;
  double t4037;
  double t4043;
  double t4049;
  double t4057;
  double t4067;
  double t3840;
  double t3847;
  double t3860;
  double t3864;
  double t3873;
  double t3876;
  double t3877;
  double t3881;
  double t3883;
  double t3887;
  double t3888;
  double t3891;
  double t3902;
  double t3906;
  double t3911;
  double t3914;
  double t3917;
  double t3922;
  double t3924;
  double t3926;
  double t3927;
  double t3941;
  double t3946;
  double t3948;
  double t3949;
  double t3960;
  double t3961;
  double t3964;
  double t3966;
  double t3975;
  double t3977;
  double t3979;
  double t3981;
  double t4072;
  double t4076;
  double t4077;
  double t4078;
  double t4079;
  double t4081;
  double t4082;
  double t4083;
  double t4278;
  double t4281;
  double t4283;
  double t4274;
  double t4275;
  double t4277;
  double t4285;
  double t4286;
  double t4287;
  double t4289;
  double t4290;
  double t4291;
  double t4293;
  double t4294;
  double t4298;
  double t4299;
  double t4300;
  double t4306;
  double t4311;
  double t4313;
  double t4315;
  double t4316;
  double t4317;
  double t4320;
  double t4321;
  double t4322;
  double t4337;
  double t4339;
  double t4340;
  double t4341;
  double t4343;
  double t4347;
  double t4348;
  double t4349;
  double t4382;
  double t4383;
  double t4385;
  double t4386;
  double t4387;
  double t4390;
  double t4393;
  double t4394;
  double t4409;
  double t4410;
  double t4411;
  double t4425;
  double t4426;
  double t4427;
  double t4429;
  double t4430;
  double t4431;
  double t4433;
  double t4434;
  double t4435;
  double t4437;
  double t4438;
  double t4441;
  double t4455;
  double t4456;
  double t4457;
  double t4466;
  double t4467;
  double t4468;
  double t4473;
  double t4474;
  double t4475;
  double t4477;
  double t4478;
  double t4479;
  double t4481;
  double t4482;
  double t4483;
  double t4486;
  double t4487;
  double t4488;
  double t4510;
  double t4511;
  double t4512;
  double t4513;
  double t4514;
  double t4515;
  double t4518;
  double t4520;
  double t4521;
  double t4524;
  double t4526;
  double t4528;
  double t4529;
  double t4530;
  double t4527;
  double t4531;
  double t4533;
  double t4536;
  double t4539;
  double t4540;
  double t4404;
  double t4405;
  double t4413;
  double t4419;
  double t4421;
  double t4422;
  double t4414;
  double t4417;
  double t4428;
  double t4432;
  double t4436;
  double t4443;
  double t4445;
  double t4446;
  double t4448;
  double t4450;
  double t4451;
  double t4452;
  double t4634;
  double t4637;
  double t4638;
  double t4628;
  double t4629;
  double t4630;
  double t4631;
  double t4632;
  double t4633;
  double t4642;
  double t4643;
  double t4644;
  double t4646;
  double t4648;
  double t4649;
  double t4650;
  double t4655;
  double t4656;
  double t4657;
  double t4658;
  double t4659;
  double t4661;
  double t4662;
  double t4663;
  double t4675;
  double t4677;
  double t4678;
  double t4679;
  double t4680;
  double t4682;
  double t4684;
  double t4686;
  double t4716;
  double t4717;
  double t4718;
  double t4719;
  double t4721;
  double t4724;
  double t4727;
  double t4728;
  double t4738;
  double t4739;
  double t4740;
  double t4742;
  double t4743;
  double t4744;
  double t4746;
  double t4747;
  double t4748;
  double t4750;
  double t4751;
  double t4752;
  double t4754;
  double t4755;
  double t4756;
  double t4761;
  double t4762;
  double t4763;
  double t4765;
  double t4766;
  double t4767;
  double t4781;
  double t4784;
  double t4785;
  double t4787;
  double t4788;
  double t4789;
  double t4791;
  double t4792;
  double t4793;
  double t4795;
  double t4796;
  double t4797;
  double t4799;
  double t4800;
  double t4801;
  double t4803;
  double t4804;
  double t4805;
  double t4807;
  double t4808;
  double t4809;
  double t4821;
  double t4822;
  double t4823;
  double t4820;
  double t4824;
  double t4825;
  double t4827;
  double t4828;
  double t4829;
  double t4826;
  double t4830;
  double t4832;
  double t4835;
  double t4836;
  double t4837;
  double t4833;
  double t4838;
  double t4841;
  double t4843;
  double t4844;
  double t4845;
  double t4737;
  double t4741;
  double t4745;
  double t4749;
  double t4753;
  double t4759;
  double t4764;
  double t4768;
  double t4771;
  double t4772;
  double t4773;
  double t4775;
  double t4776;
  double t4777;
  double t4904;
  double t4905;
  double t4906;
  double t4899;
  double t4900;
  double t4903;
  double t4907;
  double t4908;
  double t4909;
  double t4910;
  double t4913;
  double t4914;
  double t4916;
  double t4917;
  double t4925;
  double t4926;
  double t4927;
  double t4928;
  double t4929;
  double t4931;
  double t4932;
  double t4933;
  double t4957;
  double t4958;
  double t4959;
  double t4960;
  double t4961;
  double t4963;
  double t4964;
  double t4965;
  double t4974;
  double t4975;
  double t4976;
  double t4979;
  double t4980;
  double t4982;
  double t4983;
  double t4987;
  double t4988;
  double t4989;
  double t4991;
  double t4992;
  double t4993;
  double t5004;
  double t5005;
  double t5006;
  double t5009;
  double t5010;
  double t5012;
  double t5013;
  double t5015;
  double t5016;
  double t5017;
  double t5019;
  double t5020;
  double t5021;
  double t5032;
  double t5033;
  double t5034;
  double t5035;
  double t5036;
  double t5038;
  double t5039;
  double t5037;
  double t5040;
  double t5041;
  double t5043;
  double t5044;
  double t5045;
  double t4977;
  double t4978;
  double t4981;
  double t4984;
  double t4990;
  double t4994;
  double t4995;
  double t4996;
  double t4997;
  double t4999;
  double t5000;
  double t5001;
  double t5093;
  double t5094;
  double t5095;
  double t5092;
  double t5096;
  double t5097;
  double t5101;
  double t5102;
  double t5089;
  double t5090;
  double t5091;
  double t5098;
  double t5099;
  double t5100;
  double t5103;
  double t5104;
  double t5105;
  double t5106;
  double t5108;
  double t5109;
  double t5110;
  double t5118;
  double t5119;
  double t5120;
  double t5117;
  double t5121;
  double t5122;
  double t5124;
  double t5125;
  double t5137;
  double t5138;
  double t5139;
  double t5136;
  double t5140;
  double t5141;
  double t5143;
  double t5144;
  double t5156;
  double t5157;
  double t5158;
  double t5155;
  double t5159;
  double t5160;
  double t5162;
  double t5163;
  double t5123;
  double t5126;
  double t5127;
  double t5128;
  double t5129;
  double t5131;
  double t5132;
  double t5133;
  t203 = Cos(var1[3]);
  t257 = Cos(var1[4]);
  t280 = Cos(var1[6]);
  t306 = Sin(var1[3]);
  t309 = Sin(var1[6]);
  t345 = t203*t257*t280;
  t348 = -1.*t306*t309;
  t351 = t345 + t348;
  t341 = Cos(var1[7]);
  t370 = Sin(var1[7]);
  t679 = Cos(var1[8]);
  t706 = -1.*t679;
  t718 = 1. + t706;
  t746 = Sin(var1[8]);
  t824 = -1.*t280*t306;
  t827 = -1.*t203*t257*t309;
  t846 = t824 + t827;
  t863 = Cos(var1[9]);
  t868 = -1.*t863;
  t871 = 1. + t868;
  t879 = Sin(var1[9]);
  t895 = t679*t351*t370;
  t897 = t846*t746;
  t899 = t895 + t897;
  t913 = t679*t846;
  t915 = -1.*t351*t370*t746;
  t916 = t913 + t915;
  t919 = Cos(var1[11]);
  t923 = -1.*t919;
  t928 = 1. + t923;
  t930 = Sin(var1[11]);
  t936 = -1.*t879*t899;
  t937 = t863*t916;
  t942 = t936 + t937;
  t953 = t863*t899;
  t954 = t879*t916;
  t955 = t953 + t954;
  t973 = Cos(var1[13]);
  t977 = -1.*t973;
  t981 = 1. + t977;
  t983 = Sin(var1[13]);
  t1003 = t930*t942;
  t1004 = t919*t955;
  t1005 = t1003 + t1004;
  t1022 = t919*t942;
  t1026 = -1.*t930*t955;
  t1027 = t1022 + t1026;
  t1057 = -0.135*t203*t257*t280;
  t1059 = 0.135*t306*t309;
  t356 = -1.*t341;
  t368 = 1. + t356;
  t369 = 0.135*t368;
  t482 = 0.049*t370;
  t650 = t369 + t482;
  t1071 = t351*t650;
  t721 = -0.049*t718;
  t752 = -0.09*t746;
  t800 = t721 + t752;
  t847 = -0.09*t718;
  t852 = 0.049*t746;
  t855 = t847 + t852;
  t1076 = t351*t370*t800;
  t1080 = t846*t855;
  t876 = -0.049*t871;
  t884 = -0.21*t879;
  t890 = t876 + t884;
  t905 = -0.21*t871;
  t907 = 0.049*t879;
  t908 = t905 + t907;
  t1089 = t890*t899;
  t1090 = t908*t916;
  t929 = -0.70544*t928;
  t931 = -0.01841*t930;
  t932 = t929 + t931;
  t944 = 0.01841*t928;
  t946 = -0.70544*t930;
  t947 = t944 + t946;
  t1132 = Cos(var1[12]);
  t1133 = -1.*t1132;
  t1134 = 1. + t1133;
  t1143 = Sin(var1[12]);
  t1119 = t932*t942;
  t1123 = t947*t955;
  t1151 = -0.07769774964800001*t1134;
  t1178 = -0.0004284921280000001*t1134;
  t1140 = -0.005481192614*t1134;
  t1194 = 0.077936*t1143;
  t1191 = -0.996943*t1143;
  t1154 = 0.005498*t1143;
  t1199 = 0.005481192614*t1134;
  t1145 = -0.077936*t1143;
  t1241 = 0.07769774964800001*t1134;
  t1173 = -0.005498*t1143;
  t1202 = 0.0004284921280000001*t1134;
  t1182 = 0.996943*t1143;
  t982 = -0.02159*t981;
  t998 = -1.11344*t983;
  t1001 = t982 + t998;
  t1010 = -1.11344*t981;
  t1012 = 0.02159*t983;
  t1021 = t1010 + t1012;
  t1033 = -1.*t983*t1005;
  t1034 = t973*t1027;
  t1040 = t1033 + t1034;
  t1049 = t973*t1005;
  t1053 = t983*t1027;
  t1055 = t1049 + t1053;
  t291 = 0.135*t203*t257*t280;
  t337 = -0.135*t306*t309;
  t352 = -0.1305*t341*t351;
  t651 = -1.*t351*t650;
  t816 = -1.*t351*t370*t800;
  t860 = -1.*t846*t855;
  t904 = -1.*t890*t899;
  t917 = -1.*t908*t916;
  t943 = -1.*t932*t942;
  t958 = -1.*t947*t955;
  t1006 = -1.*t1001*t1005;
  t1029 = -1.*t1021*t1027;
  t1046 = 1.11344*t1040;
  t1056 = 0.02159*t1055;
  t1341 = Sin(var1[4]);
  t1349 = t280*t679*t1341*t370;
  t1350 = -1.*t1341*t309*t746;
  t1351 = t1349 + t1350;
  t1353 = -1.*t679*t1341*t309;
  t1354 = -1.*t280*t1341*t370*t746;
  t1355 = t1353 + t1354;
  t1357 = -1.*t879*t1351;
  t1358 = t863*t1355;
  t1373 = t1357 + t1358;
  t1410 = t863*t1351;
  t1411 = t879*t1355;
  t1417 = t1410 + t1411;
  t1425 = t930*t1373;
  t1426 = t919*t1417;
  t1431 = t1425 + t1426;
  t1433 = t919*t1373;
  t1434 = -1.*t930*t1417;
  t1435 = t1433 + t1434;
  t1477 = -1.*t257*t280*t306;
  t1480 = -1.*t203*t309;
  t1481 = t1477 + t1480;
  t1498 = -1.*t203*t280;
  t1500 = t257*t306*t309;
  t1503 = t1498 + t1500;
  t1509 = t679*t1481*t370;
  t1511 = t1503*t746;
  t1513 = t1509 + t1511;
  t1515 = t679*t1503;
  t1517 = -1.*t1481*t370*t746;
  t1520 = t1515 + t1517;
  t1525 = -1.*t879*t1513;
  t1526 = t863*t1520;
  t1527 = t1525 + t1526;
  t1529 = t863*t1513;
  t1530 = t879*t1520;
  t1531 = t1529 + t1530;
  t1533 = t930*t1527;
  t1534 = t919*t1531;
  t1535 = t1533 + t1534;
  t1537 = t919*t1527;
  t1546 = -1.*t930*t1531;
  t1553 = t1537 + t1546;
  t1342 = 0.135*t280*t1341;
  t1343 = -0.1305*t280*t341*t1341;
  t1344 = -1.*t280*t1341*t650;
  t1347 = -1.*t280*t1341*t370*t800;
  t1348 = t1341*t309*t855;
  t1352 = -1.*t890*t1351;
  t1356 = -1.*t908*t1355;
  t1399 = -1.*t932*t1373;
  t1422 = -1.*t947*t1417;
  t1432 = -1.*t1001*t1431;
  t1436 = -1.*t1021*t1435;
  t1438 = -1.*t983*t1431;
  t1439 = t973*t1435;
  t1440 = t1438 + t1439;
  t1442 = 1.11344*t1440;
  t1444 = t973*t1431;
  t1445 = t983*t1435;
  t1446 = t1444 + t1445;
  t1447 = 0.02159*t1446;
  t1595 = -0.135*t280*t1341;
  t1629 = t280*t1341*t650;
  t1645 = t280*t1341*t370*t800;
  t1646 = -1.*t1341*t309*t855;
  t1654 = t890*t1351;
  t1655 = t908*t1355;
  t1131 = -2.1934241414728571e-7*var1[12];
  t1137 = 0.000033783761634830594*t1134;
  t1146 = t1140 + t1145;
  t1147 = -0.6934341012630001*t1146;
  t1157 = t1151 + t1154;
  t1158 = -0.021877537552*t1157;
  t1159 = t1131 + t1137 + t1147 + t1158;
  t1666 = t932*t1373;
  t1667 = t947*t1417;
  t1169 = -1.7147089040178687e-8*var1[12];
  t1172 = -0.021744644052735636*t1134;
  t1174 = t1151 + t1173;
  t1177 = 0.005534467322*t1174;
  t1184 = t1178 + t1182;
  t1185 = -0.6934341012630001*t1184;
  t1187 = t1169 + t1172 + t1177 + t1185;
  t1189 = -1.2096424700126054e-9*var1[12];
  t1190 = -0.6934128581485427*t1134;
  t1192 = t1178 + t1191;
  t1193 = -0.021877537552*t1192;
  t1195 = t1140 + t1194;
  t1196 = 0.005534467322*t1195;
  t1197 = t1189 + t1190 + t1193 + t1196;
  t1200 = t1199 + t1194;
  t1203 = t1202 + t1191;
  t1205 = -0.999969365345*t1134;
  t1208 = 1. + t1205;
  t1238 = -0.006104248100000001*t1134;
  t1239 = 1. + t1238;
  t1242 = t1241 + t1154;
  t1244 = t1199 + t1145;
  t1283 = t1241 + t1173;
  t1288 = -0.993925573253*t1134;
  t1297 = 1. + t1288;
  t1308 = t1202 + t1182;
  t1781 = t280*t306;
  t1784 = t203*t257*t309;
  t1785 = t1781 + t1784;
  t1793 = t341*t1785;
  t1794 = t203*t1341*t370;
  t1802 = t1793 + t1794;
  t1824 = -1.*t679*t879*t1802;
  t1826 = -1.*t863*t1802*t746;
  t1827 = t1824 + t1826;
  t1839 = t863*t679*t1802;
  t1842 = -1.*t879*t1802*t746;
  t1853 = t1839 + t1842;
  t1864 = t930*t1827;
  t1867 = t919*t1853;
  t1868 = t1864 + t1867;
  t1870 = t919*t1827;
  t1871 = -1.*t930*t1853;
  t1872 = t1870 + t1871;
  t1777 = 0.135*t341;
  t1778 = -0.049*t370;
  t1779 = t1777 + t1778;
  t1787 = 0.049*t341;
  t1788 = 0.135*t370;
  t1791 = t1787 + t1788;
  t1810 = t203*t341*t1341;
  t1811 = -1.*t1785*t370;
  t1813 = t1810 + t1811;
  t1911 = -1.*t203*t1341*t1779;
  t1916 = t1785*t1791;
  t1942 = t1802*t800;
  t1950 = t679*t890*t1802;
  t1952 = -1.*t908*t1802*t746;
  t1965 = t932*t1827;
  t1967 = t947*t1853;
  t1874 = -1.*t983*t1868;
  t1875 = t973*t1872;
  t1888 = t1874 + t1875;
  t1891 = t973*t1868;
  t1892 = t983*t1872;
  t1895 = t1891 + t1892;
  t1780 = t203*t1341*t1779;
  t1792 = -1.*t1785*t1791;
  t1804 = -1.*t679*t890*t1802;
  t1814 = -0.1305*t1813;
  t1821 = -1.*t1802*t800;
  t1822 = t908*t1802*t746;
  t1838 = -1.*t932*t1827;
  t1863 = -1.*t947*t1853;
  t1869 = -1.*t1001*t1868;
  t1873 = -1.*t1021*t1872;
  t1889 = 1.11344*t1888;
  t1908 = 0.02159*t1895;
  t2076 = t341*t1341*t309;
  t2077 = -1.*t257*t370;
  t2079 = t2076 + t2077;
  t2088 = -1.*t679*t879*t2079;
  t2090 = -1.*t863*t2079*t746;
  t2091 = t2088 + t2090;
  t2105 = t863*t679*t2079;
  t2117 = -1.*t879*t2079*t746;
  t2121 = t2105 + t2117;
  t2129 = t930*t2091;
  t2133 = t919*t2121;
  t2137 = t2129 + t2133;
  t2156 = t919*t2091;
  t2157 = -1.*t930*t2121;
  t2160 = t2156 + t2157;
  t2180 = t203*t280;
  t2181 = -1.*t257*t306*t309;
  t2184 = t2180 + t2181;
  t2186 = t341*t2184;
  t2188 = -1.*t306*t1341*t370;
  t2189 = t2186 + t2188;
  t2203 = -1.*t679*t879*t2189;
  t2205 = -1.*t863*t2189*t746;
  t2206 = t2203 + t2205;
  t2208 = t863*t679*t2189;
  t2209 = -1.*t879*t2189*t746;
  t2223 = t2208 + t2209;
  t2229 = t930*t2206;
  t2230 = t919*t2223;
  t2231 = t2229 + t2230;
  t2238 = t919*t2206;
  t2239 = -1.*t930*t2223;
  t2240 = t2238 + t2239;
  t2074 = -1.*t257*t1779;
  t2075 = -1.*t1341*t309*t1791;
  t2080 = -1.*t679*t890*t2079;
  t2081 = -1.*t257*t341;
  t2082 = -1.*t1341*t309*t370;
  t2083 = t2081 + t2082;
  t2084 = -0.1305*t2083;
  t2085 = -1.*t2079*t800;
  t2086 = t908*t2079*t746;
  t2094 = -1.*t932*t2091;
  t2126 = -1.*t947*t2121;
  t2146 = -1.*t1001*t2137;
  t2162 = -1.*t1021*t2160;
  t2163 = -1.*t983*t2137;
  t2164 = t973*t2160;
  t2165 = t2163 + t2164;
  t2168 = 1.11344*t2165;
  t2169 = t973*t2137;
  t2172 = t983*t2160;
  t2173 = t2169 + t2172;
  t2175 = 0.02159*t2173;
  t2277 = t257*t1779;
  t2278 = t1341*t309*t1791;
  t2294 = t2079*t800;
  t2298 = t679*t890*t2079;
  t2300 = -1.*t908*t2079*t746;
  t2316 = t932*t2091;
  t2317 = t947*t2121;
  t2375 = -1.*t203*t341*t1341;
  t2376 = t1785*t370;
  t2377 = t2375 + t2376;
  t2410 = -1.*t679*t2377;
  t2412 = -1.*t351*t746;
  t2414 = t2410 + t2412;
  t2416 = t679*t351;
  t2418 = -1.*t2377*t746;
  t2422 = t2416 + t2418;
  t2434 = t879*t2414;
  t2435 = t863*t2422;
  t2438 = t2434 + t2435;
  t2442 = t863*t2414;
  t2447 = -1.*t879*t2422;
  t2449 = t2442 + t2447;
  t2451 = -1.*t930*t2438;
  t2453 = t919*t2449;
  t2454 = t2451 + t2453;
  t2465 = t919*t2438;
  t2469 = t930*t2449;
  t2473 = t2465 + t2469;
  t2372 = 0.049*t679;
  t2373 = t2372 + t752;
  t2378 = -0.09*t679;
  t2399 = -0.049*t746;
  t2403 = t2378 + t2399;
  t2521 = t351*t2373;
  t2522 = t2377*t2403;
  t2542 = t908*t2414;
  t2544 = t890*t2422;
  t2579 = t947*t2438;
  t2582 = t932*t2449;
  t2485 = t983*t2454;
  t2486 = t973*t2473;
  t2488 = t2485 + t2486;
  t2492 = t973*t2454;
  t2493 = -1.*t983*t2473;
  t2514 = t2492 + t2493;
  t2374 = -1.*t351*t2373;
  t2408 = -1.*t2377*t2403;
  t2415 = -1.*t908*t2414;
  t2431 = -1.*t890*t2422;
  t2439 = -1.*t947*t2438;
  t2450 = -1.*t932*t2449;
  t2455 = -1.*t1021*t2454;
  t2478 = -1.*t1001*t2473;
  t2489 = 0.02159*t2488;
  t2518 = 1.11344*t2514;
  t2708 = t257*t341;
  t2711 = t1341*t309*t370;
  t2716 = t2708 + t2711;
  t2720 = -1.*t679*t2716;
  t2723 = -1.*t280*t1341*t746;
  t2724 = t2720 + t2723;
  t2738 = t280*t679*t1341;
  t2742 = -1.*t2716*t746;
  t2747 = t2738 + t2742;
  t2754 = t879*t2724;
  t2755 = t863*t2747;
  t2758 = t2754 + t2755;
  t2783 = t863*t2724;
  t2808 = -1.*t879*t2747;
  t2828 = t2783 + t2808;
  t2832 = -1.*t930*t2758;
  t2838 = t919*t2828;
  t2840 = t2832 + t2838;
  t2852 = t919*t2758;
  t2857 = t930*t2828;
  t2858 = t2852 + t2857;
  t2877 = t341*t306*t1341;
  t2878 = t2184*t370;
  t2883 = t2877 + t2878;
  t2888 = -1.*t679*t2883;
  t2889 = -1.*t1481*t746;
  t2891 = t2888 + t2889;
  t2897 = t679*t1481;
  t2898 = -1.*t2883*t746;
  t2899 = t2897 + t2898;
  t2901 = t879*t2891;
  t2902 = t863*t2899;
  t2903 = t2901 + t2902;
  t2905 = t863*t2891;
  t2906 = -1.*t879*t2899;
  t2912 = t2905 + t2906;
  t2915 = -1.*t930*t2903;
  t2916 = t919*t2912;
  t2919 = t2915 + t2916;
  t2923 = t919*t2903;
  t2924 = t930*t2912;
  t2925 = t2923 + t2924;
  t2707 = -1.*t280*t1341*t2373;
  t2719 = -1.*t2716*t2403;
  t2726 = -1.*t908*t2724;
  t2751 = -1.*t890*t2747;
  t2762 = -1.*t947*t2758;
  t2831 = -1.*t932*t2828;
  t2844 = -1.*t1021*t2840;
  t2862 = -1.*t1001*t2858;
  t2863 = t983*t2840;
  t2864 = t973*t2858;
  t2865 = t2863 + t2864;
  t2867 = 0.02159*t2865;
  t2868 = t973*t2840;
  t2869 = -1.*t983*t2858;
  t2870 = t2868 + t2869;
  t2872 = 1.11344*t2870;
  t2937 = t280*t1341*t2373;
  t2938 = t2716*t2403;
  t2947 = t908*t2724;
  t2948 = t890*t2747;
  t2958 = t947*t2758;
  t2967 = t932*t2828;
  t3035 = t679*t2377;
  t3037 = t351*t746;
  t3039 = t3035 + t3037;
  t3045 = -1.*t879*t3039;
  t3047 = t3045 + t2435;
  t3051 = -1.*t863*t3039;
  t3052 = t3051 + t2447;
  t3054 = -1.*t930*t3047;
  t3055 = t919*t3052;
  t3056 = t3054 + t3055;
  t3058 = t919*t3047;
  t3059 = t930*t3052;
  t3060 = t3058 + t3059;
  t3029 = -0.21*t863;
  t3031 = -0.049*t879;
  t3032 = t3029 + t3031;
  t3041 = 0.049*t863;
  t3043 = t3041 + t884;
  t3077 = t3032*t3039;
  t3078 = t3043*t2422;
  t3118 = t947*t3047;
  t3122 = t932*t3052;
  t3066 = t983*t3056;
  t3067 = t973*t3060;
  t3068 = t3066 + t3067;
  t3071 = t973*t3056;
  t3073 = -1.*t983*t3060;
  t3074 = t3071 + t3073;
  t3040 = -1.*t3032*t3039;
  t3044 = -1.*t3043*t2422;
  t3048 = -1.*t947*t3047;
  t3053 = -1.*t932*t3052;
  t3057 = -1.*t1021*t3056;
  t3064 = -1.*t1001*t3060;
  t3070 = 0.02159*t3068;
  t3075 = 1.11344*t3074;
  t3195 = t679*t2716;
  t3196 = t280*t1341*t746;
  t3197 = t3195 + t3196;
  t3200 = -1.*t879*t3197;
  t3203 = t3200 + t2755;
  t3205 = -1.*t863*t3197;
  t3206 = t3205 + t2808;
  t3209 = -1.*t930*t3203;
  t3211 = t919*t3206;
  t3213 = t3209 + t3211;
  t3215 = t919*t3203;
  t3217 = t930*t3206;
  t3218 = t3215 + t3217;
  t3237 = t679*t2883;
  t3238 = t1481*t746;
  t3239 = t3237 + t3238;
  t3242 = -1.*t879*t3239;
  t3243 = t3242 + t2902;
  t3245 = -1.*t863*t3239;
  t3257 = t3245 + t2906;
  t3265 = -1.*t930*t3243;
  t3266 = t919*t3257;
  t3267 = t3265 + t3266;
  t3272 = t919*t3243;
  t3275 = t930*t3257;
  t3276 = t3272 + t3275;
  t3198 = -1.*t3032*t3197;
  t3199 = -1.*t3043*t2747;
  t3204 = -1.*t947*t3203;
  t3207 = -1.*t932*t3206;
  t3214 = -1.*t1021*t3213;
  t3221 = -1.*t1001*t3218;
  t3223 = t983*t3213;
  t3225 = t973*t3218;
  t3226 = t3223 + t3225;
  t3227 = 0.02159*t3226;
  t3229 = t973*t3213;
  t3230 = -1.*t983*t3218;
  t3231 = t3229 + t3230;
  t3233 = 1.11344*t3231;
  t3298 = t3032*t3197;
  t3299 = t3043*t2747;
  t3316 = t947*t3203;
  t3317 = t932*t3206;
  t3382 = t863*t3039;
  t3384 = t879*t2422;
  t3388 = t3382 + t3384;
  t3379 = t930*t3047;
  t3389 = t919*t3388;
  t3390 = t3379 + t3389;
  t3394 = -1.*t930*t3388;
  t3395 = t3058 + t3394;
  t3365 = -1.11344*t973;
  t3368 = -0.02159*t983;
  t3369 = t3365 + t3368;
  t3392 = 0.02159*t973;
  t3393 = t3392 + t998;
  t3398 = -1.*t983*t3390;
  t3399 = t973*t3395;
  t3401 = t3398 + t3399;
  t3407 = -1.*t973*t3390;
  t3408 = -1.*t983*t3395;
  t3409 = t3407 + t3408;
  t3391 = -1.*t3369*t3390;
  t3396 = -1.*t3393*t3395;
  t3406 = 0.02159*t3401;
  t3410 = 1.11344*t3409;
  t3424 = t863*t3197;
  t3425 = t879*t2747;
  t3426 = t3424 + t3425;
  t3423 = t930*t3203;
  t3427 = t919*t3426;
  t3429 = t3423 + t3427;
  t3433 = -1.*t930*t3426;
  t3436 = t3215 + t3433;
  t3453 = t863*t3239;
  t3454 = t879*t2899;
  t3455 = t3453 + t3454;
  t3452 = t930*t3243;
  t3456 = t919*t3455;
  t3457 = t3452 + t3456;
  t3459 = -1.*t930*t3455;
  t3461 = t3272 + t3459;
  t3430 = -1.*t3369*t3429;
  t3438 = -1.*t3393*t3436;
  t3439 = -1.*t983*t3429;
  t3440 = t973*t3436;
  t3441 = t3439 + t3440;
  t3442 = 0.02159*t3441;
  t3443 = -1.*t973*t3429;
  t3445 = -1.*t983*t3436;
  t3447 = t3443 + t3445;
  t3448 = 1.11344*t3447;
  t3550 = Sin(var1[14]);
  t3546 = Cos(var1[14]);
  t3549 = 0.135*t3546*t203*t257;
  t3556 = -0.135*t3550*t306;
  t3562 = -1.*t203*t257*t3550;
  t3567 = -1.*t3546*t306;
  t3568 = t3562 + t3567;
  t3574 = t3546*t203*t257;
  t3576 = -1.*t3550*t306;
  t3577 = t3574 + t3576;
  t3597 = Cos(var1[15]);
  t3608 = Sin(var1[15]);
  t3601 = -1.*t3597;
  t3604 = 1. + t3601;
  t3605 = -0.135*t3604;
  t3612 = 0.049*t3608;
  t3613 = t3605 + t3612;
  t3614 = t3613*t3577;
  t3630 = Cos(var1[16]);
  t3633 = -1.*t3630;
  t3634 = 1. + t3633;
  t3641 = Sin(var1[16]);
  t3637 = -0.09*t3634;
  t3642 = 0.049*t3641;
  t3644 = t3637 + t3642;
  t3645 = t3644*t3568;
  t3655 = -0.049*t3634;
  t3658 = -0.09*t3641;
  t3662 = t3655 + t3658;
  t3663 = t3608*t3662*t3577;
  t3664 = t3641*t3568;
  t3665 = t3630*t3608*t3577;
  t3675 = t3664 + t3665;
  t3708 = Cos(var1[17]);
  t3709 = -1.*t3708;
  t3710 = 1. + t3709;
  t3713 = Sin(var1[17]);
  t3679 = t3630*t3568;
  t3686 = -1.*t3608*t3641*t3577;
  t3693 = t3679 + t3686;
  t3712 = -0.049*t3710;
  t3714 = -0.21*t3713;
  t3716 = t3712 + t3714;
  t3720 = t3716*t3675;
  t3729 = -0.21*t3710;
  t3732 = 0.049*t3713;
  t3733 = t3729 + t3732;
  t3736 = t3733*t3693;
  t3737 = -1.*t3713*t3675;
  t3740 = t3708*t3693;
  t3745 = t3737 + t3740;
  t3748 = t3708*t3675;
  t3749 = t3713*t3693;
  t3751 = t3748 + t3749;
  t3778 = Cos(var1[19]);
  t3779 = -1.*t3778;
  t3782 = 1. + t3779;
  t3786 = Sin(var1[19]);
  t3841 = Cos(var1[20]);
  t3843 = -1.*t3841;
  t3846 = 1. + t3843;
  t3850 = Sin(var1[20]);
  t3783 = -0.70544*t3782;
  t3791 = -0.01841*t3786;
  t3794 = t3783 + t3791;
  t3795 = t3794*t3745;
  t3801 = 0.01841*t3782;
  t3802 = -0.70544*t3786;
  t3804 = t3801 + t3802;
  t3806 = t3804*t3751;
  t3848 = 0.07769774964800001*t3846;
  t3810 = t3786*t3745;
  t3811 = t3778*t3751;
  t3814 = t3810 + t3811;
  t3889 = -0.0004284921280000001*t3846;
  t3865 = 0.005481192614*t3846;
  t3822 = t3778*t3745;
  t3823 = -1.*t3786*t3751;
  t3826 = t3822 + t3823;
  t3923 = -0.077936*t3850;
  t3916 = -0.996943*t3850;
  t3851 = -0.005498*t3850;
  t3939 = -0.005481192614*t3846;
  t3868 = 0.077936*t3850;
  t3963 = -0.07769774964800001*t3846;
  t3884 = 0.005498*t3850;
  t3945 = 0.0004284921280000001*t3846;
  t3890 = 0.996943*t3850;
  t3993 = Cos(var1[21]);
  t3995 = -1.*t3993;
  t3996 = 1. + t3995;
  t3998 = Sin(var1[21]);
  t3997 = -0.02159*t3996;
  t3999 = -1.11344*t3998;
  t4000 = t3997 + t3999;
  t4001 = t4000*t3814;
  t4002 = -1.11344*t3996;
  t4003 = 0.02159*t3998;
  t4004 = t4002 + t4003;
  t4005 = t4004*t3826;
  t4006 = -1.*t3998*t3814;
  t4007 = t3993*t3826;
  t4008 = t4006 + t4007;
  t4010 = t3993*t3814;
  t4011 = t3998*t3826;
  t4012 = t4010 + t4011;
  t4038 = t3546*t3630*t3608*t1341;
  t4039 = -1.*t3550*t3641*t1341;
  t4042 = t4038 + t4039;
  t4044 = -1.*t3630*t3550*t1341;
  t4045 = -1.*t3546*t3608*t3641*t1341;
  t4046 = t4044 + t4045;
  t4053 = -1.*t3713*t4042;
  t4054 = t3708*t4046;
  t4055 = t4053 + t4054;
  t4058 = t3708*t4042;
  t4063 = t3713*t4046;
  t4065 = t4058 + t4063;
  t4068 = t3786*t4055;
  t4069 = t3778*t4065;
  t4071 = t4068 + t4069;
  t4073 = t3778*t4055;
  t4074 = -1.*t3786*t4065;
  t4075 = t4073 + t4074;
  t4092 = -1.*t203*t3550;
  t4094 = -1.*t3546*t257*t306;
  t4095 = t4092 + t4094;
  t4101 = -1.*t3546*t203;
  t4104 = t257*t3550*t306;
  t4105 = t4101 + t4104;
  t4107 = -1.*t3608*t3641*t4095;
  t4108 = t3630*t4105;
  t4109 = t4107 + t4108;
  t4115 = t3630*t3608*t4095;
  t4116 = t3641*t4105;
  t4117 = t4115 + t4116;
  t4119 = t3713*t4109;
  t4120 = t3708*t4117;
  t4122 = t4119 + t4120;
  t4124 = t3708*t4109;
  t4125 = -1.*t3713*t4117;
  t4126 = t4124 + t4125;
  t4128 = -1.*t3786*t4122;
  t4129 = t3778*t4126;
  t4130 = t4128 + t4129;
  t4132 = t3778*t4122;
  t4133 = t3786*t4126;
  t4134 = t4132 + t4133;
  t4152 = Cos(var1[5]);
  t4153 = t4152*t306;
  t4156 = Sin(var1[5]);
  t4158 = t203*t1341*t4156;
  t4159 = t4153 + t4158;
  t4162 = -1.*t3546*t4159;
  t4163 = t3562 + t4162;
  t4165 = -1.*t3550*t4159;
  t4166 = t3574 + t4165;
  t4164 = t3641*t4163;
  t4167 = t3630*t3608*t4166;
  t4168 = t4164 + t4167;
  t4170 = t3630*t4163;
  t4171 = -1.*t3608*t3641*t4166;
  t4172 = t4170 + t4171;
  t4169 = -1.*t3713*t4168;
  t4173 = t3708*t4172;
  t4174 = t4169 + t4173;
  t4176 = t3708*t4168;
  t4177 = t3713*t4172;
  t4179 = t4176 + t4177;
  t4175 = t3786*t4174;
  t4181 = t3778*t4179;
  t4182 = t4175 + t4181;
  t4185 = t3778*t4174;
  t4188 = -1.*t3786*t4179;
  t4191 = t4185 + t4188;
  t4030 = 0.135*t3546*t1341;
  t4035 = t3546*t3613*t1341;
  t4036 = t3546*t3608*t3662*t1341;
  t4037 = -1.*t3550*t3644*t1341;
  t4043 = t3716*t4042;
  t4049 = t3733*t4046;
  t4057 = t3794*t4055;
  t4067 = t3804*t4065;
  t3840 = 2.1934241414728571e-7*var1[20];
  t3847 = -0.000033783761634830594*t3846;
  t3860 = t3848 + t3851;
  t3864 = -0.021877537552*t3860;
  t3873 = t3865 + t3868;
  t3876 = -0.6934341012630001*t3873;
  t3877 = t3840 + t3847 + t3864 + t3876;
  t3881 = -1.7147089040178687e-8*var1[20];
  t3883 = -0.021744644052735636*t3846;
  t3887 = t3848 + t3884;
  t3888 = -0.005534467322*t3887;
  t3891 = t3889 + t3890;
  t3902 = -0.6934341012630001*t3891;
  t3906 = t3881 + t3883 + t3888 + t3902;
  t3911 = -1.2096424700126054e-9*var1[20];
  t3914 = -0.6934128581485427*t3846;
  t3917 = t3889 + t3916;
  t3922 = -0.021877537552*t3917;
  t3924 = t3865 + t3923;
  t3926 = -0.005534467322*t3924;
  t3927 = t3911 + t3914 + t3922 + t3926;
  t3941 = t3939 + t3923;
  t3946 = t3945 + t3916;
  t3948 = -0.999969365345*t3846;
  t3949 = 1. + t3948;
  t3960 = -0.006104248100000001*t3846;
  t3961 = 1. + t3960;
  t3964 = t3963 + t3851;
  t3966 = t3939 + t3868;
  t3975 = t3963 + t3884;
  t3977 = -0.993925573253*t3846;
  t3979 = 1. + t3977;
  t3981 = t3945 + t3890;
  t4072 = t4000*t4071;
  t4076 = t4004*t4075;
  t4077 = -1.*t3998*t4071;
  t4078 = t3993*t4075;
  t4079 = t4077 + t4078;
  t4081 = t3993*t4071;
  t4082 = t3998*t4075;
  t4083 = t4081 + t4082;
  t4278 = t203*t257*t3550;
  t4281 = t3546*t306;
  t4283 = t4278 + t4281;
  t4274 = 0.049*t3597;
  t4275 = -0.135*t3608;
  t4277 = t4274 + t4275;
  t4285 = t4277*t4283;
  t4286 = -0.135*t3597;
  t4287 = -0.049*t3608;
  t4289 = t4286 + t4287;
  t4290 = -1.*t203*t4289*t1341;
  t4291 = -1.*t3608*t4283;
  t4293 = t3597*t203*t1341;
  t4294 = t4291 + t4293;
  t4298 = t3597*t4283;
  t4299 = t203*t3608*t1341;
  t4300 = t4298 + t4299;
  t4306 = t3662*t4300;
  t4311 = t3630*t3716*t4300;
  t4313 = -1.*t3641*t3733*t4300;
  t4315 = -1.*t3708*t3641*t4300;
  t4316 = -1.*t3630*t3713*t4300;
  t4317 = t4315 + t4316;
  t4320 = t3630*t3708*t4300;
  t4321 = -1.*t3641*t3713*t4300;
  t4322 = t4320 + t4321;
  t4337 = t3794*t4317;
  t4339 = t3804*t4322;
  t4340 = t3786*t4317;
  t4341 = t3778*t4322;
  t4343 = t4340 + t4341;
  t4347 = t3778*t4317;
  t4348 = -1.*t3786*t4322;
  t4349 = t4347 + t4348;
  t4382 = t4000*t4343;
  t4383 = t4004*t4349;
  t4385 = -1.*t3998*t4343;
  t4386 = t3993*t4349;
  t4387 = t4385 + t4386;
  t4390 = t3993*t4343;
  t4393 = t3998*t4349;
  t4394 = t4390 + t4393;
  t4409 = -1.*t257*t3608;
  t4410 = t3597*t3550*t1341;
  t4411 = t4409 + t4410;
  t4425 = -1.*t3708*t3641*t4411;
  t4426 = -1.*t3630*t3713*t4411;
  t4427 = t4425 + t4426;
  t4429 = t3630*t3708*t4411;
  t4430 = -1.*t3641*t3713*t4411;
  t4431 = t4429 + t4430;
  t4433 = t3786*t4427;
  t4434 = t3778*t4431;
  t4435 = t4433 + t4434;
  t4437 = t3778*t4427;
  t4438 = -1.*t3786*t4431;
  t4441 = t4437 + t4438;
  t4455 = t3546*t203;
  t4456 = -1.*t257*t3550*t306;
  t4457 = t4455 + t4456;
  t4466 = t3597*t4457;
  t4467 = -1.*t3608*t306*t1341;
  t4468 = t4466 + t4467;
  t4473 = -1.*t3708*t3641*t4468;
  t4474 = -1.*t3630*t3713*t4468;
  t4475 = t4473 + t4474;
  t4477 = t3630*t3708*t4468;
  t4478 = -1.*t3641*t3713*t4468;
  t4479 = t4477 + t4478;
  t4481 = t3786*t4475;
  t4482 = t3778*t4479;
  t4483 = t4481 + t4482;
  t4486 = t3778*t4475;
  t4487 = -1.*t3786*t4479;
  t4488 = t4486 + t4487;
  t4510 = -1.*t203*t4152*t1341;
  t4511 = t306*t4156;
  t4512 = t4510 + t4511;
  t4513 = -1.*t3608*t4512;
  t4514 = t3546*t4159;
  t4515 = t4278 + t4514;
  t4518 = t3597*t4515;
  t4520 = t4513 + t4518;
  t4521 = -1.*t3708*t3641*t4520;
  t4524 = -1.*t3630*t3713*t4520;
  t4526 = t4521 + t4524;
  t4528 = t3630*t3708*t4520;
  t4529 = -1.*t3641*t3713*t4520;
  t4530 = t4528 + t4529;
  t4527 = t3786*t4526;
  t4531 = t3778*t4530;
  t4533 = t4527 + t4531;
  t4536 = t3778*t4526;
  t4539 = -1.*t3786*t4530;
  t4540 = t4536 + t4539;
  t4404 = t257*t4289;
  t4405 = t3550*t4277*t1341;
  t4413 = t3662*t4411;
  t4419 = -1.*t3597*t257;
  t4421 = -1.*t3550*t3608*t1341;
  t4422 = t4419 + t4421;
  t4414 = t3630*t3716*t4411;
  t4417 = -1.*t3641*t3733*t4411;
  t4428 = t3794*t4427;
  t4432 = t3804*t4431;
  t4436 = t4000*t4435;
  t4443 = t4004*t4441;
  t4445 = -1.*t3998*t4435;
  t4446 = t3993*t4441;
  t4448 = t4445 + t4446;
  t4450 = t3993*t4435;
  t4451 = t3998*t4441;
  t4452 = t4450 + t4451;
  t4634 = t3608*t4283;
  t4637 = -1.*t3597*t203*t1341;
  t4638 = t4634 + t4637;
  t4628 = 0.049*t3630;
  t4629 = t4628 + t3658;
  t4630 = t4629*t3577;
  t4631 = -0.09*t3630;
  t4632 = -0.049*t3641;
  t4633 = t4631 + t4632;
  t4642 = t4633*t4638;
  t4643 = -1.*t3641*t3577;
  t4644 = -1.*t3630*t4638;
  t4646 = t4643 + t4644;
  t4648 = t3630*t3577;
  t4649 = -1.*t3641*t4638;
  t4650 = t4648 + t4649;
  t4655 = t3733*t4646;
  t4656 = t3716*t4650;
  t4657 = t3713*t4646;
  t4658 = t3708*t4650;
  t4659 = t4657 + t4658;
  t4661 = t3708*t4646;
  t4662 = -1.*t3713*t4650;
  t4663 = t4661 + t4662;
  t4675 = t3804*t4659;
  t4677 = t3794*t4663;
  t4678 = -1.*t3786*t4659;
  t4679 = t3778*t4663;
  t4680 = t4678 + t4679;
  t4682 = t3778*t4659;
  t4684 = t3786*t4663;
  t4686 = t4682 + t4684;
  t4716 = t4004*t4680;
  t4717 = t4000*t4686;
  t4718 = t3998*t4680;
  t4719 = t3993*t4686;
  t4721 = t4718 + t4719;
  t4724 = t3993*t4680;
  t4727 = -1.*t3998*t4686;
  t4728 = t4724 + t4727;
  t4738 = t3597*t257;
  t4739 = t3550*t3608*t1341;
  t4740 = t4738 + t4739;
  t4742 = -1.*t3546*t3641*t1341;
  t4743 = -1.*t3630*t4740;
  t4744 = t4742 + t4743;
  t4746 = t3546*t3630*t1341;
  t4747 = -1.*t3641*t4740;
  t4748 = t4746 + t4747;
  t4750 = t3713*t4744;
  t4751 = t3708*t4748;
  t4752 = t4750 + t4751;
  t4754 = t3708*t4744;
  t4755 = -1.*t3713*t4748;
  t4756 = t4754 + t4755;
  t4761 = -1.*t3786*t4752;
  t4762 = t3778*t4756;
  t4763 = t4761 + t4762;
  t4765 = t3778*t4752;
  t4766 = t3786*t4756;
  t4767 = t4765 + t4766;
  t4781 = t3608*t4457;
  t4784 = t3597*t306*t1341;
  t4785 = t4781 + t4784;
  t4787 = -1.*t3641*t4095;
  t4788 = -1.*t3630*t4785;
  t4789 = t4787 + t4788;
  t4791 = t3630*t4095;
  t4792 = -1.*t3641*t4785;
  t4793 = t4791 + t4792;
  t4795 = t3713*t4789;
  t4796 = t3708*t4793;
  t4797 = t4795 + t4796;
  t4799 = t3708*t4789;
  t4800 = -1.*t3713*t4793;
  t4801 = t4799 + t4800;
  t4803 = -1.*t3786*t4797;
  t4804 = t3778*t4801;
  t4805 = t4803 + t4804;
  t4807 = t3778*t4797;
  t4808 = t3786*t4801;
  t4809 = t4807 + t4808;
  t4821 = t3597*t4512;
  t4822 = t3608*t4515;
  t4823 = t4821 + t4822;
  t4820 = -1.*t3641*t4166;
  t4824 = -1.*t3630*t4823;
  t4825 = t4820 + t4824;
  t4827 = t3630*t4166;
  t4828 = -1.*t3641*t4823;
  t4829 = t4827 + t4828;
  t4826 = t3713*t4825;
  t4830 = t3708*t4829;
  t4832 = t4826 + t4830;
  t4835 = t3708*t4825;
  t4836 = -1.*t3713*t4829;
  t4837 = t4835 + t4836;
  t4833 = -1.*t3786*t4832;
  t4838 = t3778*t4837;
  t4841 = t4833 + t4838;
  t4843 = t3778*t4832;
  t4844 = t3786*t4837;
  t4845 = t4843 + t4844;
  t4737 = t3546*t4629*t1341;
  t4741 = t4633*t4740;
  t4745 = t3733*t4744;
  t4749 = t3716*t4748;
  t4753 = t3804*t4752;
  t4759 = t3794*t4756;
  t4764 = t4004*t4763;
  t4768 = t4000*t4767;
  t4771 = t3998*t4763;
  t4772 = t3993*t4767;
  t4773 = t4771 + t4772;
  t4775 = t3993*t4763;
  t4776 = -1.*t3998*t4767;
  t4777 = t4775 + t4776;
  t4904 = t3641*t3577;
  t4905 = t3630*t4638;
  t4906 = t4904 + t4905;
  t4899 = -0.21*t3708;
  t4900 = -0.049*t3713;
  t4903 = t4899 + t4900;
  t4907 = t4903*t4906;
  t4908 = 0.049*t3708;
  t4909 = t4908 + t3714;
  t4910 = t4909*t4650;
  t4913 = -1.*t3713*t4906;
  t4914 = t4913 + t4658;
  t4916 = -1.*t3708*t4906;
  t4917 = t4916 + t4662;
  t4925 = t3804*t4914;
  t4926 = t3794*t4917;
  t4927 = -1.*t3786*t4914;
  t4928 = t3778*t4917;
  t4929 = t4927 + t4928;
  t4931 = t3778*t4914;
  t4932 = t3786*t4917;
  t4933 = t4931 + t4932;
  t4957 = t4004*t4929;
  t4958 = t4000*t4933;
  t4959 = t3998*t4929;
  t4960 = t3993*t4933;
  t4961 = t4959 + t4960;
  t4963 = t3993*t4929;
  t4964 = -1.*t3998*t4933;
  t4965 = t4963 + t4964;
  t4974 = t3546*t3641*t1341;
  t4975 = t3630*t4740;
  t4976 = t4974 + t4975;
  t4979 = -1.*t3713*t4976;
  t4980 = t4979 + t4751;
  t4982 = -1.*t3708*t4976;
  t4983 = t4982 + t4755;
  t4987 = -1.*t3786*t4980;
  t4988 = t3778*t4983;
  t4989 = t4987 + t4988;
  t4991 = t3778*t4980;
  t4992 = t3786*t4983;
  t4993 = t4991 + t4992;
  t5004 = t3641*t4095;
  t5005 = t3630*t4785;
  t5006 = t5004 + t5005;
  t5009 = -1.*t3713*t5006;
  t5010 = t5009 + t4796;
  t5012 = -1.*t3708*t5006;
  t5013 = t5012 + t4800;
  t5015 = -1.*t3786*t5010;
  t5016 = t3778*t5013;
  t5017 = t5015 + t5016;
  t5019 = t3778*t5010;
  t5020 = t3786*t5013;
  t5021 = t5019 + t5020;
  t5032 = t3641*t4166;
  t5033 = t3630*t4823;
  t5034 = t5032 + t5033;
  t5035 = -1.*t3713*t5034;
  t5036 = t5035 + t4830;
  t5038 = -1.*t3708*t5034;
  t5039 = t5038 + t4836;
  t5037 = -1.*t3786*t5036;
  t5040 = t3778*t5039;
  t5041 = t5037 + t5040;
  t5043 = t3778*t5036;
  t5044 = t3786*t5039;
  t5045 = t5043 + t5044;
  t4977 = t4903*t4976;
  t4978 = t4909*t4748;
  t4981 = t3804*t4980;
  t4984 = t3794*t4983;
  t4990 = t4004*t4989;
  t4994 = t4000*t4993;
  t4995 = t3998*t4989;
  t4996 = t3993*t4993;
  t4997 = t4995 + t4996;
  t4999 = t3993*t4989;
  t5000 = -1.*t3998*t4993;
  t5001 = t4999 + t5000;
  t5093 = t3708*t4906;
  t5094 = t3713*t4650;
  t5095 = t5093 + t5094;
  t5092 = t3786*t4914;
  t5096 = t3778*t5095;
  t5097 = t5092 + t5096;
  t5101 = -1.*t3786*t5095;
  t5102 = t4931 + t5101;
  t5089 = -1.11344*t3993;
  t5090 = -0.02159*t3998;
  t5091 = t5089 + t5090;
  t5098 = t5091*t5097;
  t5099 = 0.02159*t3993;
  t5100 = t5099 + t3999;
  t5103 = t5100*t5102;
  t5104 = -1.*t3998*t5097;
  t5105 = t3993*t5102;
  t5106 = t5104 + t5105;
  t5108 = -1.*t3993*t5097;
  t5109 = -1.*t3998*t5102;
  t5110 = t5108 + t5109;
  t5118 = t3708*t4976;
  t5119 = t3713*t4748;
  t5120 = t5118 + t5119;
  t5117 = t3786*t4980;
  t5121 = t3778*t5120;
  t5122 = t5117 + t5121;
  t5124 = -1.*t3786*t5120;
  t5125 = t4991 + t5124;
  t5137 = t3708*t5006;
  t5138 = t3713*t4793;
  t5139 = t5137 + t5138;
  t5136 = t3786*t5010;
  t5140 = t3778*t5139;
  t5141 = t5136 + t5140;
  t5143 = -1.*t3786*t5139;
  t5144 = t5019 + t5143;
  t5156 = t3708*t5034;
  t5157 = t3713*t4829;
  t5158 = t5156 + t5157;
  t5155 = t3786*t5036;
  t5159 = t3778*t5158;
  t5160 = t5155 + t5159;
  t5162 = -1.*t3786*t5158;
  t5163 = t5043 + t5162;
  t5123 = t5091*t5122;
  t5126 = t5100*t5125;
  t5127 = -1.*t3998*t5122;
  t5128 = t3993*t5125;
  t5129 = t5127 + t5128;
  t5131 = -1.*t3993*t5122;
  t5132 = -1.*t3998*t5125;
  t5133 = t5131 + t5132;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=t1006 + t1029 + t1046 + t1056 + t291 + t337 + t352 + t651 + t816 + t860 + t904 + t917 + t943 + 0.0288377642750394*(1.03*(-0.004179*t1005 - 0.826587*t1027 + t1057 + t1059 + t1071 + t1076 + t1080 + t1089 + t1090 + t1119 + t1123 + 0.127241*t341*t351) + 0.1498*(t1001*t1005 + t1021*t1027 - 1.11818*t1040 + 0.00589*t1055 + t1057 + t1059 + t1071 + t1076 + t1080 + t1089 + t1090 + t1119 + t1123 + 0.13064*t341*t351) + 0.126*(t1057 + t1059 + t1071 + t1076 + t1080 + t1089 + t1090 + t1119 + t1123 + t1005*t1187 + t1027*t1197 + t1159*t341*t351 - 0.617968*(t1005*t1203 + t1027*t1208 + t1200*t341*t351) + 0.126739*(t1005*t1242 + t1027*t1244 + t1239*t341*t351) + 0.01889*(t1005*t1297 + t1027*t1308 + t1283*t341*t351)) + 1.316608*(t1057 + t1059 + t1071 + 0.135*t341*t351 - 0.049*t351*t370 - 0.0343*t846) + 1.965608*(t1057 + t1059 + 0.1351*t351 + 0.01793*t846) + 5.79228*(t1057 + t1059 + t1071 + t1076 + t1080 + 0.17081*t341*t351 - 0.04895*t899 - 0.14946*t916) + 1.03008*(t1057 + t1059 + t1071 + t1076 + t1080 + t1089 + t1090 + 0.132168*t341*t351 - 0.255862*t942 - 0.007761*t955) + 0.763*(t1057 + t1059 + t1071 + t1076 + t1080 + t1089 + t1090 + 0.130288*t341*t351 - 0.45406*t942 - 0.000421*t955)) + t958;
  p_output1[4]=t1006 + t1029 + t1046 + t1056 + t291 + t337 + t352 + t651 + t816 + t860 + t904 + t917 + t943 + t958;
  p_output1[5]=t1342 + t1343 + t1344 + t1347 + t1348 + t1352 + t1356 + t1399 + t1422 + t1432 + t1436 + t1442 + t1447;
  p_output1[6]=-1.*t1001*t1535 - 1.*t1021*t1553 - 0.135*t257*t280*t306 - 0.135*t203*t309 - 0.1305*t1481*t341 - 1.*t1481*t650 - 1.*t1481*t370*t800 - 1.*t1503*t855 - 1.*t1513*t890 - 1.*t1520*t908 - 1.*t1527*t932 - 1.*t1531*t947 + 1.11344*(t1553*t973 - 1.*t1535*t983) + 0.02159*(t1535*t973 + t1553*t983);
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=t1342 + t1343 + t1344 + t1347 + t1348 + t1352 + t1356 + t1399 + t1422 + t1432 + t1436 + t1442 + t1447 + 0.0288377642750394*(1.965608*(0.0001*t1341*t280 - 0.01793*t1341*t309) + 1.03*(-0.004179*t1431 - 0.826587*t1435 + t1595 + t1629 + t1645 + t1646 + t1654 + t1655 + t1666 + t1667 + 0.127241*t1341*t280*t341) + 0.763*(-0.45406*t1373 - 0.000421*t1417 + t1595 + t1629 + t1645 + t1646 + t1654 + t1655 + 0.130288*t1341*t280*t341) + 0.1498*(t1001*t1431 + t1021*t1435 - 1.11818*t1440 + 0.00589*t1446 + t1595 + t1629 + t1645 + t1646 + t1654 + t1655 + t1666 + t1667 + 0.13064*t1341*t280*t341) + 1.03008*(-0.255862*t1373 - 0.007761*t1417 + t1595 + t1629 + t1645 + t1646 + t1654 + t1655 + 0.132168*t1341*t280*t341) + 5.79228*(-0.04895*t1351 - 0.14946*t1355 + t1595 + t1629 + t1645 + t1646 + 0.17081*t1341*t280*t341) + 0.126*(t1187*t1431 + t1197*t1435 + t1595 + t1629 + t1645 + t1646 + t1654 + t1655 + t1666 + t1667 + t1159*t1341*t280*t341 - 0.617968*(t1203*t1431 + t1208*t1435 + t1200*t1341*t280*t341) + 0.126739*(t1242*t1431 + t1244*t1435 + t1239*t1341*t280*t341) + 0.01889*(t1297*t1431 + t1308*t1435 + t1283*t1341*t280*t341)) + 1.316608*(t1595 + t1629 + 0.0343*t1341*t309 + 0.135*t1341*t280*t341 - 0.049*t1341*t280*t370));
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=1.;
  p_output1[13]=t1780 + t1792 + t1804 + t1814 + t1821 + t1822 + t1838 + t1863 + t1869 + t1873 + t1889 + t1908 + 0.0288377642750394*(1.316608*(-0.049*t1802 + 0.135*t1813 + t1911 + t1916) + 1.03008*(0.132168*t1813 - 0.255862*t1827 - 0.007761*t1853 + t1911 + t1916 + t1942 + t1950 + t1952) + 0.763*(0.130288*t1813 - 0.45406*t1827 - 0.000421*t1853 + t1911 + t1916 + t1942 + t1950 + t1952) + 1.03*(0.127241*t1813 - 0.004179*t1868 - 0.826587*t1872 + t1911 + t1916 + t1942 + t1950 + t1952 + t1965 + t1967) + 0.126*(t1159*t1813 + t1187*t1868 + t1197*t1872 - 0.617968*(t1200*t1813 + t1203*t1868 + t1208*t1872) + 0.126739*(t1239*t1813 + t1242*t1868 + t1244*t1872) + 0.01889*(t1283*t1813 + t1297*t1868 + t1308*t1872) + t1911 + t1916 + t1942 + t1950 + t1952 + t1965 + t1967) + 0.1498*(0.13064*t1813 + t1001*t1868 + t1021*t1872 - 1.11818*t1888 + 0.00589*t1895 + t1911 + t1916 + t1942 + t1950 + t1952 + t1965 + t1967) + 5.79228*(0.17081*t1813 + t1911 + t1916 + t1942 - 0.04895*t1802*t679 + 0.14946*t1802*t746));
  p_output1[14]=t1780 + t1792 + t1804 + t1814 + t1821 + t1822 + t1838 + t1863 + t1869 + t1873 + t1889 + t1908;
  p_output1[15]=t2074 + t2075 + t2080 + t2084 + t2085 + t2086 + t2094 + t2126 + t2146 + t2162 + t2168 + t2175;
  p_output1[16]=-1.*t1791*t2184 - 1.*t1001*t2231 - 1.*t1021*t2240 - 1.*t1341*t1779*t306 - 0.1305*(-1.*t1341*t306*t341 - 1.*t2184*t370) - 1.*t2189*t800 - 1.*t2189*t679*t890 + t2189*t746*t908 - 1.*t2206*t932 - 1.*t2223*t947 + 1.11344*(t2240*t973 - 1.*t2231*t983) + 0.02159*(t2231*t973 + t2240*t983);
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=t2074 + t2075 + t2080 + t2084 + t2085 + t2086 + t2094 + t2126 + t2146 + t2162 + t2168 + t2175 + 0.0288377642750394*(1.316608*(-0.049*t2079 + 0.135*t2083 + t2277 + t2278) + 1.03008*(0.132168*t2083 - 0.255862*t2091 - 0.007761*t2121 + t2277 + t2278 + t2294 + t2298 + t2300) + 0.763*(0.130288*t2083 - 0.45406*t2091 - 0.000421*t2121 + t2277 + t2278 + t2294 + t2298 + t2300) + 1.03*(0.127241*t2083 - 0.004179*t2137 - 0.826587*t2160 + t2277 + t2278 + t2294 + t2298 + t2300 + t2316 + t2317) + 0.126*(t1159*t2083 + t1187*t2137 + t1197*t2160 - 0.617968*(t1200*t2083 + t1203*t2137 + t1208*t2160) + 0.126739*(t1239*t2083 + t1242*t2137 + t1244*t2160) + 0.01889*(t1283*t2083 + t1297*t2137 + t1308*t2160) + t2277 + t2278 + t2294 + t2298 + t2300 + t2316 + t2317) + 0.1498*(0.13064*t2083 + t1001*t2137 + t1021*t2160 - 1.11818*t2165 + 0.00589*t2173 + t2277 + t2278 + t2294 + t2298 + t2300 + t2316 + t2317) + 5.79228*(0.17081*t2083 + t2277 + t2278 + t2294 - 0.04895*t2079*t679 + 0.14946*t2079*t746));
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=t2374 + t2408 + t2415 + t2431 + t2439 + t2450 + t2455 + t2478 + t2489 + t2518 + 0.0288377642750394*(5.79228*(-0.14946*t2414 - 0.04895*t2422 + t2521 + t2522) + 0.763*(-0.000421*t2438 - 0.45406*t2449 + t2521 + t2522 + t2542 + t2544) + 1.03008*(-0.007761*t2438 - 0.255862*t2449 + t2521 + t2522 + t2542 + t2544) + 1.03*(-0.826587*t2454 - 0.004179*t2473 + t2521 + t2522 + t2542 + t2544 + t2579 + t2582) + 0.126*(t1197*t2454 + t1187*t2473 - 0.617968*(t1208*t2454 + t1203*t2473) + 0.126739*(t1244*t2454 + t1242*t2473) + 0.01889*(t1308*t2454 + t1297*t2473) + t2521 + t2522 + t2542 + t2544 + t2579 + t2582) + 0.1498*(t1021*t2454 + t1001*t2473 + 0.00589*t2488 - 1.11818*t2514 + t2521 + t2522 + t2542 + t2544 + t2579 + t2582));
  p_output1[24]=t2374 + t2408 + t2415 + t2431 + t2439 + t2450 + t2455 + t2478 + t2489 + t2518;
  p_output1[25]=t2707 + t2719 + t2726 + t2751 + t2762 + t2831 + t2844 + t2862 + t2867 + t2872;
  p_output1[26]=-1.*t1481*t2373 - 1.*t2403*t2883 - 1.*t1021*t2919 - 1.*t1001*t2925 - 1.*t2899*t890 - 1.*t2891*t908 - 1.*t2912*t932 - 1.*t2903*t947 + 0.02159*(t2925*t973 + t2919*t983) + 1.11344*(t2919*t973 - 1.*t2925*t983);
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=t2707 + t2719 + t2726 + t2751 + t2762 + t2831 + t2844 + t2862 + t2867 + t2872 + 0.0288377642750394*(5.79228*(-0.14946*t2724 - 0.04895*t2747 + t2937 + t2938) + 0.763*(-0.000421*t2758 - 0.45406*t2828 + t2937 + t2938 + t2947 + t2948) + 1.03008*(-0.007761*t2758 - 0.255862*t2828 + t2937 + t2938 + t2947 + t2948) + 1.03*(-0.826587*t2840 - 0.004179*t2858 + t2937 + t2938 + t2947 + t2948 + t2958 + t2967) + 0.126*(t1197*t2840 + t1187*t2858 - 0.617968*(t1208*t2840 + t1203*t2858) + 0.126739*(t1244*t2840 + t1242*t2858) + 0.01889*(t1308*t2840 + t1297*t2858) + t2937 + t2938 + t2947 + t2948 + t2958 + t2967) + 0.1498*(t1021*t2840 + t1001*t2858 + 0.00589*t2865 - 1.11818*t2870 + t2937 + t2938 + t2947 + t2948 + t2958 + t2967));
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=t3040 + t3044 + t3048 + t3053 + t3057 + t3064 + t3070 + t3075 + 0.0288377642750394*(0.763*(-0.000421*t3047 - 0.45406*t3052 + t3077 + t3078) + 1.03008*(-0.007761*t3047 - 0.255862*t3052 + t3077 + t3078) + 1.03*(-0.826587*t3056 - 0.004179*t3060 + t3077 + t3078 + t3118 + t3122) + 0.126*(t1197*t3056 + t1187*t3060 - 0.617968*(t1208*t3056 + t1203*t3060) + 0.126739*(t1244*t3056 + t1242*t3060) + 0.01889*(t1308*t3056 + t1297*t3060) + t3077 + t3078 + t3118 + t3122) + 0.1498*(t1021*t3056 + t1001*t3060 + 0.00589*t3068 - 1.11818*t3074 + t3077 + t3078 + t3118 + t3122));
  p_output1[34]=t3040 + t3044 + t3048 + t3053 + t3057 + t3064 + t3070 + t3075;
  p_output1[35]=t3198 + t3199 + t3204 + t3207 + t3214 + t3221 + t3227 + t3233;
  p_output1[36]=-1.*t2899*t3043 - 1.*t3032*t3239 - 1.*t1021*t3267 - 1.*t1001*t3276 - 1.*t3257*t932 - 1.*t3243*t947 + 0.02159*(t3276*t973 + t3267*t983) + 1.11344*(t3267*t973 - 1.*t3276*t983);
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=t3198 + t3199 + t3204 + t3207 + t3214 + t3221 + t3227 + t3233 + 0.0288377642750394*(0.763*(-0.000421*t3203 - 0.45406*t3206 + t3298 + t3299) + 1.03008*(-0.007761*t3203 - 0.255862*t3206 + t3298 + t3299) + 1.03*(-0.826587*t3213 - 0.004179*t3218 + t3298 + t3299 + t3316 + t3317) + 0.126*(t1197*t3213 + t1187*t3218 - 0.617968*(t1208*t3213 + t1203*t3218) + 0.126739*(t1244*t3213 + t1242*t3218) + 0.01889*(t1308*t3213 + t1297*t3218) + t3298 + t3299 + t3316 + t3317) + 0.1498*(t1021*t3213 + t1001*t3218 + 0.00589*t3226 - 1.11818*t3231 + t3298 + t3299 + t3316 + t3317));
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=t3391 + t3396 + t3406 + 0.0043198970884009*(t3369*t3390 + t3393*t3395 + 0.00589*t3401 - 1.11818*t3409) + t3410;
  p_output1[44]=t3391 + t3396 + t3406 + t3410;
  p_output1[45]=t3430 + t3438 + t3442 + t3448;
  p_output1[46]=-1.*t3369*t3457 - 1.*t3393*t3461 + 0.02159*(t3461*t973 - 1.*t3457*t983) + 1.11344*(-1.*t3457*t973 - 1.*t3461*t983);
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=t3430 + t3438 + t3442 + 0.0043198970884009*(t3369*t3429 + t3393*t3436 + 0.00589*t3441 - 1.11818*t3447) + t3448;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0.0288377642750394*(1.965608*(t3549 + t3556 + 0.01793*t3568 - 0.1351*t3577) + 1.316608*(t3549 + t3556 - 0.0343*t3568 - 0.135*t3577*t3597 - 0.049*t3577*t3608 + t3614) + 5.79228*(t3549 + t3556 - 0.17081*t3577*t3597 + t3614 + t3645 + t3663 - 0.04895*t3675 - 0.14946*t3693) + 1.03008*(t3549 + t3556 - 0.132168*t3577*t3597 + t3614 + t3645 + t3663 + t3720 + t3736 - 0.255862*t3745 - 0.007761*t3751) + 0.763*(t3549 + t3556 - 0.130288*t3577*t3597 + t3614 + t3645 + t3663 + t3720 + t3736 - 0.45406*t3745 - 0.000421*t3751) + 1.03*(t3549 + t3556 - 0.127241*t3577*t3597 + t3614 + t3645 + t3663 + t3720 + t3736 + t3795 + t3806 - 0.004179*t3814 - 0.826587*t3826) + 0.126*(t3549 + t3556 + t3614 + t3645 + t3663 + t3720 + t3736 + t3795 + t3806 + t3577*t3597*t3877 + t3814*t3906 + t3826*t3927 - 0.617968*(t3577*t3597*t3941 + t3814*t3946 + t3826*t3949) - 0.126739*(t3577*t3597*t3961 + t3814*t3964 + t3826*t3966) + 0.01889*(t3577*t3597*t3975 + t3814*t3979 + t3826*t3981)) + 0.1498*(t3549 + t3556 - 0.13064*t3577*t3597 + t3614 + t3645 + t3663 + t3720 + t3736 + t3795 + t3806 + t4001 + t4005 - 1.11818*t4008 + 0.00589*t4012));
  p_output1[54]=t3549 + t3556 - 0.1305*t3577*t3597 + t3614 + t3645 + t3663 + t3720 + t3736 + t3795 + t3806 + t4001 + t4005 - 1.11344*t4008 - 0.02159*t4012;
  p_output1[55]=-0.1305*t1341*t3546*t3597 + t4030 + t4035 + t4036 + t4037 + t4043 + t4049 + t4057 + t4067 + t4072 + t4076 - 1.11344*t4079 - 0.02159*t4083;
  p_output1[56]=-0.135*t257*t306*t3546 - 0.135*t203*t3550 - 0.1305*t3597*t4095 + t3613*t4095 + t3608*t3662*t4095 + t3644*t4105 + t3733*t4109 + t3716*t4117 + t3804*t4122 + t3794*t4126 + t4004*t4130 + t4000*t4134 - 0.02159*(t3998*t4130 + t3993*t4134) - 1.11344*(t3993*t4130 - 1.*t3998*t4134);
  p_output1[57]=0;
  p_output1[58]=7.142857142857142*(-0.10724599999999995*(-1.*t3998*t4182 + t3993*t4191) - 0.08999*(t3993*t4182 + t3998*t4191));
  p_output1[59]=0.0288377642750394*(1.965608*(-0.0001*t1341*t3546 - 0.01793*t1341*t3550) + 1.316608*(0.0343*t1341*t3550 - 0.135*t1341*t3546*t3597 - 0.049*t1341*t3546*t3608 + t4030 + t4035) + 5.79228*(-0.17081*t1341*t3546*t3597 + t4030 + t4035 + t4036 + t4037 - 0.04895*t4042 - 0.14946*t4046) + 1.03008*(-0.132168*t1341*t3546*t3597 + t4030 + t4035 + t4036 + t4037 + t4043 + t4049 - 0.255862*t4055 - 0.007761*t4065) + 0.763*(-0.130288*t1341*t3546*t3597 + t4030 + t4035 + t4036 + t4037 + t4043 + t4049 - 0.45406*t4055 - 0.000421*t4065) + 1.03*(-0.127241*t1341*t3546*t3597 + t4030 + t4035 + t4036 + t4037 + t4043 + t4049 + t4057 + t4067 - 0.004179*t4071 - 0.826587*t4075) + 0.126*(t1341*t3546*t3597*t3877 + t4030 + t4035 + t4036 + t4037 + t4043 + t4049 + t4057 + t4067 + t3906*t4071 + t3927*t4075 - 0.617968*(t1341*t3546*t3597*t3941 + t3946*t4071 + t3949*t4075) - 0.126739*(t1341*t3546*t3597*t3961 + t3964*t4071 + t3966*t4075) + 0.01889*(t1341*t3546*t3597*t3975 + t3979*t4071 + t3981*t4075)) + 0.1498*(-0.13064*t1341*t3546*t3597 + t4030 + t4035 + t4036 + t4037 + t4043 + t4049 + t4057 + t4067 + t4072 + t4076 - 1.11818*t4079 + 0.00589*t4083));
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0.0288377642750394*(1.316608*(t4285 + t4290 - 0.135*t4294 - 0.049*t4300) + 5.79228*(t4285 + t4290 - 0.17081*t4294 - 0.04895*t3630*t4300 + 0.14946*t3641*t4300 + t4306) + 1.03008*(t4285 + t4290 - 0.132168*t4294 + t4306 + t4311 + t4313 - 0.255862*t4317 - 0.007761*t4322) + 0.763*(t4285 + t4290 - 0.130288*t4294 + t4306 + t4311 + t4313 - 0.45406*t4317 - 0.000421*t4322) + 1.03*(t4285 + t4290 - 0.127241*t4294 + t4306 + t4311 + t4313 + t4337 + t4339 - 0.004179*t4343 - 0.826587*t4349) + 0.126*(t4285 + t4290 + t3877*t4294 + t4306 + t4311 + t4313 + t4337 + t4339 + t3906*t4343 + t3927*t4349 - 0.617968*(t3941*t4294 + t3946*t4343 + t3949*t4349) - 0.126739*(t3961*t4294 + t3964*t4343 + t3966*t4349) + 0.01889*(t3975*t4294 + t3979*t4343 + t3981*t4349)) + 0.1498*(t4285 + t4290 - 0.13064*t4294 + t4306 + t4311 + t4313 + t4337 + t4339 + t4382 + t4383 - 1.11818*t4387 + 0.00589*t4394));
  p_output1[64]=t4285 + t4290 - 0.1305*t4294 + t4306 + t4311 + t4313 + t4337 + t4339 + t4382 + t4383 - 1.11344*t4387 - 0.02159*t4394;
  p_output1[65]=t4404 + t4405 + t4413 + t4414 + t4417 - 0.1305*t4422 + t4428 + t4432 + t4436 + t4443 - 1.11344*t4448 - 0.02159*t4452;
  p_output1[66]=t1341*t306*t4289 + t4277*t4457 - 0.1305*(-1.*t1341*t306*t3597 - 1.*t3608*t4457) + t3662*t4468 + t3630*t3716*t4468 - 1.*t3641*t3733*t4468 + t3794*t4475 + t3804*t4479 + t4000*t4483 + t4004*t4488 - 1.11344*(-1.*t3998*t4483 + t3993*t4488) - 0.02159*(t3993*t4483 + t3998*t4488);
  p_output1[67]=1.;
  p_output1[68]=7.142857142857142*(-0.10724599999999995*(-1.*t3998*t4533 + t3993*t4540) - 0.08999*(t3993*t4533 + t3998*t4540));
  p_output1[69]=0.0288377642750394*(5.79228*(t4404 + t4405 - 0.04895*t3630*t4411 + 0.14946*t3641*t4411 + t4413 - 0.17081*t4422) + 1.316608*(t4404 + t4405 - 0.049*t4411 - 0.135*t4422) + 1.03008*(t4404 + t4405 + t4413 + t4414 + t4417 - 0.132168*t4422 - 0.255862*t4427 - 0.007761*t4431) + 0.763*(t4404 + t4405 + t4413 + t4414 + t4417 - 0.130288*t4422 - 0.45406*t4427 - 0.000421*t4431) + 1.03*(t4404 + t4405 + t4413 + t4414 + t4417 - 0.127241*t4422 + t4428 + t4432 - 0.004179*t4435 - 0.826587*t4441) + 0.126*(t4404 + t4405 + t4413 + t4414 + t4417 + t3877*t4422 + t4428 + t4432 + t3906*t4435 + t3927*t4441 - 0.617968*(t3941*t4422 + t3946*t4435 + t3949*t4441) - 0.126739*(t3961*t4422 + t3964*t4435 + t3966*t4441) + 0.01889*(t3975*t4422 + t3979*t4435 + t3981*t4441)) + 0.1498*(t4404 + t4405 + t4413 + t4414 + t4417 - 0.13064*t4422 + t4428 + t4432 + t4436 + t4443 - 1.11818*t4448 + 0.00589*t4452));
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0.0288377642750394*(5.79228*(t4630 + t4642 - 0.14946*t4646 - 0.04895*t4650) + 0.763*(t4630 + t4642 + t4655 + t4656 - 0.000421*t4659 - 0.45406*t4663) + 1.03008*(t4630 + t4642 + t4655 + t4656 - 0.007761*t4659 - 0.255862*t4663) + 1.03*(t4630 + t4642 + t4655 + t4656 + t4675 + t4677 - 0.826587*t4680 - 0.004179*t4686) + 0.126*(t4630 + t4642 + t4655 + t4656 + t4675 + t4677 + t3927*t4680 + t3906*t4686 - 0.617968*(t3949*t4680 + t3946*t4686) - 0.126739*(t3966*t4680 + t3964*t4686) + 0.01889*(t3981*t4680 + t3979*t4686)) + 0.1498*(t4630 + t4642 + t4655 + t4656 + t4675 + t4677 + t4716 + t4717 + 0.00589*t4721 - 1.11818*t4728));
  p_output1[74]=t4630 + t4642 + t4655 + t4656 + t4675 + t4677 + t4716 + t4717 - 0.02159*t4721 - 1.11344*t4728;
  p_output1[75]=t4737 + t4741 + t4745 + t4749 + t4753 + t4759 + t4764 + t4768 - 0.02159*t4773 - 1.11344*t4777;
  p_output1[76]=t4095*t4629 + t4633*t4785 + t3733*t4789 + t3716*t4793 + t3804*t4797 + t3794*t4801 + t4004*t4805 + t4000*t4809 - 0.02159*(t3998*t4805 + t3993*t4809) - 1.11344*(t3993*t4805 - 1.*t3998*t4809);
  p_output1[77]=0;
  p_output1[78]=7.142857142857142*(-0.08999*(t3998*t4841 + t3993*t4845) - 0.10724599999999995*(t3993*t4841 - 1.*t3998*t4845));
  p_output1[79]=0.0288377642750394*(5.79228*(t4737 + t4741 - 0.14946*t4744 - 0.04895*t4748) + 0.763*(t4737 + t4741 + t4745 + t4749 - 0.000421*t4752 - 0.45406*t4756) + 1.03008*(t4737 + t4741 + t4745 + t4749 - 0.007761*t4752 - 0.255862*t4756) + 1.03*(t4737 + t4741 + t4745 + t4749 + t4753 + t4759 - 0.826587*t4763 - 0.004179*t4767) + 0.126*(t4737 + t4741 + t4745 + t4749 + t4753 + t4759 + t3927*t4763 + t3906*t4767 - 0.617968*(t3949*t4763 + t3946*t4767) - 0.126739*(t3966*t4763 + t3964*t4767) + 0.01889*(t3981*t4763 + t3979*t4767)) + 0.1498*(t4737 + t4741 + t4745 + t4749 + t4753 + t4759 + t4764 + t4768 + 0.00589*t4773 - 1.11818*t4777));
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0.0288377642750394*(0.763*(t4907 + t4910 - 0.000421*t4914 - 0.45406*t4917) + 1.03008*(t4907 + t4910 - 0.007761*t4914 - 0.255862*t4917) + 1.03*(t4907 + t4910 + t4925 + t4926 - 0.826587*t4929 - 0.004179*t4933) + 0.126*(t4907 + t4910 + t4925 + t4926 + t3927*t4929 + t3906*t4933 - 0.617968*(t3949*t4929 + t3946*t4933) - 0.126739*(t3966*t4929 + t3964*t4933) + 0.01889*(t3981*t4929 + t3979*t4933)) + 0.1498*(t4907 + t4910 + t4925 + t4926 + t4957 + t4958 + 0.00589*t4961 - 1.11818*t4965));
  p_output1[84]=t4907 + t4910 + t4925 + t4926 + t4957 + t4958 - 0.02159*t4961 - 1.11344*t4965;
  p_output1[85]=t4977 + t4978 + t4981 + t4984 + t4990 + t4994 - 0.02159*t4997 - 1.11344*t5001;
  p_output1[86]=t4793*t4909 + t4903*t5006 + t3804*t5010 + t3794*t5013 + t4004*t5017 + t4000*t5021 - 0.02159*(t3998*t5017 + t3993*t5021) - 1.11344*(t3993*t5017 - 1.*t3998*t5021);
  p_output1[87]=0;
  p_output1[88]=7.142857142857142*(-0.08999*(t3998*t5041 + t3993*t5045) - 0.10724599999999995*(t3993*t5041 - 1.*t3998*t5045));
  p_output1[89]=0.0288377642750394*(0.763*(t4977 + t4978 - 0.000421*t4980 - 0.45406*t4983) + 1.03008*(t4977 + t4978 - 0.007761*t4980 - 0.255862*t4983) + 1.03*(t4977 + t4978 + t4981 + t4984 - 0.826587*t4989 - 0.004179*t4993) + 0.126*(t4977 + t4978 + t4981 + t4984 + t3927*t4989 + t3906*t4993 - 0.617968*(t3949*t4989 + t3946*t4993) - 0.126739*(t3966*t4989 + t3964*t4993) + 0.01889*(t3981*t4989 + t3979*t4993)) + 0.1498*(t4977 + t4978 + t4981 + t4984 + t4990 + t4994 + 0.00589*t4997 - 1.11818*t5001));
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0.0043198970884009*(t5098 + t5103 + 0.00589*t5106 - 1.11818*t5110);
  p_output1[94]=t5098 + t5103 - 0.02159*t5106 - 1.11344*t5110;
  p_output1[95]=t5123 + t5126 - 0.02159*t5129 - 1.11344*t5133;
  p_output1[96]=t5091*t5141 + t5100*t5144 - 0.02159*(-1.*t3998*t5141 + t3993*t5144) - 1.11344*(-1.*t3993*t5141 - 1.*t3998*t5144);
  p_output1[97]=0;
  p_output1[98]=7.142857142857142*(-0.08999*(-1.*t3998*t5160 + t3993*t5163) - 0.10724599999999995*(-1.*t3993*t5160 - 1.*t3998*t5163));
  p_output1[99]=0.0043198970884009*(t5123 + t5126 + 0.00589*t5129 - 1.11818*t5133);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 10, (mwSize) 10, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#endif // MATLAB_MEX_FILE

namespace SymFunction
{

void J_yaLeftStance_SLIP_with_xcom_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}




