/*
 * Automatically Generated from Mathematica.
 * Mon 22 Nov 2021 20:32:15 GMT-08:00
 */

#ifdef MATLAB_MEX_FILE
// No need to include header
#else
#include "J_yaRightStance_SLIP.hh"
#endif

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t36;
  double t63;
  double t96;
  double t116;
  double t142;
  double t184;
  double t209;
  double t212;
  double t227;
  double t56;
  double t255;
  double t75;
  double t265;
  double t268;
  double t278;
  double t288;
  double t300;
  double t357;
  double t365;
  double t407;
  double t510;
  double t434;
  double t483;
  double t502;
  double t514;
  double t533;
  double t547;
  double t639;
  double t640;
  double t641;
  double t648;
  double t642;
  double t665;
  double t673;
  double t677;
  double t681;
  double t683;
  double t699;
  double t710;
  double t711;
  double t720;
  double t726;
  double t808;
  double t821;
  double t841;
  double t873;
  double t767;
  double t769;
  double t783;
  double t851;
  double t882;
  double t890;
  double t940;
  double t960;
  double t972;
  double t987;
  double t990;
  double t996;
  double t1007;
  double t1009;
  double t1036;
  double t1085;
  double t1088;
  double t1217;
  double t1225;
  double t1231;
  double t1235;
  double t1270;
  double t1284;
  double t1465;
  double t1474;
  double t1487;
  double t1511;
  double t1283;
  double t1288;
  double t1302;
  double t1308;
  double t1313;
  double t1314;
  double t1342;
  double t1343;
  double t1564;
  double t1347;
  double t1351;
  double t1360;
  double t1623;
  double t1504;
  double t1396;
  double t1407;
  double t1421;
  double t1684;
  double t1670;
  double t1568;
  double t1715;
  double t1523;
  double t1777;
  double t1612;
  double t1729;
  double t1626;
  double t1849;
  double t1852;
  double t1861;
  double t1864;
  double t1961;
  double t1966;
  double t2002;
  double t2006;
  double t2015;
  double t2022;
  double t2029;
  double t2038;
  double t2063;
  double t2064;
  double t1863;
  double t1866;
  double t1871;
  double t2099;
  double t2100;
  double t2104;
  double t2112;
  double t2123;
  double t2125;
  double t1873;
  double t1876;
  double t1878;
  double t2142;
  double t2153;
  double t2169;
  double t2181;
  double t2182;
  double t2201;
  double t2317;
  double t2329;
  double t2330;
  double t2342;
  double t2346;
  double t2347;
  double t2369;
  double t2374;
  double t2387;
  double t2394;
  double t2410;
  double t2411;
  double t2420;
  double t2424;
  double t2425;
  double t2435;
  double t2437;
  double t2440;
  double t2496;
  double t2502;
  double t2503;
  double t2518;
  double t2530;
  double t2541;
  double t2557;
  double t2559;
  double t2574;
  double t2581;
  double t2582;
  double t2590;
  double t2592;
  double t2596;
  double t2604;
  double t2645;
  double t2648;
  double t2667;
  double t2696;
  double t2704;
  double t2717;
  double t2726;
  double t2734;
  double t2749;
  double t1884;
  double t1887;
  double t1889;
  double t1894;
  double t1897;
  double t1898;
  double t2873;
  double t2874;
  double t2881;
  double t2850;
  double t2851;
  double t2854;
  double t2860;
  double t2861;
  double t2868;
  double t2872;
  double t2888;
  double t2891;
  double t2896;
  double t2906;
  double t2909;
  double t2910;
  double t2912;
  double t2924;
  double t2928;
  double t2930;
  double t2950;
  double t2963;
  double t2974;
  double t2975;
  double t2978;
  double t2980;
  double t2984;
  double t2985;
  double t2986;
  double t1448;
  double t1501;
  double t1535;
  double t1546;
  double t1582;
  double t1585;
  double t1590;
  double t3024;
  double t3025;
  double t1602;
  double t1609;
  double t1617;
  double t1619;
  double t1636;
  double t1638;
  double t1639;
  double t3033;
  double t3036;
  double t3040;
  double t1664;
  double t1667;
  double t1676;
  double t1680;
  double t1687;
  double t1692;
  double t1693;
  double t3044;
  double t3045;
  double t3051;
  double t1723;
  double t1732;
  double t1746;
  double t1754;
  double t1763;
  double t1764;
  double t1794;
  double t1798;
  double t1808;
  double t1814;
  double t1819;
  double t1821;
  double t3261;
  double t3265;
  double t3272;
  double t3275;
  double t3278;
  double t3301;
  double t3305;
  double t3306;
  double t3310;
  double t3311;
  double t3315;
  double t3332;
  double t3336;
  double t3340;
  double t3350;
  double t3353;
  double t3367;
  double t3456;
  double t3457;
  double t3458;
  double t3476;
  double t3477;
  double t3481;
  double t3497;
  double t3501;
  double t3514;
  double t3520;
  double t3528;
  double t3544;
  double t3546;
  double t3556;
  double t3568;
  double t3625;
  double t3634;
  double t3635;
  double t3638;
  double t3643;
  double t3644;
  double t3682;
  double t3683;
  double t3684;
  double t3687;
  double t3691;
  double t3697;
  double t3709;
  double t3710;
  double t3711;
  double t3719;
  double t3744;
  double t3766;
  double t3199;
  double t3201;
  double t3203;
  double t3216;
  double t3220;
  double t3227;
  double t3889;
  double t3893;
  double t3902;
  double t3875;
  double t3885;
  double t3888;
  double t3905;
  double t3906;
  double t3913;
  double t3915;
  double t3920;
  double t3921;
  double t3922;
  double t3932;
  double t3933;
  double t3937;
  double t3941;
  double t3943;
  double t3944;
  double t3945;
  double t3954;
  double t3958;
  double t3960;
  double t3961;
  double t3987;
  double t3993;
  double t3997;
  double t4017;
  double t4020;
  double t4026;
  double t4032;
  double t4039;
  double t4188;
  double t4198;
  double t4203;
  double t4212;
  double t4213;
  double t4221;
  double t4230;
  double t4242;
  double t4246;
  double t4260;
  double t4287;
  double t4289;
  double t4309;
  double t4314;
  double t4315;
  double t4323;
  double t4328;
  double t4329;
  double t4336;
  double t4337;
  double t4338;
  double t4378;
  double t4382;
  double t4389;
  double t4401;
  double t4403;
  double t4412;
  double t4422;
  double t4423;
  double t4424;
  double t4441;
  double t4445;
  double t4446;
  double t4453;
  double t4455;
  double t4456;
  double t4463;
  double t4496;
  double t4513;
  double t4521;
  double t4534;
  double t4541;
  double t4595;
  double t4597;
  double t4606;
  double t4611;
  double t4617;
  double t4624;
  double t4632;
  double t4637;
  double t4648;
  double t4658;
  double t4659;
  double t4660;
  double t4662;
  double t4664;
  double t4668;
  double t4675;
  double t4676;
  double t4677;
  double t4680;
  double t4682;
  double t4684;
  double t4153;
  double t4155;
  double t4156;
  double t4162;
  double t4163;
  double t4166;
  double t4729;
  double t4732;
  double t4735;
  double t4710;
  double t4713;
  double t4720;
  double t4742;
  double t4744;
  double t4751;
  double t4753;
  double t4754;
  double t4757;
  double t4763;
  double t4764;
  double t4829;
  double t4830;
  double t4834;
  double t4799;
  double t4809;
  double t4812;
  double t4814;
  double t4816;
  double t4817;
  double t4819;
  double t4824;
  double t4837;
  double t4841;
  double t4844;
  double t4852;
  double t4856;
  double t4862;
  double t4863;
  double t5006;
  double t5007;
  double t5011;
  double t5023;
  double t5025;
  double t5033;
  double t5035;
  double t5044;
  double t5045;
  double t5046;
  double t5055;
  double t5064;
  double t5065;
  double t5070;
  double t5071;
  double t5077;
  double t5114;
  double t5116;
  double t5119;
  double t5135;
  double t5141;
  double t5156;
  double t5158;
  double t5162;
  double t5169;
  double t5172;
  double t5177;
  double t5178;
  double t5179;
  double t5190;
  double t5191;
  double t5193;
  double t5215;
  double t5216;
  double t5219;
  double t5231;
  double t5235;
  double t5247;
  double t5250;
  double t5254;
  double t5257;
  double t5259;
  double t5276;
  double t5278;
  double t5285;
  double t5298;
  double t5304;
  double t5306;
  double t4983;
  double t4985;
  double t4987;
  double t4989;
  double t4992;
  double t4996;
  double t5424;
  double t5429;
  double t5474;
  double t5482;
  double t5488;
  double t5393;
  double t5404;
  double t5422;
  double t5458;
  double t5472;
  double t5549;
  double t5558;
  double t5567;
  double t5573;
  double t5574;
  double t5610;
  double t5611;
  double t5629;
  double t5637;
  double t5670;
  double t5697;
  double t5698;
  double t5704;
  double t5705;
  double t5710;
  double t5497;
  double t5501;
  double t5505;
  double t5509;
  double t5517;
  double t5525;
  double t5745;
  double t5741;
  double t5818;
  double t5820;
  double t5844;
  double t5855;
  double t5880;
  double t5759;
  double t5760;
  double t5762;
  double t5772;
  double t5790;
  double t5794;
  double t5798;
  double t5964;
  double t5985;
  double t5988;
  double t5994;
  double t6036;
  double t6040;
  double t6006;
  double t6011;
  double t6015;
  double t6032;
  double t6033;
  double t6034;
  double t6045;
  double t6051;
  double t6055;
  double t6058;
  double t6064;
  double t6067;
  double t6068;
  double t6094;
  double t6095;
  double t6096;
  double t6100;
  double t6103;
  double t6105;
  double t6107;
  double t6117;
  double t6121;
  double t6122;
  double t6142;
  double t6143;
  double t6144;
  double t6187;
  double t6190;
  double t5859;
  double t5860;
  double t5877;
  double t5900;
  double t5905;
  double t5764;
  double t5773;
  double t5774;
  double t6204;
  double t5915;
  double t5923;
  double t5925;
  double t6212;
  double t6216;
  double t5993;
  double t5995;
  double t6005;
  double t6018;
  double t6019;
  double t6029;
  double t6241;
  double t6251;
  double t6056;
  double t6061;
  double t6062;
  double t6080;
  double t6085;
  double t6092;
  double t6321;
  double t6323;
  double t6326;
  double t6330;
  double t6294;
  double t6299;
  double t6328;
  double t6396;
  double t6336;
  double t6443;
  double t6420;
  double t6332;
  double t6470;
  double t6338;
  double t6525;
  double t6368;
  double t6477;
  double t6400;
  double t6106;
  double t6109;
  double t6113;
  double t6130;
  double t6134;
  double t6136;
  double t6158;
  double t6164;
  double t6165;
  double t6177;
  double t6180;
  double t6184;
  double t5742;
  double t6621;
  double t6627;
  double t6613;
  double t6615;
  double t6639;
  double t6641;
  double t6642;
  double t6647;
  double t6658;
  double t6680;
  double t6689;
  double t6690;
  double t6693;
  double t6709;
  double t6713;
  double t6717;
  double t6725;
  double t6726;
  double t6733;
  double t6739;
  double t6750;
  double t6753;
  double t6807;
  double t6811;
  double t6814;
  double t6816;
  double t6820;
  double t6821;
  double t6823;
  double t6827;
  double t6835;
  double t6841;
  double t6843;
  double t6844;
  double t6849;
  double t6854;
  double t6860;
  double t6865;
  double t6868;
  double t6869;
  double t6915;
  double t6923;
  double t6935;
  double t6954;
  double t6961;
  double t6975;
  double t6980;
  double t6982;
  double t6987;
  double t6994;
  double t6998;
  double t7002;
  double t7012;
  double t7013;
  double t7022;
  double t7029;
  double t7030;
  double t7031;
  double t7043;
  double t7057;
  double t7059;
  double t7066;
  double t7078;
  double t7079;
  double t7153;
  double t7154;
  double t7158;
  double t7163;
  double t7166;
  double t7169;
  double t7189;
  double t7190;
  double t7193;
  double t7197;
  double t7198;
  double t7200;
  double t7206;
  double t7207;
  double t7208;
  double t7214;
  double t7216;
  double t7217;
  double t7132;
  double t7133;
  double t7136;
  double t7142;
  double t7144;
  double t7151;
  double t7181;
  double t7182;
  double t7185;
  double t7260;
  double t7270;
  double t7280;
  double t7308;
  double t7309;
  double t6313;
  double t6327;
  double t6334;
  double t6335;
  double t6340;
  double t6341;
  double t6355;
  double t7343;
  double t7345;
  double t6362;
  double t6364;
  double t6391;
  double t6395;
  double t6402;
  double t6406;
  double t6408;
  double t6414;
  double t6415;
  double t6426;
  double t6431;
  double t6446;
  double t6461;
  double t6466;
  double t6472;
  double t6481;
  double t6485;
  double t6487;
  double t6521;
  double t6523;
  double t6527;
  double t6532;
  double t6540;
  double t6546;
  double t6548;
  double t6554;
  double t7228;
  double t7234;
  double t7235;
  double t7237;
  double t7240;
  double t7241;
  double t7465;
  double t7467;
  double t7493;
  double t7494;
  double t7499;
  double t7531;
  double t7534;
  double t7536;
  double t7544;
  double t7547;
  double t7549;
  double t7553;
  double t7554;
  double t7555;
  double t7573;
  double t7578;
  double t7583;
  double t7642;
  double t7644;
  double t7646;
  double t7665;
  double t7666;
  double t7667;
  double t7672;
  double t7675;
  double t7677;
  double t7679;
  double t7680;
  double t7683;
  double t7686;
  double t7687;
  double t7688;
  double t7720;
  double t7722;
  double t7728;
  double t7750;
  double t7760;
  double t7761;
  double t7778;
  double t7783;
  double t7784;
  double t7787;
  double t7788;
  double t7790;
  double t7793;
  double t7797;
  double t7804;
  double t7806;
  double t7808;
  double t7809;
  double t7850;
  double t7851;
  double t7855;
  double t7860;
  double t7862;
  double t7863;
  double t7870;
  double t7875;
  double t7876;
  double t7878;
  double t7879;
  double t7881;
  double t7883;
  double t7884;
  double t7885;
  double t7888;
  double t7889;
  double t7897;
  double t7902;
  double t7905;
  double t7908;
  double t7837;
  double t7838;
  double t7842;
  double t7843;
  double t7846;
  double t7945;
  double t7947;
  double t7957;
  double t7958;
  double t7974;
  double t7977;
  double t7910;
  double t7914;
  double t7922;
  double t7925;
  double t7933;
  double t7936;
  double t8096;
  double t8097;
  double t8099;
  double t8102;
  double t8105;
  double t8116;
  double t8123;
  double t8128;
  double t8129;
  double t8136;
  double t8145;
  double t8147;
  double t8149;
  double t8151;
  double t8152;
  double t8157;
  double t8158;
  double t8162;
  double t8167;
  double t8170;
  double t8173;
  double t8199;
  double t8202;
  double t8204;
  double t8206;
  double t8207;
  double t8208;
  double t8212;
  double t8213;
  double t8216;
  double t8222;
  double t8223;
  double t8225;
  double t8233;
  double t8234;
  double t8237;
  double t8241;
  double t8244;
  double t8248;
  double t8251;
  double t8253;
  double t8254;
  double t8277;
  double t8281;
  double t8285;
  double t8287;
  double t8289;
  double t8291;
  double t8297;
  double t8300;
  double t8302;
  double t8314;
  double t8322;
  double t8323;
  double t8340;
  double t8342;
  double t8344;
  double t8348;
  double t8353;
  double t8360;
  double t8364;
  double t8372;
  double t8373;
  double t8401;
  double t8402;
  double t8403;
  double t8415;
  double t8418;
  double t8433;
  double t8434;
  double t8454;
  double t8458;
  double t8461;
  double t8465;
  double t8466;
  double t8469;
  double t8477;
  double t8479;
  double t8480;
  double t8395;
  double t8398;
  double t8399;
  double t8408;
  double t8409;
  double t8523;
  double t8524;
  double t8421;
  double t8424;
  double t8429;
  double t8443;
  double t8452;
  double t8541;
  double t8542;
  double t8543;
  double t8545;
  double t8487;
  double t8490;
  double t8496;
  double t8510;
  double t8511;
  double t8513;
  double t8610;
  double t8615;
  double t8625;
  double t8631;
  double t8634;
  double t8641;
  double t8648;
  double t8652;
  double t8654;
  double t8661;
  double t8665;
  double t8666;
  double t8668;
  double t8675;
  double t8676;
  double t8683;
  double t8701;
  double t8705;
  double t8706;
  double t8719;
  double t8722;
  double t8729;
  double t8737;
  double t8747;
  double t8748;
  double t8752;
  double t8758;
  double t8759;
  double t8765;
  double t8775;
  double t8779;
  double t8780;
  double t8801;
  double t8802;
  double t8804;
  double t8815;
  double t8817;
  double t8827;
  double t8833;
  double t8836;
  double t8841;
  double t8845;
  double t8848;
  double t8849;
  double t8850;
  double t8854;
  double t8855;
  double t8859;
  double t8887;
  double t8889;
  double t8894;
  double t8895;
  double t8896;
  double t8883;
  double t8885;
  double t8886;
  double t8892;
  double t8893;
  double t8898;
  double t8899;
  double t8901;
  double t8907;
  double t8908;
  double t8909;
  double t8946;
  double t8957;
  double t8972;
  double t8974;
  double t8977;
  double t8998;
  double t9000;
  double t9009;
  double t9010;
  double t9012;
  double t9033;
  double t9035;
  double t9047;
  double t9050;
  double t9052;
  t36 = Cos(var1[3]);
  t63 = Cos(var1[6]);
  t96 = Cos(var1[5]);
  t116 = Sin(var1[3]);
  t142 = t96*t116;
  t184 = Sin(var1[4]);
  t209 = Sin(var1[5]);
  t212 = t36*t184*t209;
  t227 = t142 + t212;
  t56 = Cos(var1[4]);
  t255 = Sin(var1[6]);
  t75 = -0.135*t36*t56*t63;
  t265 = 0.135*t227*t255;
  t268 = -1.*t63*t227;
  t278 = -1.*t36*t56*t255;
  t288 = t268 + t278;
  t300 = t36*t56*t63;
  t357 = -1.*t227*t255;
  t365 = t300 + t357;
  t407 = Cos(var1[7]);
  t510 = Sin(var1[7]);
  t434 = -1.*t407;
  t483 = 1. + t434;
  t502 = 0.135*t483;
  t514 = 0.049*t510;
  t533 = t502 + t514;
  t547 = t365*t533;
  t639 = Cos(var1[8]);
  t640 = -1.*t639;
  t641 = 1. + t640;
  t648 = Sin(var1[8]);
  t642 = -0.049*t641;
  t665 = -0.09*t648;
  t673 = t642 + t665;
  t677 = t365*t510*t673;
  t681 = -0.09*t641;
  t683 = 0.049*t648;
  t699 = t681 + t683;
  t710 = t288*t699;
  t711 = t639*t365*t510;
  t720 = t288*t648;
  t726 = t711 + t720;
  t808 = Cos(var1[9]);
  t821 = -1.*t808;
  t841 = 1. + t821;
  t873 = Sin(var1[9]);
  t767 = t639*t288;
  t769 = -1.*t365*t510*t648;
  t783 = t767 + t769;
  t851 = -0.049*t841;
  t882 = -0.21*t873;
  t890 = t851 + t882;
  t940 = t890*t726;
  t960 = -0.21*t841;
  t972 = 0.049*t873;
  t987 = t960 + t972;
  t990 = t987*t783;
  t996 = -1.*t873*t726;
  t1007 = t808*t783;
  t1009 = t996 + t1007;
  t1036 = t808*t726;
  t1085 = t873*t783;
  t1088 = t1036 + t1085;
  t1217 = -1.*var1[9];
  t1225 = 0.226893 + t1217;
  t1231 = Cos(t1225);
  t1235 = -1.*t1231;
  t1270 = 1. + t1235;
  t1284 = Sin(t1225);
  t1465 = Cos(var1[12]);
  t1474 = -1.*t1465;
  t1487 = 1. + t1474;
  t1511 = Sin(var1[12]);
  t1283 = -0.70544*t1270;
  t1288 = -0.01841*t1284;
  t1302 = t1283 + t1288;
  t1308 = t1302*t1009;
  t1313 = 0.01841*t1270;
  t1314 = -0.70544*t1284;
  t1342 = t1313 + t1314;
  t1343 = t1342*t1088;
  t1564 = -0.07769774964800001*t1487;
  t1347 = t1284*t1009;
  t1351 = t1231*t1088;
  t1360 = t1347 + t1351;
  t1623 = -0.0004284921280000001*t1487;
  t1504 = -0.005481192614*t1487;
  t1396 = t1231*t1009;
  t1407 = -1.*t1284*t1088;
  t1421 = t1396 + t1407;
  t1684 = 0.077936*t1511;
  t1670 = -0.996943*t1511;
  t1568 = 0.005498*t1511;
  t1715 = 0.005481192614*t1487;
  t1523 = -0.077936*t1511;
  t1777 = 0.07769774964800001*t1487;
  t1612 = -0.005498*t1511;
  t1729 = 0.0004284921280000001*t1487;
  t1626 = 0.996943*t1511;
  t1849 = Cos(var1[13]);
  t1852 = -1.*t1849;
  t1861 = 1. + t1852;
  t1864 = Sin(var1[13]);
  t1961 = -1.*t116*t255;
  t1966 = t300 + t1961;
  t2002 = -1.*t63*t116;
  t2006 = t2002 + t278;
  t2015 = t639*t1966*t510;
  t2022 = t2006*t648;
  t2029 = t2015 + t2022;
  t2038 = t639*t2006;
  t2063 = -1.*t1966*t510*t648;
  t2064 = t2038 + t2063;
  t1863 = -0.02159*t1861;
  t1866 = -1.11344*t1864;
  t1871 = t1863 + t1866;
  t2099 = -1.*t873*t2029;
  t2100 = t808*t2064;
  t2104 = t2099 + t2100;
  t2112 = t808*t2029;
  t2123 = t873*t2064;
  t2125 = t2112 + t2123;
  t1873 = -1.11344*t1861;
  t1876 = 0.02159*t1864;
  t1878 = t1873 + t1876;
  t2142 = t1284*t2104;
  t2153 = t1231*t2125;
  t2169 = t2142 + t2153;
  t2181 = t1231*t2104;
  t2182 = -1.*t1284*t2125;
  t2201 = t2181 + t2182;
  t2317 = t63*t639*t184*t510;
  t2329 = -1.*t184*t255*t648;
  t2330 = t2317 + t2329;
  t2342 = -1.*t639*t184*t255;
  t2346 = -1.*t63*t184*t510*t648;
  t2347 = t2342 + t2346;
  t2369 = -1.*t873*t2330;
  t2374 = t808*t2347;
  t2387 = t2369 + t2374;
  t2394 = t808*t2330;
  t2410 = t873*t2347;
  t2411 = t2394 + t2410;
  t2420 = t1284*t2387;
  t2424 = t1231*t2411;
  t2425 = t2420 + t2424;
  t2435 = t1231*t2387;
  t2437 = -1.*t1284*t2411;
  t2440 = t2435 + t2437;
  t2496 = -1.*t56*t63*t116;
  t2502 = -1.*t36*t255;
  t2503 = t2496 + t2502;
  t2518 = -1.*t36*t63;
  t2530 = t56*t116*t255;
  t2541 = t2518 + t2530;
  t2557 = t639*t2503*t510;
  t2559 = t2541*t648;
  t2574 = t2557 + t2559;
  t2581 = t639*t2541;
  t2582 = -1.*t2503*t510*t648;
  t2590 = t2581 + t2582;
  t2592 = -1.*t873*t2574;
  t2596 = t808*t2590;
  t2604 = t2592 + t2596;
  t2645 = t808*t2574;
  t2648 = t873*t2590;
  t2667 = t2645 + t2648;
  t2696 = t1284*t2604;
  t2704 = t1231*t2667;
  t2717 = t2696 + t2704;
  t2726 = t1231*t2604;
  t2734 = -1.*t1284*t2667;
  t2749 = t2726 + t2734;
  t1884 = -1.*t1864*t1360;
  t1887 = t1849*t1421;
  t1889 = t1884 + t1887;
  t1894 = t1849*t1360;
  t1897 = t1864*t1421;
  t1898 = t1894 + t1897;
  t2873 = t63*t227;
  t2874 = t36*t56*t255;
  t2881 = t2873 + t2874;
  t2850 = -1.*t36*t96*t184;
  t2851 = t116*t209;
  t2854 = t2850 + t2851;
  t2860 = 0.135*t407;
  t2861 = -0.049*t510;
  t2868 = t2860 + t2861;
  t2872 = t2854*t2868;
  t2888 = 0.049*t407;
  t2891 = 0.135*t510;
  t2896 = t2888 + t2891;
  t2906 = t2881*t2896;
  t2909 = t407*t2881;
  t2910 = -1.*t2854*t510;
  t2912 = t2909 + t2910;
  t2924 = -1.*t407*t2854;
  t2928 = -1.*t2881*t510;
  t2930 = t2924 + t2928;
  t2950 = t2912*t673;
  t2963 = t639*t890*t2912;
  t2974 = -1.*t987*t2912*t648;
  t2975 = -1.*t639*t873*t2912;
  t2978 = -1.*t808*t2912*t648;
  t2980 = t2975 + t2978;
  t2984 = t808*t639*t2912;
  t2985 = -1.*t873*t2912*t648;
  t2986 = t2984 + t2985;
  t1448 = -2.1934241414728571e-7*var1[12];
  t1501 = 0.000033783761634830594*t1487;
  t1535 = t1504 + t1523;
  t1546 = -0.6934341012630001*t1535;
  t1582 = t1564 + t1568;
  t1585 = -0.021877537552*t1582;
  t1590 = t1448 + t1501 + t1546 + t1585;
  t3024 = t1302*t2980;
  t3025 = t1342*t2986;
  t1602 = -1.7147089040178687e-8*var1[12];
  t1609 = -0.021744644052735636*t1487;
  t1617 = t1564 + t1612;
  t1619 = 0.005534467322*t1617;
  t1636 = t1623 + t1626;
  t1638 = -0.6934341012630001*t1636;
  t1639 = t1602 + t1609 + t1619 + t1638;
  t3033 = t1284*t2980;
  t3036 = t1231*t2986;
  t3040 = t3033 + t3036;
  t1664 = -1.2096424700126054e-9*var1[12];
  t1667 = -0.6934128581485427*t1487;
  t1676 = t1623 + t1670;
  t1680 = -0.021877537552*t1676;
  t1687 = t1504 + t1684;
  t1692 = 0.005534467322*t1687;
  t1693 = t1664 + t1667 + t1680 + t1692;
  t3044 = t1231*t2980;
  t3045 = -1.*t1284*t2986;
  t3051 = t3044 + t3045;
  t1723 = t1715 + t1684;
  t1732 = t1729 + t1670;
  t1746 = -0.999969365345*t1487;
  t1754 = 1. + t1746;
  t1763 = -0.006104248100000001*t1487;
  t1764 = 1. + t1763;
  t1794 = t1777 + t1568;
  t1798 = t1715 + t1523;
  t1808 = t1777 + t1612;
  t1814 = -0.993925573253*t1487;
  t1819 = 1. + t1814;
  t1821 = t1729 + t1626;
  t3261 = t63*t116;
  t3265 = t3261 + t2874;
  t3272 = t407*t3265;
  t3275 = t36*t184*t510;
  t3278 = t3272 + t3275;
  t3301 = -1.*t639*t873*t3278;
  t3305 = -1.*t808*t3278*t648;
  t3306 = t3301 + t3305;
  t3310 = t808*t639*t3278;
  t3311 = -1.*t873*t3278*t648;
  t3315 = t3310 + t3311;
  t3332 = t1284*t3306;
  t3336 = t1231*t3315;
  t3340 = t3332 + t3336;
  t3350 = t1231*t3306;
  t3353 = -1.*t1284*t3315;
  t3367 = t3350 + t3353;
  t3456 = t407*t184*t255;
  t3457 = -1.*t56*t510;
  t3458 = t3456 + t3457;
  t3476 = -1.*t639*t873*t3458;
  t3477 = -1.*t808*t3458*t648;
  t3481 = t3476 + t3477;
  t3497 = t808*t639*t3458;
  t3501 = -1.*t873*t3458*t648;
  t3514 = t3497 + t3501;
  t3520 = t1284*t3481;
  t3528 = t1231*t3514;
  t3544 = t3520 + t3528;
  t3546 = t1231*t3481;
  t3556 = -1.*t1284*t3514;
  t3568 = t3546 + t3556;
  t3625 = t36*t63;
  t3634 = -1.*t56*t116*t255;
  t3635 = t3625 + t3634;
  t3638 = t407*t3635;
  t3643 = -1.*t116*t184*t510;
  t3644 = t3638 + t3643;
  t3682 = -1.*t639*t873*t3644;
  t3683 = -1.*t808*t3644*t648;
  t3684 = t3682 + t3683;
  t3687 = t808*t639*t3644;
  t3691 = -1.*t873*t3644*t648;
  t3697 = t3687 + t3691;
  t3709 = t1284*t3684;
  t3710 = t1231*t3697;
  t3711 = t3709 + t3710;
  t3719 = t1231*t3684;
  t3744 = -1.*t1284*t3697;
  t3766 = t3719 + t3744;
  t3199 = -1.*t1864*t3040;
  t3201 = t1849*t3051;
  t3203 = t3199 + t3201;
  t3216 = t1849*t3040;
  t3220 = t1864*t3051;
  t3227 = t3216 + t3220;
  t3889 = t407*t2854;
  t3893 = t2881*t510;
  t3902 = t3889 + t3893;
  t3875 = 0.049*t639;
  t3885 = t3875 + t665;
  t3888 = t365*t3885;
  t3905 = -0.09*t639;
  t3906 = -0.049*t648;
  t3913 = t3905 + t3906;
  t3915 = t3902*t3913;
  t3920 = -1.*t639*t3902;
  t3921 = -1.*t365*t648;
  t3922 = t3920 + t3921;
  t3932 = t639*t365;
  t3933 = -1.*t3902*t648;
  t3937 = t3932 + t3933;
  t3941 = t987*t3922;
  t3943 = t890*t3937;
  t3944 = t873*t3922;
  t3945 = t808*t3937;
  t3954 = t3944 + t3945;
  t3958 = t808*t3922;
  t3960 = -1.*t873*t3937;
  t3961 = t3958 + t3960;
  t3987 = t1342*t3954;
  t3993 = t1302*t3961;
  t3997 = -1.*t1284*t3954;
  t4017 = t1231*t3961;
  t4020 = t3997 + t4017;
  t4026 = t1231*t3954;
  t4032 = t1284*t3961;
  t4039 = t4026 + t4032;
  t4188 = -1.*t36*t407*t184;
  t4198 = t3265*t510;
  t4203 = t4188 + t4198;
  t4212 = -1.*t639*t4203;
  t4213 = -1.*t1966*t648;
  t4221 = t4212 + t4213;
  t4230 = t639*t1966;
  t4242 = -1.*t4203*t648;
  t4246 = t4230 + t4242;
  t4260 = t873*t4221;
  t4287 = t808*t4246;
  t4289 = t4260 + t4287;
  t4309 = t808*t4221;
  t4314 = -1.*t873*t4246;
  t4315 = t4309 + t4314;
  t4323 = -1.*t1284*t4289;
  t4328 = t1231*t4315;
  t4329 = t4323 + t4328;
  t4336 = t1231*t4289;
  t4337 = t1284*t4315;
  t4338 = t4336 + t4337;
  t4378 = t56*t407;
  t4382 = t184*t255*t510;
  t4389 = t4378 + t4382;
  t4401 = -1.*t639*t4389;
  t4403 = -1.*t63*t184*t648;
  t4412 = t4401 + t4403;
  t4422 = t63*t639*t184;
  t4423 = -1.*t4389*t648;
  t4424 = t4422 + t4423;
  t4441 = t873*t4412;
  t4445 = t808*t4424;
  t4446 = t4441 + t4445;
  t4453 = t808*t4412;
  t4455 = -1.*t873*t4424;
  t4456 = t4453 + t4455;
  t4463 = -1.*t1284*t4446;
  t4496 = t1231*t4456;
  t4513 = t4463 + t4496;
  t4521 = t1231*t4446;
  t4534 = t1284*t4456;
  t4541 = t4521 + t4534;
  t4595 = t407*t116*t184;
  t4597 = t3635*t510;
  t4606 = t4595 + t4597;
  t4611 = -1.*t639*t4606;
  t4617 = -1.*t2503*t648;
  t4624 = t4611 + t4617;
  t4632 = t639*t2503;
  t4637 = -1.*t4606*t648;
  t4648 = t4632 + t4637;
  t4658 = t873*t4624;
  t4659 = t808*t4648;
  t4660 = t4658 + t4659;
  t4662 = t808*t4624;
  t4664 = -1.*t873*t4648;
  t4668 = t4662 + t4664;
  t4675 = -1.*t1284*t4660;
  t4676 = t1231*t4668;
  t4677 = t4675 + t4676;
  t4680 = t1231*t4660;
  t4682 = t1284*t4668;
  t4684 = t4680 + t4682;
  t4153 = t1864*t4020;
  t4155 = t1849*t4039;
  t4156 = t4153 + t4155;
  t4162 = t1849*t4020;
  t4163 = -1.*t1864*t4039;
  t4166 = t4162 + t4163;
  t4729 = t639*t3902;
  t4732 = t365*t648;
  t4735 = t4729 + t4732;
  t4710 = -0.21*t808;
  t4713 = -0.049*t873;
  t4720 = t4710 + t4713;
  t4742 = t4720*t4735;
  t4744 = 0.049*t808;
  t4751 = t4744 + t882;
  t4753 = t4751*t3937;
  t4754 = -1.*t873*t4735;
  t4757 = t4754 + t3945;
  t4763 = -1.*t808*t4735;
  t4764 = t4763 + t3960;
  t4829 = t808*t4735;
  t4830 = t873*t3937;
  t4834 = t4829 + t4830;
  t4799 = t1342*t4757;
  t4809 = 0.01841*t1231;
  t4812 = 0.70544*t1284;
  t4814 = t4809 + t4812;
  t4816 = t4814*t4757;
  t4817 = t1302*t4764;
  t4819 = 0.70544*t1231;
  t4824 = t4819 + t1288;
  t4837 = t4824*t4834;
  t4841 = t1231*t4764;
  t4844 = t1231*t4834;
  t4852 = t4841 + t4844;
  t4856 = t1284*t4764;
  t4862 = t1284*t4834;
  t4863 = t4856 + t4862;
  t5006 = t639*t4203;
  t5007 = t1966*t648;
  t5011 = t5006 + t5007;
  t5023 = -1.*t873*t5011;
  t5025 = t5023 + t4287;
  t5033 = -1.*t808*t5011;
  t5035 = t5033 + t4314;
  t5044 = t808*t5011;
  t5045 = t873*t4246;
  t5046 = t5044 + t5045;
  t5055 = t1231*t5035;
  t5064 = t1231*t5046;
  t5065 = t5055 + t5064;
  t5070 = t1284*t5035;
  t5071 = t1284*t5046;
  t5077 = t5070 + t5071;
  t5114 = t639*t4389;
  t5116 = t63*t184*t648;
  t5119 = t5114 + t5116;
  t5135 = -1.*t873*t5119;
  t5141 = t5135 + t4445;
  t5156 = -1.*t808*t5119;
  t5158 = t5156 + t4455;
  t5162 = t808*t5119;
  t5169 = t873*t4424;
  t5172 = t5162 + t5169;
  t5177 = t1231*t5158;
  t5178 = t1231*t5172;
  t5179 = t5177 + t5178;
  t5190 = t1284*t5158;
  t5191 = t1284*t5172;
  t5193 = t5190 + t5191;
  t5215 = t639*t4606;
  t5216 = t2503*t648;
  t5219 = t5215 + t5216;
  t5231 = -1.*t873*t5219;
  t5235 = t5231 + t4659;
  t5247 = -1.*t808*t5219;
  t5250 = t5247 + t4664;
  t5254 = t808*t5219;
  t5257 = t873*t4648;
  t5259 = t5254 + t5257;
  t5276 = t1231*t5250;
  t5278 = t1231*t5259;
  t5285 = t5276 + t5278;
  t5298 = t1284*t5250;
  t5304 = t1284*t5259;
  t5306 = t5298 + t5304;
  t4983 = t1864*t4852;
  t4985 = t1849*t4863;
  t4987 = t4983 + t4985;
  t4989 = t1849*t4852;
  t4992 = -1.*t1864*t4863;
  t4996 = t4989 + t4992;
  t5424 = t1284*t4757;
  t5429 = t5424 + t4844;
  t5474 = t1231*t4757;
  t5482 = -1.*t1284*t4834;
  t5488 = t5474 + t5482;
  t5393 = -1.11344*t1849;
  t5404 = -0.02159*t1864;
  t5422 = t5393 + t5404;
  t5458 = 0.02159*t1849;
  t5472 = t5458 + t1866;
  t5549 = t1284*t5025;
  t5558 = t5549 + t5064;
  t5567 = t1231*t5025;
  t5573 = -1.*t1284*t5046;
  t5574 = t5567 + t5573;
  t5610 = t1284*t5141;
  t5611 = t5610 + t5178;
  t5629 = t1231*t5141;
  t5637 = -1.*t1284*t5172;
  t5670 = t5629 + t5637;
  t5697 = t1284*t5235;
  t5698 = t5697 + t5278;
  t5704 = t1231*t5235;
  t5705 = -1.*t1284*t5259;
  t5710 = t5704 + t5705;
  t5497 = -1.*t1864*t5429;
  t5501 = t1849*t5488;
  t5505 = t5497 + t5501;
  t5509 = -1.*t1849*t5429;
  t5517 = -1.*t1864*t5488;
  t5525 = t5509 + t5517;
  t5745 = Sin(var1[14]);
  t5741 = Cos(var1[14]);
  t5818 = Cos(var1[15]);
  t5820 = t5741*t36*t56;
  t5844 = -1.*t5745*t227;
  t5855 = t5820 + t5844;
  t5880 = Sin(var1[15]);
  t5759 = Cos(var1[16]);
  t5760 = -1.*t5759;
  t5762 = 1. + t5760;
  t5772 = Sin(var1[16]);
  t5790 = -1.*t36*t56*t5745;
  t5794 = -1.*t5741*t227;
  t5798 = t5790 + t5794;
  t5964 = Cos(var1[17]);
  t5985 = -1.*t5964;
  t5988 = 1. + t5985;
  t5994 = Sin(var1[17]);
  t6036 = -1.*var1[17];
  t6040 = 0.226893 + t6036;
  t6006 = t5772*t5798;
  t6011 = t5759*t5880*t5855;
  t6015 = t6006 + t6011;
  t6032 = t5759*t5798;
  t6033 = -1.*t5880*t5772*t5855;
  t6034 = t6032 + t6033;
  t6045 = Cos(t6040);
  t6051 = -1.*t6045;
  t6055 = 1. + t6051;
  t6058 = Sin(t6040);
  t6064 = -1.*t5994*t6015;
  t6067 = t5964*t6034;
  t6068 = t6064 + t6067;
  t6094 = t5964*t6015;
  t6095 = t5994*t6034;
  t6096 = t6094 + t6095;
  t6100 = Cos(var1[21]);
  t6103 = -1.*t6100;
  t6105 = 1. + t6103;
  t6107 = Sin(var1[21]);
  t6117 = t6058*t6068;
  t6121 = t6045*t6096;
  t6122 = t6117 + t6121;
  t6142 = t6045*t6068;
  t6143 = -1.*t6058*t6096;
  t6144 = t6142 + t6143;
  t6187 = 0.135*t5741*t36*t56;
  t6190 = -0.135*t5745*t227;
  t5859 = -1.*t5818;
  t5860 = 1. + t5859;
  t5877 = -0.135*t5860;
  t5900 = 0.049*t5880;
  t5905 = t5877 + t5900;
  t5764 = -0.09*t5762;
  t5773 = 0.049*t5772;
  t5774 = t5764 + t5773;
  t6204 = t5905*t5855;
  t5915 = -0.049*t5762;
  t5923 = -0.09*t5772;
  t5925 = t5915 + t5923;
  t6212 = t5774*t5798;
  t6216 = t5880*t5925*t5855;
  t5993 = -0.049*t5988;
  t5995 = -0.21*t5994;
  t6005 = t5993 + t5995;
  t6018 = -0.21*t5988;
  t6019 = 0.049*t5994;
  t6029 = t6018 + t6019;
  t6241 = t6005*t6015;
  t6251 = t6029*t6034;
  t6056 = -0.70544*t6055;
  t6061 = -0.01841*t6058;
  t6062 = t6056 + t6061;
  t6080 = 0.01841*t6055;
  t6085 = -0.70544*t6058;
  t6092 = t6080 + t6085;
  t6321 = Cos(var1[20]);
  t6323 = -1.*t6321;
  t6326 = 1. + t6323;
  t6330 = Sin(var1[20]);
  t6294 = t6062*t6068;
  t6299 = t6092*t6096;
  t6328 = 0.07769774964800001*t6326;
  t6396 = -0.0004284921280000001*t6326;
  t6336 = 0.005481192614*t6326;
  t6443 = -0.077936*t6330;
  t6420 = -0.996943*t6330;
  t6332 = -0.005498*t6330;
  t6470 = -0.005481192614*t6326;
  t6338 = 0.077936*t6330;
  t6525 = -0.07769774964800001*t6326;
  t6368 = 0.005498*t6330;
  t6477 = 0.0004284921280000001*t6326;
  t6400 = 0.996943*t6330;
  t6106 = -0.02159*t6105;
  t6109 = -1.11344*t6107;
  t6113 = t6106 + t6109;
  t6130 = -1.11344*t6105;
  t6134 = 0.02159*t6107;
  t6136 = t6130 + t6134;
  t6158 = -1.*t6107*t6122;
  t6164 = t6100*t6144;
  t6165 = t6158 + t6164;
  t6177 = t6100*t6122;
  t6180 = t6107*t6144;
  t6184 = t6177 + t6180;
  t5742 = -0.135*t5741*t36*t56;
  t6621 = -1.*t5745*t116;
  t6627 = t5820 + t6621;
  t6613 = -1.*t5741*t116;
  t6615 = t5790 + t6613;
  t6639 = t5772*t6615;
  t6641 = t5759*t5880*t6627;
  t6642 = t6639 + t6641;
  t6647 = t5759*t6615;
  t6658 = -1.*t5880*t5772*t6627;
  t6680 = t6647 + t6658;
  t6689 = -1.*t5994*t6642;
  t6690 = t5964*t6680;
  t6693 = t6689 + t6690;
  t6709 = t5964*t6642;
  t6713 = t5994*t6680;
  t6717 = t6709 + t6713;
  t6725 = t6058*t6693;
  t6726 = t6045*t6717;
  t6733 = t6725 + t6726;
  t6739 = t6045*t6693;
  t6750 = -1.*t6058*t6717;
  t6753 = t6739 + t6750;
  t6807 = t5741*t5759*t5880*t184;
  t6811 = -1.*t5745*t5772*t184;
  t6814 = t6807 + t6811;
  t6816 = -1.*t5759*t5745*t184;
  t6820 = -1.*t5741*t5880*t5772*t184;
  t6821 = t6816 + t6820;
  t6823 = -1.*t5994*t6814;
  t6827 = t5964*t6821;
  t6835 = t6823 + t6827;
  t6841 = t5964*t6814;
  t6843 = t5994*t6821;
  t6844 = t6841 + t6843;
  t6849 = t6058*t6835;
  t6854 = t6045*t6844;
  t6860 = t6849 + t6854;
  t6865 = t6045*t6835;
  t6868 = -1.*t6058*t6844;
  t6869 = t6865 + t6868;
  t6915 = -1.*t36*t5745;
  t6923 = -1.*t5741*t56*t116;
  t6935 = t6915 + t6923;
  t6954 = -1.*t5741*t36;
  t6961 = t56*t5745*t116;
  t6975 = t6954 + t6961;
  t6980 = -1.*t5880*t5772*t6935;
  t6982 = t5759*t6975;
  t6987 = t6980 + t6982;
  t6994 = t5759*t5880*t6935;
  t6998 = t5772*t6975;
  t7002 = t6994 + t6998;
  t7012 = t5994*t6987;
  t7013 = t5964*t7002;
  t7022 = t7012 + t7013;
  t7029 = t5964*t6987;
  t7030 = -1.*t5994*t7002;
  t7031 = t7029 + t7030;
  t7043 = -1.*t6058*t7022;
  t7057 = t6045*t7031;
  t7059 = t7043 + t7057;
  t7066 = t6045*t7022;
  t7078 = t6058*t7031;
  t7079 = t7066 + t7078;
  t7153 = t36*t56*t5745;
  t7154 = t5741*t227;
  t7158 = t7153 + t7154;
  t7163 = -1.*t5880*t2854;
  t7166 = t5818*t7158;
  t7169 = t7163 + t7166;
  t7189 = -1.*t5964*t5772*t7169;
  t7190 = -1.*t5759*t5994*t7169;
  t7193 = t7189 + t7190;
  t7197 = t5759*t5964*t7169;
  t7198 = -1.*t5772*t5994*t7169;
  t7200 = t7197 + t7198;
  t7206 = t6058*t7193;
  t7207 = t6045*t7200;
  t7208 = t7206 + t7207;
  t7214 = t6045*t7193;
  t7216 = -1.*t6058*t7200;
  t7217 = t7214 + t7216;
  t7132 = -0.135*t5818;
  t7133 = -0.049*t5880;
  t7136 = t7132 + t7133;
  t7142 = 0.049*t5818;
  t7144 = -0.135*t5880;
  t7151 = t7142 + t7144;
  t7181 = -1.*t5818*t2854;
  t7182 = -1.*t5880*t7158;
  t7185 = t7181 + t7182;
  t7260 = t7136*t2854;
  t7270 = t7151*t7158;
  t7280 = t5925*t7169;
  t7308 = t5759*t6005*t7169;
  t7309 = -1.*t5772*t6029*t7169;
  t6313 = 2.1934241414728571e-7*var1[20];
  t6327 = -0.000033783761634830594*t6326;
  t6334 = t6328 + t6332;
  t6335 = -0.021877537552*t6334;
  t6340 = t6336 + t6338;
  t6341 = -0.6934341012630001*t6340;
  t6355 = t6313 + t6327 + t6335 + t6341;
  t7343 = t6062*t7193;
  t7345 = t6092*t7200;
  t6362 = -1.7147089040178687e-8*var1[20];
  t6364 = -0.021744644052735636*t6326;
  t6391 = t6328 + t6368;
  t6395 = -0.005534467322*t6391;
  t6402 = t6396 + t6400;
  t6406 = -0.6934341012630001*t6402;
  t6408 = t6362 + t6364 + t6395 + t6406;
  t6414 = -1.2096424700126054e-9*var1[20];
  t6415 = -0.6934128581485427*t6326;
  t6426 = t6396 + t6420;
  t6431 = -0.021877537552*t6426;
  t6446 = t6336 + t6443;
  t6461 = -0.005534467322*t6446;
  t6466 = t6414 + t6415 + t6431 + t6461;
  t6472 = t6470 + t6443;
  t6481 = t6477 + t6420;
  t6485 = -0.999969365345*t6326;
  t6487 = 1. + t6485;
  t6521 = -0.006104248100000001*t6326;
  t6523 = 1. + t6521;
  t6527 = t6525 + t6332;
  t6532 = t6470 + t6338;
  t6540 = t6525 + t6368;
  t6546 = -0.993925573253*t6326;
  t6548 = 1. + t6546;
  t6554 = t6477 + t6400;
  t7228 = -1.*t6107*t7208;
  t7234 = t6100*t7217;
  t7235 = t7228 + t7234;
  t7237 = t6100*t7208;
  t7240 = t6107*t7217;
  t7241 = t7237 + t7240;
  t7465 = t5741*t116;
  t7467 = t7153 + t7465;
  t7493 = t5818*t7467;
  t7494 = t36*t5880*t184;
  t7499 = t7493 + t7494;
  t7531 = -1.*t5964*t5772*t7499;
  t7534 = -1.*t5759*t5994*t7499;
  t7536 = t7531 + t7534;
  t7544 = t5759*t5964*t7499;
  t7547 = -1.*t5772*t5994*t7499;
  t7549 = t7544 + t7547;
  t7553 = t6058*t7536;
  t7554 = t6045*t7549;
  t7555 = t7553 + t7554;
  t7573 = t6045*t7536;
  t7578 = -1.*t6058*t7549;
  t7583 = t7573 + t7578;
  t7642 = -1.*t56*t5880;
  t7644 = t5818*t5745*t184;
  t7646 = t7642 + t7644;
  t7665 = -1.*t5964*t5772*t7646;
  t7666 = -1.*t5759*t5994*t7646;
  t7667 = t7665 + t7666;
  t7672 = t5759*t5964*t7646;
  t7675 = -1.*t5772*t5994*t7646;
  t7677 = t7672 + t7675;
  t7679 = t6058*t7667;
  t7680 = t6045*t7677;
  t7683 = t7679 + t7680;
  t7686 = t6045*t7667;
  t7687 = -1.*t6058*t7677;
  t7688 = t7686 + t7687;
  t7720 = t5741*t36;
  t7722 = -1.*t56*t5745*t116;
  t7728 = t7720 + t7722;
  t7750 = t5818*t7728;
  t7760 = -1.*t5880*t116*t184;
  t7761 = t7750 + t7760;
  t7778 = -1.*t5964*t5772*t7761;
  t7783 = -1.*t5759*t5994*t7761;
  t7784 = t7778 + t7783;
  t7787 = t5759*t5964*t7761;
  t7788 = -1.*t5772*t5994*t7761;
  t7790 = t7787 + t7788;
  t7793 = t6058*t7784;
  t7797 = t6045*t7790;
  t7804 = t7793 + t7797;
  t7806 = t6045*t7784;
  t7808 = -1.*t6058*t7790;
  t7809 = t7806 + t7808;
  t7850 = t5818*t2854;
  t7851 = t5880*t7158;
  t7855 = t7850 + t7851;
  t7860 = -1.*t5772*t5855;
  t7862 = -1.*t5759*t7855;
  t7863 = t7860 + t7862;
  t7870 = t5759*t5855;
  t7875 = -1.*t5772*t7855;
  t7876 = t7870 + t7875;
  t7878 = t5994*t7863;
  t7879 = t5964*t7876;
  t7881 = t7878 + t7879;
  t7883 = t5964*t7863;
  t7884 = -1.*t5994*t7876;
  t7885 = t7883 + t7884;
  t7888 = -1.*t6058*t7881;
  t7889 = t6045*t7885;
  t7897 = t7888 + t7889;
  t7902 = t6045*t7881;
  t7905 = t6058*t7885;
  t7908 = t7902 + t7905;
  t7837 = 0.049*t5759;
  t7838 = t7837 + t5923;
  t7842 = -0.09*t5759;
  t7843 = -0.049*t5772;
  t7846 = t7842 + t7843;
  t7945 = t7838*t5855;
  t7947 = t7846*t7855;
  t7957 = t6029*t7863;
  t7958 = t6005*t7876;
  t7974 = t6092*t7881;
  t7977 = t6062*t7885;
  t7910 = t6107*t7897;
  t7914 = t6100*t7908;
  t7922 = t7910 + t7914;
  t7925 = t6100*t7897;
  t7933 = -1.*t6107*t7908;
  t7936 = t7925 + t7933;
  t8096 = t5880*t7467;
  t8097 = -1.*t5818*t36*t184;
  t8099 = t8096 + t8097;
  t8102 = -1.*t5772*t6627;
  t8105 = -1.*t5759*t8099;
  t8116 = t8102 + t8105;
  t8123 = t5759*t6627;
  t8128 = -1.*t5772*t8099;
  t8129 = t8123 + t8128;
  t8136 = t5994*t8116;
  t8145 = t5964*t8129;
  t8147 = t8136 + t8145;
  t8149 = t5964*t8116;
  t8151 = -1.*t5994*t8129;
  t8152 = t8149 + t8151;
  t8157 = -1.*t6058*t8147;
  t8158 = t6045*t8152;
  t8162 = t8157 + t8158;
  t8167 = t6045*t8147;
  t8170 = t6058*t8152;
  t8173 = t8167 + t8170;
  t8199 = t5818*t56;
  t8202 = t5745*t5880*t184;
  t8204 = t8199 + t8202;
  t8206 = -1.*t5741*t5772*t184;
  t8207 = -1.*t5759*t8204;
  t8208 = t8206 + t8207;
  t8212 = t5741*t5759*t184;
  t8213 = -1.*t5772*t8204;
  t8216 = t8212 + t8213;
  t8222 = t5994*t8208;
  t8223 = t5964*t8216;
  t8225 = t8222 + t8223;
  t8233 = t5964*t8208;
  t8234 = -1.*t5994*t8216;
  t8237 = t8233 + t8234;
  t8241 = -1.*t6058*t8225;
  t8244 = t6045*t8237;
  t8248 = t8241 + t8244;
  t8251 = t6045*t8225;
  t8253 = t6058*t8237;
  t8254 = t8251 + t8253;
  t8277 = t5880*t7728;
  t8281 = t5818*t116*t184;
  t8285 = t8277 + t8281;
  t8287 = -1.*t5772*t6935;
  t8289 = -1.*t5759*t8285;
  t8291 = t8287 + t8289;
  t8297 = t5759*t6935;
  t8300 = -1.*t5772*t8285;
  t8302 = t8297 + t8300;
  t8314 = t5994*t8291;
  t8322 = t5964*t8302;
  t8323 = t8314 + t8322;
  t8340 = t5964*t8291;
  t8342 = -1.*t5994*t8302;
  t8344 = t8340 + t8342;
  t8348 = -1.*t6058*t8323;
  t8353 = t6045*t8344;
  t8360 = t8348 + t8353;
  t8364 = t6045*t8323;
  t8372 = t6058*t8344;
  t8373 = t8364 + t8372;
  t8401 = t5772*t5855;
  t8402 = t5759*t7855;
  t8403 = t8401 + t8402;
  t8415 = -1.*t5994*t8403;
  t8418 = t8415 + t7879;
  t8433 = -1.*t5964*t8403;
  t8434 = t8433 + t7884;
  t8454 = t5964*t8403;
  t8458 = t5994*t7876;
  t8461 = t8454 + t8458;
  t8465 = t6045*t8434;
  t8466 = t6045*t8461;
  t8469 = t8465 + t8466;
  t8477 = t6058*t8434;
  t8479 = t6058*t8461;
  t8480 = t8477 + t8479;
  t8395 = -0.21*t5964;
  t8398 = -0.049*t5994;
  t8399 = t8395 + t8398;
  t8408 = 0.049*t5964;
  t8409 = t8408 + t5995;
  t8523 = t8399*t8403;
  t8524 = t8409*t7876;
  t8421 = 0.01841*t6045;
  t8424 = 0.70544*t6058;
  t8429 = t8421 + t8424;
  t8443 = 0.70544*t6045;
  t8452 = t8443 + t6061;
  t8541 = t6092*t8418;
  t8542 = t8429*t8418;
  t8543 = t6062*t8434;
  t8545 = t8452*t8461;
  t8487 = t6107*t8469;
  t8490 = t6100*t8480;
  t8496 = t8487 + t8490;
  t8510 = t6100*t8469;
  t8511 = -1.*t6107*t8480;
  t8513 = t8510 + t8511;
  t8610 = t5772*t6627;
  t8615 = t5759*t8099;
  t8625 = t8610 + t8615;
  t8631 = -1.*t5994*t8625;
  t8634 = t8631 + t8145;
  t8641 = -1.*t5964*t8625;
  t8648 = t8641 + t8151;
  t8652 = t5964*t8625;
  t8654 = t5994*t8129;
  t8661 = t8652 + t8654;
  t8665 = t6045*t8648;
  t8666 = t6045*t8661;
  t8668 = t8665 + t8666;
  t8675 = t6058*t8648;
  t8676 = t6058*t8661;
  t8683 = t8675 + t8676;
  t8701 = t5741*t5772*t184;
  t8705 = t5759*t8204;
  t8706 = t8701 + t8705;
  t8719 = -1.*t5994*t8706;
  t8722 = t8719 + t8223;
  t8729 = -1.*t5964*t8706;
  t8737 = t8729 + t8234;
  t8747 = t5964*t8706;
  t8748 = t5994*t8216;
  t8752 = t8747 + t8748;
  t8758 = t6045*t8737;
  t8759 = t6045*t8752;
  t8765 = t8758 + t8759;
  t8775 = t6058*t8737;
  t8779 = t6058*t8752;
  t8780 = t8775 + t8779;
  t8801 = t5772*t6935;
  t8802 = t5759*t8285;
  t8804 = t8801 + t8802;
  t8815 = -1.*t5994*t8804;
  t8817 = t8815 + t8322;
  t8827 = -1.*t5964*t8804;
  t8833 = t8827 + t8342;
  t8836 = t5964*t8804;
  t8841 = t5994*t8302;
  t8845 = t8836 + t8841;
  t8848 = t6045*t8833;
  t8849 = t6045*t8845;
  t8850 = t8848 + t8849;
  t8854 = t6058*t8833;
  t8855 = t6058*t8845;
  t8859 = t8854 + t8855;
  t8887 = t6058*t8418;
  t8889 = t8887 + t8466;
  t8894 = t6045*t8418;
  t8895 = -1.*t6058*t8461;
  t8896 = t8894 + t8895;
  t8883 = -1.11344*t6100;
  t8885 = -0.02159*t6107;
  t8886 = t8883 + t8885;
  t8892 = 0.02159*t6100;
  t8893 = t8892 + t6109;
  t8898 = -1.*t6107*t8889;
  t8899 = t6100*t8896;
  t8901 = t8898 + t8899;
  t8907 = -1.*t6100*t8889;
  t8908 = -1.*t6107*t8896;
  t8909 = t8907 + t8908;
  t8946 = t6058*t8634;
  t8957 = t8946 + t8666;
  t8972 = t6045*t8634;
  t8974 = -1.*t6058*t8661;
  t8977 = t8972 + t8974;
  t8998 = t6058*t8722;
  t9000 = t8998 + t8759;
  t9009 = t6045*t8722;
  t9010 = -1.*t6058*t8752;
  t9012 = t9009 + t9010;
  t9033 = t6058*t8817;
  t9035 = t9033 + t8849;
  t9047 = t6045*t8817;
  t9050 = -1.*t6058*t8845;
  t9052 = t9047 + t9050;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0.0288377642750394*(1.965608*(t265 + 0.01793*t288 + 0.1351*t365 + t75) + 1.316608*(t265 - 0.0343*t288 + 0.135*t365*t407 - 0.049*t365*t510 + t547 + t75) + 5.79228*(t265 + 0.17081*t365*t407 + t547 + t677 + t710 - 0.04895*t726 + t75 - 0.14946*t783) + 1.03*(t1308 + t1343 - 0.004179*t1360 - 0.826587*t1421 + t265 + 0.127241*t365*t407 + t547 + t677 + t710 + t75 + t940 + t990) + 0.763*(-0.45406*t1009 - 0.000421*t1088 + t265 + 0.130288*t365*t407 + t547 + t677 + t710 + t75 + t940 + t990) + 0.1498*(t1308 + t1343 + t1360*t1871 + t1421*t1878 - 1.11818*t1889 + 0.00589*t1898 + t265 + 0.13064*t365*t407 + t547 + t677 + t710 + t75 + t940 + t990) + 1.03008*(-0.255862*t1009 - 0.007761*t1088 + t265 + 0.132168*t365*t407 + t547 + t677 + t710 + t75 + t940 + t990) + 0.126*(t1308 + t1343 + t1360*t1639 + t1421*t1693 + t265 + t1590*t365*t407 - 0.617968*(t1360*t1732 + t1421*t1754 + t1723*t365*t407) + 0.126739*(t1360*t1794 + t1421*t1798 + t1764*t365*t407) + 0.01889*(t1360*t1819 + t1421*t1821 + t1808*t365*t407) + t547 + t677 + t710 + t75 + t940 + t990));
  p_output1[4]=t1302*t2104 + t1342*t2125 + t1871*t2169 + t1878*t2201 - 1.11344*(-1.*t1864*t2169 + t1849*t2201) - 0.02159*(t1849*t2169 + t1864*t2201) + 0.135*t116*t255 + 0.1305*t1966*t407 + t1966*t533 + t1966*t510*t673 + t2006*t699 + t75 + t2029*t890 + t2064*t987;
  p_output1[5]=t1302*t2387 + t1342*t2411 + t1871*t2425 + t1878*t2440 - 1.11344*(-1.*t1864*t2425 + t1849*t2440) - 0.02159*(t1849*t2425 + t1864*t2440) - 0.135*t184*t63 + 0.1305*t184*t407*t63 + t184*t533*t63 + t184*t510*t63*t673 - 1.*t184*t255*t699 + t2330*t890 + t2347*t987;
  p_output1[6]=t1302*t2604 + t1342*t2667 + t1871*t2717 + t1878*t2749 - 1.11344*(-1.*t1864*t2717 + t1849*t2749) - 0.02159*(t1849*t2717 + t1864*t2749) + 0.135*t255*t36 + 0.1305*t2503*t407 + t2503*t533 + 0.135*t116*t56*t63 + t2503*t510*t673 + t2541*t699 + t2574*t890 + t2590*t987;
  p_output1[7]=0;
  p_output1[8]=7.142857142857142*(-0.10724599999999995*t1889 - 0.08999*t1898);
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0.0288377642750394*(1.316608*(t2872 + t2906 - 0.049*t2912 + 0.135*t2930) + 1.03008*(t2872 + t2906 + 0.132168*t2930 + t2950 + t2963 + t2974 - 0.255862*t2980 - 0.007761*t2986) + 0.763*(t2872 + t2906 + 0.130288*t2930 + t2950 + t2963 + t2974 - 0.45406*t2980 - 0.000421*t2986) + 1.03*(t2872 + t2906 + 0.127241*t2930 + t2950 + t2963 + t2974 + t3024 + t3025 - 0.004179*t3040 - 0.826587*t3051) + 0.126*(t2872 + t2906 + t1590*t2930 + t2950 + t2963 + t2974 + t3024 + t3025 + t1639*t3040 + t1693*t3051 - 0.617968*(t1723*t2930 + t1732*t3040 + t1754*t3051) + 0.126739*(t1764*t2930 + t1794*t3040 + t1798*t3051) + 0.01889*(t1808*t2930 + t1819*t3040 + t1821*t3051)) + 0.1498*(t2872 + t2906 + 0.13064*t2930 + t2950 + t2963 + t2974 + t3024 + t3025 + t1871*t3040 + t1878*t3051 - 1.11818*t3203 + 0.00589*t3227) + 5.79228*(t2872 + t2906 + 0.17081*t2930 + t2950 - 0.04895*t2912*t639 + 0.14946*t2912*t648));
  p_output1[13]=t2896*t3265 + t1302*t3306 + t1342*t3315 + t1871*t3340 + t1878*t3367 - 1.11344*(-1.*t1864*t3340 + t1849*t3367) - 0.02159*(t1849*t3340 + t1864*t3367) - 1.*t184*t2868*t36 + 0.1305*(t184*t36*t407 - 1.*t3265*t510) + t3278*t673 + t3278*t639*t890 - 1.*t3278*t648*t987;
  p_output1[14]=t184*t255*t2896 + t1302*t3481 + t1342*t3514 + t1871*t3544 + t1878*t3568 - 1.11344*(-1.*t1864*t3544 + t1849*t3568) - 0.02159*(t1849*t3544 + t1864*t3568) + t2868*t56 + 0.1305*(-1.*t184*t255*t510 - 1.*t407*t56) + t3458*t673 + t3458*t639*t890 - 1.*t3458*t648*t987;
  p_output1[15]=t116*t184*t2868 + t2896*t3635 + t1302*t3684 + t1342*t3697 + t1871*t3711 + t1878*t3766 - 1.11344*(-1.*t1864*t3711 + t1849*t3766) - 0.02159*(t1849*t3711 + t1864*t3766) + 0.1305*(-1.*t116*t184*t407 - 1.*t3635*t510) + t3644*t673 + t3644*t639*t890 - 1.*t3644*t648*t987;
  p_output1[16]=1.;
  p_output1[17]=7.142857142857142*(-0.10724599999999995*t3203 - 0.08999*t3227);
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0.0288377642750394*(5.79228*(t3888 + t3915 - 0.14946*t3922 - 0.04895*t3937) + 0.763*(t3888 + t3915 + t3941 + t3943 - 0.000421*t3954 - 0.45406*t3961) + 1.03008*(t3888 + t3915 + t3941 + t3943 - 0.007761*t3954 - 0.255862*t3961) + 1.03*(t3888 + t3915 + t3941 + t3943 + t3987 + t3993 - 0.826587*t4020 - 0.004179*t4039) + 0.126*(t3888 + t3915 + t3941 + t3943 + t3987 + t3993 + t1693*t4020 + t1639*t4039 - 0.617968*(t1754*t4020 + t1732*t4039) + 0.126739*(t1798*t4020 + t1794*t4039) + 0.01889*(t1821*t4020 + t1819*t4039)) + 0.1498*(t3888 + t3915 + t3941 + t3943 + t3987 + t3993 + t1878*t4020 + t1871*t4039 + 0.00589*t4156 - 1.11818*t4166));
  p_output1[22]=t1966*t3885 + t3913*t4203 + t1342*t4289 + t1302*t4315 + t1878*t4329 + t1871*t4338 - 0.02159*(t1864*t4329 + t1849*t4338) - 1.11344*(t1849*t4329 - 1.*t1864*t4338) + t4246*t890 + t4221*t987;
  p_output1[23]=t3913*t4389 + t1342*t4446 + t1302*t4456 + t1878*t4513 + t1871*t4541 - 0.02159*(t1864*t4513 + t1849*t4541) - 1.11344*(t1849*t4513 - 1.*t1864*t4541) + t184*t3885*t63 + t4424*t890 + t4412*t987;
  p_output1[24]=t2503*t3885 + t3913*t4606 + t1342*t4660 + t1302*t4668 + t1878*t4677 + t1871*t4684 - 0.02159*(t1864*t4677 + t1849*t4684) - 1.11344*(t1849*t4677 - 1.*t1864*t4684) + t4648*t890 + t4624*t987;
  p_output1[25]=0;
  p_output1[26]=7.142857142857142*(-0.08999*t4156 - 0.10724599999999995*t4166);
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0.0288377642750394*(0.763*(t4742 + t4753 - 0.000421*t4757 - 0.45406*t4764) + 1.03008*(t4742 + t4753 - 0.007761*t4757 - 0.255862*t4764) + 1.03*(t4742 + t4753 + t4799 + t4816 + t4817 + t4837 - 0.826587*t4852 - 0.004179*t4863) + 0.126*(t4742 + t4753 + t4799 + t4816 + t4817 + t4837 + t1693*t4852 + t1639*t4863 - 0.617968*(t1754*t4852 + t1732*t4863) + 0.126739*(t1798*t4852 + t1794*t4863) + 0.01889*(t1821*t4852 + t1819*t4863)) + 0.1498*(t4742 + t4753 + t4799 + t4816 + t4817 + t4837 + t1878*t4852 + t1871*t4863 + 0.00589*t4987 - 1.11818*t4996));
  p_output1[31]=t4246*t4751 + t4720*t5011 + t1342*t5025 + t4814*t5025 + t1302*t5035 + t4824*t5046 + t1878*t5065 + t1871*t5077 - 0.02159*(t1864*t5065 + t1849*t5077) - 1.11344*(t1849*t5065 - 1.*t1864*t5077);
  p_output1[32]=t4424*t4751 + t4720*t5119 + t1342*t5141 + t4814*t5141 + t1302*t5158 + t4824*t5172 + t1878*t5179 + t1871*t5193 - 0.02159*(t1864*t5179 + t1849*t5193) - 1.11344*(t1849*t5179 - 1.*t1864*t5193);
  p_output1[33]=t4648*t4751 + t4720*t5219 + t1342*t5235 + t4814*t5235 + t1302*t5250 + t4824*t5259 + t1878*t5285 + t1871*t5306 - 0.02159*(t1864*t5285 + t1849*t5306) - 1.11344*(t1849*t5285 - 1.*t1864*t5306);
  p_output1[34]=0;
  p_output1[35]=7.142857142857142*(-0.08999*t4987 - 0.10724599999999995*t4996);
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0.0043198970884009*(t5422*t5429 + t5472*t5488 + 0.00589*t5505 - 1.11818*t5525);
  p_output1[40]=t5422*t5558 + t5472*t5574 - 0.02159*(-1.*t1864*t5558 + t1849*t5574) - 1.11344*(-1.*t1849*t5558 - 1.*t1864*t5574);
  p_output1[41]=t5422*t5611 + t5472*t5670 - 0.02159*(-1.*t1864*t5611 + t1849*t5670) - 1.11344*(-1.*t1849*t5611 - 1.*t1864*t5670);
  p_output1[42]=t5422*t5698 + t5472*t5710 - 0.02159*(-1.*t1864*t5698 + t1849*t5710) - 1.11344*(-1.*t1849*t5698 - 1.*t1864*t5710);
  p_output1[43]=0;
  p_output1[44]=7.142857142857142*(-0.08999*t5505 - 0.10724599999999995*t5525);
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=t5742 + 0.135*t227*t5745 - 1.*t5774*t5798 + 0.1305*t5818*t5855 - 1.*t5855*t5905 - 1.*t5855*t5880*t5925 - 1.*t6005*t6015 - 1.*t6029*t6034 - 1.*t6062*t6068 - 1.*t6092*t6096 - 1.*t6113*t6122 - 1.*t6136*t6144 + 1.11344*t6165 + 0.02159*t6184 + 0.0288377642750394*(1.965608*(0.01793*t5798 - 0.1351*t5855 + t6187 + t6190) + 1.316608*(-0.0343*t5798 - 0.135*t5818*t5855 - 0.049*t5855*t5880 + t6187 + t6190 + t6204) + 5.79228*(-0.17081*t5818*t5855 - 0.04895*t6015 - 0.14946*t6034 + t6187 + t6190 + t6204 + t6212 + t6216) + 1.03008*(-0.132168*t5818*t5855 - 0.255862*t6068 - 0.007761*t6096 + t6187 + t6190 + t6204 + t6212 + t6216 + t6241 + t6251) + 0.763*(-0.130288*t5818*t5855 - 0.45406*t6068 - 0.000421*t6096 + t6187 + t6190 + t6204 + t6212 + t6216 + t6241 + t6251) + 1.03*(-0.127241*t5818*t5855 - 0.004179*t6122 - 0.826587*t6144 + t6187 + t6190 + t6204 + t6212 + t6216 + t6241 + t6251 + t6294 + t6299) + 0.1498*(-0.13064*t5818*t5855 + t6113*t6122 + t6136*t6144 - 1.11818*t6165 + 0.00589*t6184 + t6187 + t6190 + t6204 + t6212 + t6216 + t6241 + t6251 + t6294 + t6299) + 0.126*(t6187 + t6190 + t6204 + t6212 + t6216 + t6241 + t6251 + t6294 + t6299 + t5818*t5855*t6355 + t6122*t6408 + t6144*t6466 - 0.617968*(t5818*t5855*t6472 + t6122*t6481 + t6144*t6487) - 0.126739*(t5818*t5855*t6523 + t6122*t6527 + t6144*t6532) + 0.01889*(t5818*t5855*t6540 + t6122*t6548 + t6144*t6554)));
  p_output1[49]=t5742 + 0.135*t116*t5745 - 1.*t5774*t6615 + 0.1305*t5818*t6627 - 1.*t5905*t6627 - 1.*t5880*t5925*t6627 - 1.*t6005*t6642 - 1.*t6029*t6680 - 1.*t6062*t6693 - 1.*t6092*t6717 - 1.*t6113*t6733 - 1.*t6136*t6753 + 1.11344*(-1.*t6107*t6733 + t6100*t6753) + 0.02159*(t6100*t6733 + t6107*t6753);
  p_output1[50]=-0.135*t184*t5741 + t184*t5745*t5774 + 0.1305*t184*t5741*t5818 - 1.*t184*t5741*t5905 - 1.*t184*t5741*t5880*t5925 - 1.*t6005*t6814 - 1.*t6029*t6821 - 1.*t6062*t6835 - 1.*t6092*t6844 - 1.*t6113*t6860 - 1.*t6136*t6869 + 1.11344*(-1.*t6107*t6860 + t6100*t6869) + 0.02159*(t6100*t6860 + t6107*t6869);
  p_output1[51]=0.135*t116*t56*t5741 + 0.135*t36*t5745 + 0.1305*t5818*t6935 - 1.*t5905*t6935 - 1.*t5880*t5925*t6935 - 1.*t5774*t6975 - 1.*t6029*t6987 - 1.*t6005*t7002 - 1.*t6092*t7022 - 1.*t6062*t7031 - 1.*t6136*t7059 - 1.*t6113*t7079 + 0.02159*(t6107*t7059 + t6100*t7079) + 1.11344*(t6100*t7059 - 1.*t6107*t7079);
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=1.;
  p_output1[57]=-1.*t2854*t7136 - 1.*t7151*t7158 - 1.*t5925*t7169 - 1.*t5759*t6005*t7169 + t5772*t6029*t7169 + 0.1305*t7185 - 1.*t6062*t7193 - 1.*t6092*t7200 - 1.*t6113*t7208 - 1.*t6136*t7217 + 1.11344*t7235 + 0.02159*t7241 + 0.0288377642750394*(1.316608*(-0.049*t7169 - 0.135*t7185 + t7260 + t7270) + 5.79228*(-0.04895*t5759*t7169 + 0.14946*t5772*t7169 - 0.17081*t7185 + t7260 + t7270 + t7280) + 1.03008*(-0.132168*t7185 - 0.255862*t7193 - 0.007761*t7200 + t7260 + t7270 + t7280 + t7308 + t7309) + 0.763*(-0.130288*t7185 - 0.45406*t7193 - 0.000421*t7200 + t7260 + t7270 + t7280 + t7308 + t7309) + 1.03*(-0.127241*t7185 - 0.004179*t7208 - 0.826587*t7217 + t7260 + t7270 + t7280 + t7308 + t7309 + t7343 + t7345) + 0.126*(t6355*t7185 + t6408*t7208 + t6466*t7217 - 0.617968*(t6472*t7185 + t6481*t7208 + t6487*t7217) - 0.126739*(t6523*t7185 + t6527*t7208 + t6532*t7217) + 0.01889*(t6540*t7185 + t6548*t7208 + t6554*t7217) + t7260 + t7270 + t7280 + t7308 + t7309 + t7343 + t7345) + 0.1498*(-0.13064*t7185 + t6113*t7208 + t6136*t7217 - 1.11818*t7235 + 0.00589*t7241 + t7260 + t7270 + t7280 + t7308 + t7309 + t7343 + t7345));
  p_output1[58]=t184*t36*t7136 - 1.*t7151*t7467 + 0.1305*(t184*t36*t5818 - 1.*t5880*t7467) - 1.*t5925*t7499 - 1.*t5759*t6005*t7499 + t5772*t6029*t7499 - 1.*t6062*t7536 - 1.*t6092*t7549 - 1.*t6113*t7555 - 1.*t6136*t7583 + 1.11344*(-1.*t6107*t7555 + t6100*t7583) + 0.02159*(t6100*t7555 + t6107*t7583);
  p_output1[59]=0.1305*(-1.*t56*t5818 - 1.*t184*t5745*t5880) - 1.*t56*t7136 - 1.*t184*t5745*t7151 - 1.*t5925*t7646 - 1.*t5759*t6005*t7646 + t5772*t6029*t7646 - 1.*t6062*t7667 - 1.*t6092*t7677 - 1.*t6113*t7683 - 1.*t6136*t7688 + 1.11344*(-1.*t6107*t7683 + t6100*t7688) + 0.02159*(t6100*t7683 + t6107*t7688);
  p_output1[60]=-1.*t116*t184*t7136 - 1.*t7151*t7728 + 0.1305*(-1.*t116*t184*t5818 - 1.*t5880*t7728) - 1.*t5925*t7761 - 1.*t5759*t6005*t7761 + t5772*t6029*t7761 - 1.*t6062*t7784 - 1.*t6092*t7790 - 1.*t6113*t7804 - 1.*t6136*t7809 + 1.11344*(-1.*t6107*t7804 + t6100*t7809) + 0.02159*(t6100*t7804 + t6107*t7809);
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=-1.*t5855*t7838 - 1.*t7846*t7855 - 1.*t6029*t7863 - 1.*t6005*t7876 - 1.*t6092*t7881 - 1.*t6062*t7885 - 1.*t6136*t7897 - 1.*t6113*t7908 + 0.02159*t7922 + 1.11344*t7936 + 0.0288377642750394*(5.79228*(-0.14946*t7863 - 0.04895*t7876 + t7945 + t7947) + 0.763*(-0.000421*t7881 - 0.45406*t7885 + t7945 + t7947 + t7957 + t7958) + 1.03008*(-0.007761*t7881 - 0.255862*t7885 + t7945 + t7947 + t7957 + t7958) + 1.03*(-0.826587*t7897 - 0.004179*t7908 + t7945 + t7947 + t7957 + t7958 + t7974 + t7977) + 0.126*(t6466*t7897 + t6408*t7908 - 0.617968*(t6487*t7897 + t6481*t7908) - 0.126739*(t6532*t7897 + t6527*t7908) + 0.01889*(t6554*t7897 + t6548*t7908) + t7945 + t7947 + t7957 + t7958 + t7974 + t7977) + 0.1498*(t6136*t7897 + t6113*t7908 + 0.00589*t7922 - 1.11818*t7936 + t7945 + t7947 + t7957 + t7958 + t7974 + t7977));
  p_output1[67]=-1.*t6627*t7838 - 1.*t7846*t8099 - 1.*t6029*t8116 - 1.*t6005*t8129 - 1.*t6092*t8147 - 1.*t6062*t8152 - 1.*t6136*t8162 - 1.*t6113*t8173 + 0.02159*(t6107*t8162 + t6100*t8173) + 1.11344*(t6100*t8162 - 1.*t6107*t8173);
  p_output1[68]=-1.*t184*t5741*t7838 - 1.*t7846*t8204 - 1.*t6029*t8208 - 1.*t6005*t8216 - 1.*t6092*t8225 - 1.*t6062*t8237 - 1.*t6136*t8248 - 1.*t6113*t8254 + 0.02159*(t6107*t8248 + t6100*t8254) + 1.11344*(t6100*t8248 - 1.*t6107*t8254);
  p_output1[69]=-1.*t6935*t7838 - 1.*t7846*t8285 - 1.*t6029*t8291 - 1.*t6005*t8302 - 1.*t6092*t8323 - 1.*t6062*t8344 - 1.*t6136*t8360 - 1.*t6113*t8373 + 0.02159*(t6107*t8360 + t6100*t8373) + 1.11344*(t6100*t8360 - 1.*t6107*t8373);
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=-1.*t8399*t8403 - 1.*t7876*t8409 - 1.*t6092*t8418 - 1.*t8418*t8429 - 1.*t6062*t8434 - 1.*t8452*t8461 - 1.*t6136*t8469 - 1.*t6113*t8480 + 0.02159*t8496 + 1.11344*t8513 + 0.0288377642750394*(0.763*(-0.000421*t8418 - 0.45406*t8434 + t8523 + t8524) + 1.03008*(-0.007761*t8418 - 0.255862*t8434 + t8523 + t8524) + 1.03*(-0.826587*t8469 - 0.004179*t8480 + t8523 + t8524 + t8541 + t8542 + t8543 + t8545) + 0.126*(t6466*t8469 + t6408*t8480 - 0.617968*(t6487*t8469 + t6481*t8480) - 0.126739*(t6532*t8469 + t6527*t8480) + 0.01889*(t6554*t8469 + t6548*t8480) + t8523 + t8524 + t8541 + t8542 + t8543 + t8545) + 0.1498*(t6136*t8469 + t6113*t8480 + 0.00589*t8496 - 1.11818*t8513 + t8523 + t8524 + t8541 + t8542 + t8543 + t8545));
  p_output1[76]=-1.*t8129*t8409 - 1.*t8399*t8625 - 1.*t6092*t8634 - 1.*t8429*t8634 - 1.*t6062*t8648 - 1.*t8452*t8661 - 1.*t6136*t8668 - 1.*t6113*t8683 + 0.02159*(t6107*t8668 + t6100*t8683) + 1.11344*(t6100*t8668 - 1.*t6107*t8683);
  p_output1[77]=-1.*t8216*t8409 - 1.*t8399*t8706 - 1.*t6092*t8722 - 1.*t8429*t8722 - 1.*t6062*t8737 - 1.*t8452*t8752 - 1.*t6136*t8765 - 1.*t6113*t8780 + 0.02159*(t6107*t8765 + t6100*t8780) + 1.11344*(t6100*t8765 - 1.*t6107*t8780);
  p_output1[78]=-1.*t8302*t8409 - 1.*t8399*t8804 - 1.*t6092*t8817 - 1.*t8429*t8817 - 1.*t6062*t8833 - 1.*t8452*t8845 - 1.*t6136*t8850 - 1.*t6113*t8859 + 0.02159*(t6107*t8850 + t6100*t8859) + 1.11344*(t6100*t8850 - 1.*t6107*t8859);
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=-1.*t8886*t8889 - 1.*t8893*t8896 + 0.02159*t8901 + 0.0043198970884009*(t8886*t8889 + t8893*t8896 + 0.00589*t8901 - 1.11818*t8909) + 1.11344*t8909;
  p_output1[85]=-1.*t8886*t8957 - 1.*t8893*t8977 + 0.02159*(-1.*t6107*t8957 + t6100*t8977) + 1.11344*(-1.*t6100*t8957 - 1.*t6107*t8977);
  p_output1[86]=-1.*t8886*t9000 - 1.*t8893*t9012 + 0.02159*(-1.*t6107*t9000 + t6100*t9012) + 1.11344*(-1.*t6100*t9000 - 1.*t6107*t9012);
  p_output1[87]=-1.*t8886*t9035 - 1.*t8893*t9052 + 0.02159*(-1.*t6107*t9035 + t6100*t9052) + 1.11344*(-1.*t6100*t9035 - 1.*t6107*t9052);
  p_output1[88]=0;
  p_output1[89]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 9, (mwSize) 10, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#endif // MATLAB_MEX_FILE

namespace SymFunction
{

void J_yaRightStance_SLIP_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}




