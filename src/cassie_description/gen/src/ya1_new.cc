/*
 * Automatically Generated from Mathematica.
 * Wed 3 Nov 2021 18:44:21 GMT-07:00
 */

#ifdef MATLAB_MEX_FILE
// No need to include header
#else
#include "ya1_new.hh"
#endif

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t48;
  double t54;
  double t34;
  double t38;
  double t85;
  double t93;
  double t97;
  double t108;
  double t119;
  double t120;
  double t123;
  double t134;
  double t138;
  double t139;
  double t145;
  double t167;
  double t52;
  double t55;
  double t57;
  double t67;
  double t74;
  double t76;
  double t81;
  double t126;
  double t182;
  double t184;
  double t186;
  double t154;
  double t158;
  double t166;
  double t169;
  double t170;
  double t177;
  double t223;
  double t231;
  double t234;
  double t241;
  double t235;
  double t245;
  double t248;
  double t250;
  double t255;
  double t261;
  double t263;
  double t268;
  double t274;
  double t279;
  double t280;
  double t282;
  double t283;
  double t291;
  double t327;
  double t330;
  double t332;
  double t337;
  double t338;
  double t347;
  double t401;
  double t402;
  double t403;
  double t413;
  double t339;
  double t350;
  double t353;
  double t356;
  double t361;
  double t362;
  double t364;
  double t366;
  double t409;
  double t374;
  double t376;
  double t377;
  double t455;
  double t426;
  double t385;
  double t387;
  double t388;
  double t503;
  double t485;
  double t414;
  double t516;
  double t427;
  double t555;
  double t445;
  double t524;
  double t459;
  double t606;
  double t607;
  double t610;
  double t615;
  double t678;
  double t708;
  double t709;
  double t710;
  double t712;
  double t713;
  double t717;
  double t711;
  double t718;
  double t719;
  double t721;
  double t723;
  double t727;
  double t691;
  double t670;
  double t720;
  double t730;
  double t734;
  double t739;
  double t741;
  double t743;
  double t677;
  double t735;
  double t745;
  double t747;
  double t669;
  double t776;
  double t777;
  double t784;
  double t699;
  double t791;
  double t690;
  double t762;
  double t799;
  double t751;
  double t830;
  double t618;
  double t939;
  double t941;
  double t945;
  double t946;
  double t951;
  double t976;
  double t977;
  double t981;
  double t982;
  double t987;
  double t989;
  double t995;
  double t996;
  double t997;
  double t998;
  double t1002;
  double t1003;
  double t1005;
  double t1006;
  double t1010;
  double t1011;
  double t1013;
  double t1028;
  double t1029;
  double t1031;
  double t1033;
  double t1035;
  double t1040;
  double t1043;
  double t1045;
  double t400;
  double t408;
  double t416;
  double t424;
  double t431;
  double t432;
  double t434;
  double t1066;
  double t1068;
  double t442;
  double t443;
  double t446;
  double t450;
  double t462;
  double t466;
  double t469;
  double t1071;
  double t1072;
  double t1074;
  double t476;
  double t484;
  double t492;
  double t497;
  double t508;
  double t510;
  double t512;
  double t1076;
  double t1079;
  double t1080;
  double t519;
  double t528;
  double t531;
  double t534;
  double t546;
  double t547;
  double t556;
  double t565;
  double t578;
  double t581;
  double t583;
  double t589;
  double t614;
  double t621;
  double t636;
  double t641;
  double t643;
  double t1173;
  double t1175;
  double t1178;
  double t1179;
  double t1180;
  double t1184;
  double t1186;
  double t1192;
  double t1194;
  double t1197;
  double t1213;
  double t1220;
  double t1224;
  double t1227;
  double t1232;
  double t1233;
  double t1241;
  double t1276;
  double t1279;
  double t1281;
  double t1283;
  double t1284;
  double t1286;
  double t1288;
  double t1291;
  double t1360;
  double t1363;
  double t1366;
  double t1367;
  double t1370;
  double t1371;
  double t1373;
  double t1376;
  double t1377;
  double t1395;
  double t1401;
  double t1402;
  double t1404;
  double t1408;
  double t1414;
  double t1415;
  double t1378;
  double t1484;
  double t1412;
  double t1419;
  double t1487;
  double t1422;
  double t1423;
  double t1424;
  double t1425;
  double t1426;
  double t1431;
  double t1434;
  double t1435;
  double t1439;
  double t1443;
  double t1446;
  double t1449;
  double t1450;
  double t1452;
  double t1457;
  double t1458;
  double t1460;
  double t1461;
  double t1464;
  double t1466;
  double t1467;
  double t1468;
  double t1469;
  double t1470;
  double t1506;
  double t1507;
  double t1508;
  double t1509;
  double t1512;
  double t1516;
  double t1517;
  double t1521;
  double t1522;
  double t902;
  double t914;
  double t1614;
  double t1620;
  double t1638;
  double t1639;
  double t1640;
  double t1649;
  double t1654;
  double t1615;
  double t1623;
  double t1625;
  double t1627;
  double t1656;
  double t1657;
  double t1660;
  double t1663;
  double t1664;
  double t1665;
  double t1667;
  double t1669;
  double t1670;
  double t1673;
  double t1682;
  double t1693;
  double t1688;
  double t1689;
  double t1691;
  double t1694;
  double t1695;
  double t1701;
  double t1707;
  double t1713;
  double t1714;
  double t1716;
  double t1715;
  double t1718;
  double t1721;
  double t1722;
  double t1726;
  double t1729;
  double t1731;
  double t1732;
  double t1736;
  double t1738;
  double t1739;
  double t1743;
  double t1745;
  double t1746;
  double t1776;
  double t1778;
  double t1782;
  double t1784;
  double t1785;
  double t1787;
  double t1839;
  double t1841;
  double t1846;
  double t1851;
  double t1786;
  double t1788;
  double t1792;
  double t1795;
  double t1796;
  double t1797;
  double t1798;
  double t1799;
  double t1869;
  double t1800;
  double t1802;
  double t1806;
  double t1906;
  double t1849;
  double t1814;
  double t1815;
  double t1822;
  double t1929;
  double t1920;
  double t1873;
  double t1947;
  double t1852;
  double t1984;
  double t1896;
  double t1956;
  double t1909;
  double t2037;
  double t2040;
  double t2041;
  double t2043;
  double t2082;
  double t2146;
  double t2149;
  double t2152;
  double t2131;
  double t2136;
  double t2137;
  double t2142;
  double t2154;
  double t2157;
  double t2159;
  double t2160;
  double t2167;
  double t2087;
  double t2114;
  double t2158;
  double t2168;
  double t2170;
  double t2175;
  double t2176;
  double t2177;
  double t2103;
  double t2173;
  double t2178;
  double t2179;
  double t2112;
  double t2201;
  double t2202;
  double t2203;
  double t2081;
  double t2205;
  double t2086;
  double t2181;
  double t2227;
  double t2193;
  double t2211;
  double t2045;
  double t2313;
  double t2317;
  double t2318;
  double t2320;
  double t2321;
  double t2335;
  double t2336;
  double t2338;
  double t2339;
  double t2343;
  double t2344;
  double t2352;
  double t2353;
  double t2356;
  double t2358;
  double t2363;
  double t2364;
  double t2366;
  double t2370;
  double t2375;
  double t2378;
  double t2379;
  double t2391;
  double t2392;
  double t2393;
  double t2394;
  double t2395;
  double t2401;
  double t2402;
  double t2403;
  double t1838;
  double t1847;
  double t1860;
  double t1867;
  double t1877;
  double t1879;
  double t1881;
  double t2427;
  double t2430;
  double t1890;
  double t1892;
  double t1901;
  double t1902;
  double t1911;
  double t1912;
  double t1914;
  double t2431;
  double t2432;
  double t2434;
  double t1916;
  double t1917;
  double t1927;
  double t1928;
  double t1930;
  double t1931;
  double t1934;
  double t2436;
  double t2443;
  double t2449;
  double t1953;
  double t1959;
  double t1968;
  double t1969;
  double t1978;
  double t1979;
  double t1988;
  double t1997;
  double t2006;
  double t2011;
  double t2012;
  double t2015;
  double t2042;
  double t2046;
  double t2053;
  double t2054;
  double t2057;
  double t2538;
  double t2539;
  double t2540;
  double t2562;
  double t2563;
  double t2565;
  double t2567;
  double t2572;
  double t2578;
  double t2583;
  double t2590;
  double t2593;
  double t2595;
  double t2599;
  double t2600;
  double t2603;
  double t2606;
  double t2607;
  double t2614;
  double t2615;
  double t2617;
  double t2631;
  double t2632;
  double t2634;
  double t2638;
  double t2651;
  double t2654;
  double t2655;
  double t2657;
  double t2681;
  double t2682;
  double t2687;
  double t2691;
  double t2696;
  double t2700;
  double t2702;
  double t2703;
  double t2552;
  double t2775;
  double t2778;
  double t2779;
  double t2818;
  double t2831;
  double t2832;
  double t2834;
  double t2854;
  double t2858;
  double t2859;
  double t2840;
  double t2842;
  double t2844;
  double t2873;
  double t2881;
  double t2882;
  double t2883;
  double t2885;
  double t2887;
  double t2888;
  double t2890;
  double t2903;
  double t2904;
  double t2905;
  double t2906;
  double t2908;
  double t2912;
  double t2913;
  double t2918;
  double t2939;
  double t2940;
  double t2942;
  double t2943;
  double t2944;
  double t2950;
  double t2953;
  double t2955;
  double t3047;
  double t3049;
  double t3050;
  double t3051;
  double t3056;
  double t3058;
  double t3060;
  double t3061;
  double t3068;
  double t3069;
  double t3077;
  double t3078;
  double t3080;
  double t3085;
  double t3086;
  double t3087;
  double t3095;
  double t3100;
  double t3102;
  double t3104;
  double t3105;
  double t3110;
  double t3112;
  double t3114;
  double t3129;
  double t3131;
  double t3132;
  double t3134;
  double t3135;
  double t3139;
  double t3140;
  double t3141;
  double t3168;
  double t3184;
  double t3185;
  double t3188;
  double t3189;
  double t3191;
  double t3194;
  double t3198;
  double t3048;
  double t3286;
  double t3287;
  double t3293;
  double t3296;
  double t3297;
  double t3288;
  double t3289;
  double t3290;
  double t3310;
  double t3311;
  double t3312;
  double t3313;
  double t3314;
  double t3322;
  double t3324;
  double t3325;
  double t3340;
  double t3342;
  double t3343;
  double t3346;
  double t3348;
  double t3351;
  double t3353;
  double t3363;
  double t3370;
  double t3371;
  double t3377;
  double t3379;
  double t3380;
  double t3382;
  double t3385;
  double t3386;
  double t3415;
  double t3418;
  double t3420;
  double t3423;
  double t3426;
  double t3431;
  double t3432;
  double t3433;
  double t3568;
  double t3569;
  double t3571;
  double t3575;
  double t3578;
  double t3581;
  double t3584;
  double t3589;
  double t3590;
  double t3594;
  double t3609;
  double t3618;
  double t3619;
  double t3623;
  double t3630;
  double t3632;
  double t3635;
  double t3659;
  double t3661;
  double t3662;
  double t3664;
  double t3666;
  double t3668;
  double t3669;
  double t3670;
  double t3748;
  double t3751;
  double t3752;
  double t3762;
  double t3764;
  double t3765;
  double t3766;
  double t3770;
  double t3771;
  double t3791;
  double t3792;
  double t3793;
  double t3794;
  double t3797;
  double t3804;
  double t3805;
  double t3772;
  double t3888;
  double t3803;
  double t3806;
  double t3894;
  double t3816;
  double t3820;
  double t3822;
  double t3825;
  double t3826;
  double t3828;
  double t3836;
  double t3838;
  double t3842;
  double t3845;
  double t3846;
  double t3848;
  double t3851;
  double t3852;
  double t3855;
  double t3857;
  double t3858;
  double t3859;
  double t3863;
  double t3865;
  double t3866;
  double t3870;
  double t3874;
  double t3876;
  double t3912;
  double t3915;
  double t3919;
  double t3924;
  double t3925;
  double t3926;
  double t3927;
  double t3931;
  double t3932;
  double t2287;
  double t2295;
  t48 = Cos(var1[15]);
  t54 = Sin(var1[15]);
  t34 = Cos(var1[4]);
  t38 = Cos(var1[5]);
  t85 = Sin(var1[14]);
  t93 = Sin(var1[4]);
  t97 = t85*t93;
  t108 = Cos(var1[14]);
  t119 = Sin(var1[5]);
  t120 = -1.*t108*t34*t119;
  t123 = t97 + t120;
  t134 = Cos(var1[16]);
  t138 = -1.*t34*t38*t54;
  t139 = t48*t123;
  t145 = t138 + t139;
  t167 = Sin(var1[16]);
  t52 = -0.135*t48;
  t55 = -0.049*t54;
  t57 = t52 + t55;
  t67 = t34*t38*t57;
  t74 = 0.049*t48;
  t76 = -0.135*t54;
  t81 = t74 + t76;
  t126 = t81*t123;
  t182 = -1.*t48*t34*t38;
  t184 = -1.*t54*t123;
  t186 = t182 + t184;
  t154 = -1.*t134;
  t158 = 1. + t154;
  t166 = -0.049*t158;
  t169 = -0.09*t167;
  t170 = t166 + t169;
  t177 = t170*t145;
  t223 = Cos(var1[17]);
  t231 = -1.*t223;
  t234 = 1. + t231;
  t241 = Sin(var1[17]);
  t235 = -0.049*t234;
  t245 = -0.21*t241;
  t248 = t235 + t245;
  t250 = t134*t248*t145;
  t255 = -0.21*t234;
  t261 = 0.049*t241;
  t263 = t255 + t261;
  t268 = -1.*t167*t263*t145;
  t274 = -1.*t223*t167*t145;
  t279 = -1.*t134*t241*t145;
  t280 = t274 + t279;
  t282 = t134*t223*t145;
  t283 = -1.*t167*t241*t145;
  t291 = t282 + t283;
  t327 = -1.*var1[17];
  t330 = 0.226893 + t327;
  t332 = Cos(t330);
  t337 = -1.*t332;
  t338 = 1. + t337;
  t347 = Sin(t330);
  t401 = Cos(var1[20]);
  t402 = -1.*t401;
  t403 = 1. + t402;
  t413 = Sin(var1[20]);
  t339 = -0.70544*t338;
  t350 = -0.01841*t347;
  t353 = t339 + t350;
  t356 = t353*t280;
  t361 = 0.01841*t338;
  t362 = -0.70544*t347;
  t364 = t361 + t362;
  t366 = t364*t291;
  t409 = 0.07769774964800001*t403;
  t374 = t347*t280;
  t376 = t332*t291;
  t377 = t374 + t376;
  t455 = -0.0004284921280000001*t403;
  t426 = 0.005481192614*t403;
  t385 = t332*t280;
  t387 = -1.*t347*t291;
  t388 = t385 + t387;
  t503 = -0.077936*t413;
  t485 = -0.996943*t413;
  t414 = -0.005498*t413;
  t516 = -0.005481192614*t403;
  t427 = 0.077936*t413;
  t555 = -0.07769774964800001*t403;
  t445 = 0.005498*t413;
  t524 = 0.0004284921280000001*t403;
  t459 = 0.996943*t413;
  t606 = Cos(var1[21]);
  t607 = -1.*t606;
  t610 = 1. + t607;
  t615 = Sin(var1[21]);
  t678 = 0.07769774964800001*t413;
  t708 = t108*t93;
  t709 = t34*t85*t119;
  t710 = t708 + t709;
  t712 = t48*t34*t38;
  t713 = t54*t123;
  t717 = t712 + t713;
  t711 = t167*t710;
  t718 = t134*t717;
  t719 = t711 + t718;
  t721 = t134*t710;
  t723 = -1.*t167*t717;
  t727 = t721 + t723;
  t691 = -0.0004284921280000001*t413;
  t670 = 0.005481192614*t413;
  t720 = -1.*t241*t719;
  t730 = t223*t727;
  t734 = t720 + t730;
  t739 = t223*t719;
  t741 = t241*t727;
  t743 = t739 + t741;
  t677 = -0.005498*t401;
  t735 = t347*t734;
  t745 = t332*t743;
  t747 = t735 + t745;
  t669 = 0.077936*t401;
  t776 = t332*t734;
  t777 = -1.*t347*t743;
  t784 = t776 + t777;
  t699 = 0.005498*t401;
  t791 = -0.07769774964800001*t413;
  t690 = 0.996943*t401;
  t762 = -0.077936*t401;
  t799 = -0.005481192614*t413;
  t751 = -0.996943*t401;
  t830 = 0.0004284921280000001*t413;
  t618 = -1.11344*t615;
  t939 = 0.135*t108*t93;
  t941 = 0.135*t34*t85*t119;
  t945 = -1.*t85*t93;
  t946 = t108*t34*t119;
  t951 = t945 + t946;
  t976 = -1.*t48;
  t977 = 1. + t976;
  t981 = -0.135*t977;
  t982 = 0.049*t54;
  t987 = t981 + t982;
  t989 = t987*t710;
  t995 = -0.09*t158;
  t996 = 0.049*t167;
  t997 = t995 + t996;
  t998 = t997*t951;
  t1002 = t54*t170*t710;
  t1003 = t167*t951;
  t1005 = t134*t54*t710;
  t1006 = t1003 + t1005;
  t1010 = t134*t951;
  t1011 = -1.*t54*t167*t710;
  t1013 = t1010 + t1011;
  t1028 = t248*t1006;
  t1029 = t263*t1013;
  t1031 = -1.*t241*t1006;
  t1033 = t223*t1013;
  t1035 = t1031 + t1033;
  t1040 = t223*t1006;
  t1043 = t241*t1013;
  t1045 = t1040 + t1043;
  t400 = 2.1934241414728571e-7*var1[20];
  t408 = -0.000033783761634830594*t403;
  t416 = t409 + t414;
  t424 = -0.021877537552*t416;
  t431 = t426 + t427;
  t432 = -0.6934341012630001*t431;
  t434 = t400 + t408 + t424 + t432;
  t1066 = t353*t1035;
  t1068 = t364*t1045;
  t442 = -1.7147089040178687e-8*var1[20];
  t443 = -0.021744644052735636*t403;
  t446 = t409 + t445;
  t450 = -0.005534467322*t446;
  t462 = t455 + t459;
  t466 = -0.6934341012630001*t462;
  t469 = t442 + t443 + t450 + t466;
  t1071 = t347*t1035;
  t1072 = t332*t1045;
  t1074 = t1071 + t1072;
  t476 = -1.2096424700126054e-9*var1[20];
  t484 = -0.6934128581485427*t403;
  t492 = t455 + t485;
  t497 = -0.021877537552*t492;
  t508 = t426 + t503;
  t510 = -0.005534467322*t508;
  t512 = t476 + t484 + t497 + t510;
  t1076 = t332*t1035;
  t1079 = -1.*t347*t1045;
  t1080 = t1076 + t1079;
  t519 = t516 + t503;
  t528 = t524 + t485;
  t531 = -0.999969365345*t403;
  t534 = 1. + t531;
  t546 = -0.006104248100000001*t403;
  t547 = 1. + t546;
  t556 = t555 + t414;
  t565 = t516 + t427;
  t578 = t555 + t445;
  t581 = -0.993925573253*t403;
  t583 = 1. + t581;
  t589 = t524 + t459;
  t614 = -0.02159*t610;
  t621 = t614 + t618;
  t636 = -1.11344*t610;
  t641 = 0.02159*t615;
  t643 = t636 + t641;
  t1173 = 0.049*t134;
  t1175 = t1173 + t169;
  t1178 = t1175*t710;
  t1179 = -0.09*t134;
  t1180 = -0.049*t167;
  t1184 = t1179 + t1180;
  t1186 = t1184*t717;
  t1192 = -1.*t167*t710;
  t1194 = -1.*t134*t717;
  t1197 = t1192 + t1194;
  t1213 = t263*t1197;
  t1220 = t248*t727;
  t1224 = t241*t1197;
  t1227 = t1224 + t730;
  t1232 = t223*t1197;
  t1233 = -1.*t241*t727;
  t1241 = t1232 + t1233;
  t1276 = t364*t1227;
  t1279 = t353*t1241;
  t1281 = -1.*t347*t1227;
  t1283 = t332*t1241;
  t1284 = t1281 + t1283;
  t1286 = t332*t1227;
  t1288 = t347*t1241;
  t1291 = t1286 + t1288;
  t1360 = -0.21*t223;
  t1363 = -0.049*t241;
  t1366 = t1360 + t1363;
  t1367 = t1366*t719;
  t1370 = 0.049*t223;
  t1371 = t1370 + t245;
  t1373 = t1371*t727;
  t1376 = -1.*t223*t719;
  t1377 = t1376 + t1233;
  t1395 = t364*t734;
  t1401 = t353*t1377;
  t1402 = -1.*t347*t734;
  t1404 = t332*t1377;
  t1408 = t1402 + t1404;
  t1414 = t347*t1377;
  t1415 = t776 + t1414;
  t1378 = -0.45406*t1377;
  t1484 = -0.27068*t743;
  t1412 = -0.826587*t1408;
  t1419 = -0.004179*t1415;
  t1487 = 0.00159*t734;
  t1422 = t512*t1408;
  t1423 = t469*t1415;
  t1424 = t589*t1408;
  t1425 = t583*t1415;
  t1426 = t1424 + t1425;
  t1431 = 0.01889*t1426;
  t1434 = t534*t1408;
  t1435 = t528*t1415;
  t1439 = t1434 + t1435;
  t1443 = -0.617968*t1439;
  t1446 = t565*t1408;
  t1449 = t556*t1415;
  t1450 = t1446 + t1449;
  t1452 = -0.126739*t1450;
  t1457 = t643*t1408;
  t1458 = t621*t1415;
  t1460 = t615*t1408;
  t1461 = t606*t1415;
  t1464 = t1460 + t1461;
  t1466 = 0.00589*t1464;
  t1467 = t606*t1408;
  t1468 = -1.*t615*t1415;
  t1469 = t1467 + t1468;
  t1470 = -1.11818*t1469;
  t1506 = -0.01841*t332;
  t1507 = t1506 + t362;
  t1508 = t1507*t734;
  t1509 = -0.70544*t332;
  t1512 = 0.01841*t347;
  t1516 = t1509 + t1512;
  t1517 = t1516*t743;
  t1521 = -1.*t332*t743;
  t1522 = t1402 + t1521;
  t902 = t606*t784;
  t914 = -1.*t615*t784;
  t1614 = Cos(var1[7]);
  t1620 = Sin(var1[7]);
  t1638 = Cos(var1[6]);
  t1639 = -1.*t34*t1638*t119;
  t1640 = Sin(var1[6]);
  t1649 = t93*t1640;
  t1654 = t1639 + t1649;
  t1615 = 0.135*t1614;
  t1623 = -0.049*t1620;
  t1625 = t1615 + t1623;
  t1627 = t34*t38*t1625;
  t1656 = 0.049*t1614;
  t1657 = 0.135*t1620;
  t1660 = t1656 + t1657;
  t1663 = t1654*t1660;
  t1664 = t1614*t1654;
  t1665 = -1.*t34*t38*t1620;
  t1667 = t1664 + t1665;
  t1669 = -1.*t34*t38*t1614;
  t1670 = -1.*t1654*t1620;
  t1673 = t1669 + t1670;
  t1682 = Cos(var1[8]);
  t1693 = Sin(var1[8]);
  t1688 = -1.*t1682;
  t1689 = 1. + t1688;
  t1691 = -0.049*t1689;
  t1694 = -0.09*t1693;
  t1695 = t1691 + t1694;
  t1701 = t1667*t1695;
  t1707 = Cos(var1[9]);
  t1713 = -1.*t1707;
  t1714 = 1. + t1713;
  t1716 = Sin(var1[9]);
  t1715 = -0.049*t1714;
  t1718 = -0.21*t1716;
  t1721 = t1715 + t1718;
  t1722 = t1682*t1721*t1667;
  t1726 = -0.21*t1714;
  t1729 = 0.049*t1716;
  t1731 = t1726 + t1729;
  t1732 = -1.*t1731*t1667*t1693;
  t1736 = -1.*t1682*t1716*t1667;
  t1738 = -1.*t1707*t1667*t1693;
  t1739 = t1736 + t1738;
  t1743 = t1707*t1682*t1667;
  t1745 = -1.*t1716*t1667*t1693;
  t1746 = t1743 + t1745;
  t1776 = -1.*var1[9];
  t1778 = 0.226893 + t1776;
  t1782 = Cos(t1778);
  t1784 = -1.*t1782;
  t1785 = 1. + t1784;
  t1787 = Sin(t1778);
  t1839 = Cos(var1[12]);
  t1841 = -1.*t1839;
  t1846 = 1. + t1841;
  t1851 = Sin(var1[12]);
  t1786 = -0.70544*t1785;
  t1788 = -0.01841*t1787;
  t1792 = t1786 + t1788;
  t1795 = t1792*t1739;
  t1796 = 0.01841*t1785;
  t1797 = -0.70544*t1787;
  t1798 = t1796 + t1797;
  t1799 = t1798*t1746;
  t1869 = -0.07769774964800001*t1846;
  t1800 = t1787*t1739;
  t1802 = t1782*t1746;
  t1806 = t1800 + t1802;
  t1906 = -0.0004284921280000001*t1846;
  t1849 = -0.005481192614*t1846;
  t1814 = t1782*t1739;
  t1815 = -1.*t1787*t1746;
  t1822 = t1814 + t1815;
  t1929 = 0.077936*t1851;
  t1920 = -0.996943*t1851;
  t1873 = 0.005498*t1851;
  t1947 = 0.005481192614*t1846;
  t1852 = -0.077936*t1851;
  t1984 = 0.07769774964800001*t1846;
  t1896 = -0.005498*t1851;
  t1956 = 0.0004284921280000001*t1846;
  t1909 = 0.996943*t1851;
  t2037 = Cos(var1[13]);
  t2040 = -1.*t2037;
  t2041 = 1. + t2040;
  t2043 = Sin(var1[13]);
  t2082 = -0.07769774964800001*t1851;
  t2146 = t1638*t93;
  t2149 = t34*t119*t1640;
  t2152 = t2146 + t2149;
  t2131 = t34*t38*t1614;
  t2136 = t1654*t1620;
  t2137 = t2131 + t2136;
  t2142 = t1682*t2137;
  t2154 = t2152*t1693;
  t2157 = t2142 + t2154;
  t2159 = t1682*t2152;
  t2160 = -1.*t2137*t1693;
  t2167 = t2159 + t2160;
  t2087 = -0.005481192614*t1851;
  t2114 = -0.0004284921280000001*t1851;
  t2158 = -1.*t1716*t2157;
  t2168 = t1707*t2167;
  t2170 = t2158 + t2168;
  t2175 = t1707*t2157;
  t2176 = t1716*t2167;
  t2177 = t2175 + t2176;
  t2103 = -0.005498*t1839;
  t2173 = t1787*t2170;
  t2178 = t1782*t2177;
  t2179 = t2173 + t2178;
  t2112 = 0.996943*t1839;
  t2201 = t1782*t2170;
  t2202 = -1.*t1787*t2177;
  t2203 = t2201 + t2202;
  t2081 = 0.005498*t1839;
  t2205 = 0.07769774964800001*t1851;
  t2086 = -0.077936*t1839;
  t2181 = 0.077936*t1839;
  t2227 = 0.005481192614*t1851;
  t2193 = -0.996943*t1839;
  t2211 = 0.0004284921280000001*t1851;
  t2045 = -1.11344*t2043;
  t2313 = -0.135*t1638*t93;
  t2317 = -0.135*t34*t119*t1640;
  t2318 = t34*t1638*t119;
  t2320 = -1.*t93*t1640;
  t2321 = t2318 + t2320;
  t2335 = -1.*t1614;
  t2336 = 1. + t2335;
  t2338 = 0.135*t2336;
  t2339 = 0.049*t1620;
  t2343 = t2338 + t2339;
  t2344 = t2152*t2343;
  t2352 = t2152*t1620*t1695;
  t2353 = -0.09*t1689;
  t2356 = 0.049*t1693;
  t2358 = t2353 + t2356;
  t2363 = t2321*t2358;
  t2364 = t1682*t2152*t1620;
  t2366 = t2321*t1693;
  t2370 = t2364 + t2366;
  t2375 = t1682*t2321;
  t2378 = -1.*t2152*t1620*t1693;
  t2379 = t2375 + t2378;
  t2391 = t1721*t2370;
  t2392 = t1731*t2379;
  t2393 = -1.*t1716*t2370;
  t2394 = t1707*t2379;
  t2395 = t2393 + t2394;
  t2401 = t1707*t2370;
  t2402 = t1716*t2379;
  t2403 = t2401 + t2402;
  t1838 = -2.1934241414728571e-7*var1[12];
  t1847 = 0.000033783761634830594*t1846;
  t1860 = t1849 + t1852;
  t1867 = -0.6934341012630001*t1860;
  t1877 = t1869 + t1873;
  t1879 = -0.021877537552*t1877;
  t1881 = t1838 + t1847 + t1867 + t1879;
  t2427 = t1792*t2395;
  t2430 = t1798*t2403;
  t1890 = -1.7147089040178687e-8*var1[12];
  t1892 = -0.021744644052735636*t1846;
  t1901 = t1869 + t1896;
  t1902 = 0.005534467322*t1901;
  t1911 = t1906 + t1909;
  t1912 = -0.6934341012630001*t1911;
  t1914 = t1890 + t1892 + t1902 + t1912;
  t2431 = t1787*t2395;
  t2432 = t1782*t2403;
  t2434 = t2431 + t2432;
  t1916 = -1.2096424700126054e-9*var1[12];
  t1917 = -0.6934128581485427*t1846;
  t1927 = t1906 + t1920;
  t1928 = -0.021877537552*t1927;
  t1930 = t1849 + t1929;
  t1931 = 0.005534467322*t1930;
  t1934 = t1916 + t1917 + t1928 + t1931;
  t2436 = t1782*t2395;
  t2443 = -1.*t1787*t2403;
  t2449 = t2436 + t2443;
  t1953 = t1947 + t1929;
  t1959 = t1956 + t1920;
  t1968 = -0.999969365345*t1846;
  t1969 = 1. + t1968;
  t1978 = -0.006104248100000001*t1846;
  t1979 = 1. + t1978;
  t1988 = t1984 + t1873;
  t1997 = t1947 + t1852;
  t2006 = t1984 + t1896;
  t2011 = -0.993925573253*t1846;
  t2012 = 1. + t2011;
  t2015 = t1956 + t1909;
  t2042 = -0.02159*t2041;
  t2046 = t2042 + t2045;
  t2053 = -1.11344*t2041;
  t2054 = 0.02159*t2043;
  t2057 = t2053 + t2054;
  t2538 = -1.*t108;
  t2539 = 1. + t2538;
  t2540 = 0.135*t2539*t34*t38;
  t2562 = -1.*t108*t34*t38*t987;
  t2563 = -0.049*t977;
  t2565 = t2563 + t76;
  t2567 = -1.*t34*t2565*t119;
  t2572 = -1.*t108*t34*t38*t54;
  t2578 = -1.*t48*t34*t119;
  t2583 = t2572 + t2578;
  t2590 = -1.*t108*t48*t34*t38;
  t2593 = t34*t54*t119;
  t2595 = t2590 + t2593;
  t2599 = t34*t38*t85*t997;
  t2600 = t170*t2583;
  t2603 = t34*t38*t85*t167;
  t2606 = t134*t2583;
  t2607 = t2603 + t2606;
  t2614 = t134*t34*t38*t85;
  t2615 = -1.*t167*t2583;
  t2617 = t2614 + t2615;
  t2631 = t248*t2607;
  t2632 = t263*t2617;
  t2634 = -1.*t241*t2607;
  t2638 = t223*t2617;
  t2651 = t2634 + t2638;
  t2654 = t223*t2607;
  t2655 = t241*t2617;
  t2657 = t2654 + t2655;
  t2681 = t353*t2651;
  t2682 = t364*t2657;
  t2687 = t347*t2651;
  t2691 = t332*t2657;
  t2696 = t2687 + t2691;
  t2700 = t332*t2651;
  t2702 = -1.*t347*t2657;
  t2703 = t2700 + t2702;
  t2552 = 0.0233*t34*t119;
  t2775 = -1.*t1638;
  t2778 = 1. + t2775;
  t2779 = -0.135*t34*t38*t2778;
  t2818 = -1.*t34*t38*t1638*t2343;
  t2831 = -0.049*t2336;
  t2832 = t2831 + t1657;
  t2834 = -1.*t34*t119*t2832;
  t2854 = -1.*t34*t38*t1638*t1614;
  t2858 = t34*t119*t1620;
  t2859 = t2854 + t2858;
  t2840 = -1.*t34*t1614*t119;
  t2842 = -1.*t34*t38*t1638*t1620;
  t2844 = t2840 + t2842;
  t2873 = t2844*t1695;
  t2881 = t34*t38*t1640*t2358;
  t2882 = t1682*t2844;
  t2883 = t34*t38*t1640*t1693;
  t2885 = t2882 + t2883;
  t2887 = t34*t38*t1682*t1640;
  t2888 = -1.*t2844*t1693;
  t2890 = t2887 + t2888;
  t2903 = t1721*t2885;
  t2904 = t1731*t2890;
  t2905 = -1.*t1716*t2885;
  t2906 = t1707*t2890;
  t2908 = t2905 + t2906;
  t2912 = t1707*t2885;
  t2913 = t1716*t2890;
  t2918 = t2912 + t2913;
  t2939 = t1792*t2908;
  t2940 = t1798*t2918;
  t2942 = t1787*t2908;
  t2943 = t1782*t2918;
  t2944 = t2942 + t2943;
  t2950 = t1782*t2908;
  t2953 = -1.*t1787*t2918;
  t2955 = t2950 + t2953;
  t3047 = 0.135*t34*t85;
  t3049 = -0.135*t2539*t93*t119;
  t3050 = t34*t85;
  t3051 = t108*t93*t119;
  t3056 = t3050 + t3051;
  t3058 = t108*t34;
  t3060 = -1.*t85*t93*t119;
  t3061 = t3058 + t3060;
  t3068 = -1.*t38*t2565*t93;
  t3069 = t987*t3056;
  t3077 = t38*t54*t93;
  t3078 = t48*t3056;
  t3080 = t3077 + t3078;
  t3085 = -1.*t48*t38*t93;
  t3086 = t54*t3056;
  t3087 = t3085 + t3086;
  t3095 = t997*t3061;
  t3100 = t170*t3087;
  t3102 = t167*t3061;
  t3104 = t134*t3087;
  t3105 = t3102 + t3104;
  t3110 = t134*t3061;
  t3112 = -1.*t167*t3087;
  t3114 = t3110 + t3112;
  t3129 = t248*t3105;
  t3131 = t263*t3114;
  t3132 = -1.*t241*t3105;
  t3134 = t223*t3114;
  t3135 = t3132 + t3134;
  t3139 = t223*t3105;
  t3140 = t241*t3114;
  t3141 = t3139 + t3140;
  t3168 = t353*t3135;
  t3184 = t364*t3141;
  t3185 = t347*t3135;
  t3188 = t332*t3141;
  t3189 = t3185 + t3188;
  t3191 = t332*t3135;
  t3194 = -1.*t347*t3141;
  t3198 = t3191 + t3194;
  t3048 = 0.0233*t38*t93;
  t3286 = 0.135*t2778*t93*t119;
  t3287 = -0.135*t34*t1640;
  t3293 = t34*t1638;
  t3296 = -1.*t93*t119*t1640;
  t3297 = t3293 + t3296;
  t3288 = t1638*t93*t119;
  t3289 = t34*t1640;
  t3290 = t3288 + t3289;
  t3310 = t3290*t2343;
  t3311 = -1.*t38*t93*t2832;
  t3312 = t1614*t3290;
  t3313 = t38*t93*t1620;
  t3314 = t3312 + t3313;
  t3322 = -1.*t38*t1614*t93;
  t3324 = t3290*t1620;
  t3325 = t3322 + t3324;
  t3340 = t3325*t1695;
  t3342 = t3297*t2358;
  t3343 = t1682*t3325;
  t3346 = t3297*t1693;
  t3348 = t3343 + t3346;
  t3351 = t1682*t3297;
  t3353 = -1.*t3325*t1693;
  t3363 = t3351 + t3353;
  t3370 = t1721*t3348;
  t3371 = t1731*t3363;
  t3377 = -1.*t1716*t3348;
  t3379 = t1707*t3363;
  t3380 = t3377 + t3379;
  t3382 = t1707*t3348;
  t3385 = t1716*t3363;
  t3386 = t3382 + t3385;
  t3415 = t1792*t3380;
  t3418 = t1798*t3386;
  t3420 = t1787*t3380;
  t3423 = t1782*t3386;
  t3426 = t3420 + t3423;
  t3431 = t1782*t3380;
  t3432 = -1.*t1787*t3386;
  t3433 = t3431 + t3432;
  t3568 = 0.049*t1682;
  t3569 = t3568 + t1694;
  t3571 = t2152*t3569;
  t3575 = -0.09*t1682;
  t3578 = -0.049*t1693;
  t3581 = t3575 + t3578;
  t3584 = t2137*t3581;
  t3589 = -1.*t1682*t2137;
  t3590 = -1.*t2152*t1693;
  t3594 = t3589 + t3590;
  t3609 = t1731*t3594;
  t3618 = t1721*t2167;
  t3619 = t1716*t3594;
  t3623 = t3619 + t2168;
  t3630 = t1707*t3594;
  t3632 = -1.*t1716*t2167;
  t3635 = t3630 + t3632;
  t3659 = t1798*t3623;
  t3661 = t1792*t3635;
  t3662 = -1.*t1787*t3623;
  t3664 = t1782*t3635;
  t3666 = t3662 + t3664;
  t3668 = t1782*t3623;
  t3669 = t1787*t3635;
  t3670 = t3668 + t3669;
  t3748 = -0.21*t1707;
  t3751 = -0.049*t1716;
  t3752 = t3748 + t3751;
  t3762 = t3752*t2157;
  t3764 = 0.049*t1707;
  t3765 = t3764 + t1718;
  t3766 = t3765*t2167;
  t3770 = -1.*t1707*t2157;
  t3771 = t3770 + t3632;
  t3791 = t1798*t2170;
  t3792 = t1792*t3771;
  t3793 = -1.*t1787*t2170;
  t3794 = t1782*t3771;
  t3797 = t3793 + t3794;
  t3804 = t1787*t3771;
  t3805 = t2201 + t3804;
  t3772 = -0.45406*t3771;
  t3888 = -0.27068*t2177;
  t3803 = -0.826587*t3797;
  t3806 = -0.004179*t3805;
  t3894 = 0.00159*t2170;
  t3816 = t1934*t3797;
  t3820 = t1914*t3805;
  t3822 = t2015*t3797;
  t3825 = t2012*t3805;
  t3826 = t3822 + t3825;
  t3828 = 0.01889*t3826;
  t3836 = t1969*t3797;
  t3838 = t1959*t3805;
  t3842 = t3836 + t3838;
  t3845 = -0.617968*t3842;
  t3846 = t1997*t3797;
  t3848 = t1988*t3805;
  t3851 = t3846 + t3848;
  t3852 = 0.126739*t3851;
  t3855 = t2057*t3797;
  t3857 = t2046*t3805;
  t3858 = t2043*t3797;
  t3859 = t2037*t3805;
  t3863 = t3858 + t3859;
  t3865 = 0.00589*t3863;
  t3866 = t2037*t3797;
  t3870 = -1.*t2043*t3805;
  t3874 = t3866 + t3870;
  t3876 = -1.11818*t3874;
  t3912 = -0.01841*t1782;
  t3915 = t3912 + t1797;
  t3919 = t3915*t2170;
  t3924 = -0.70544*t1782;
  t3925 = 0.01841*t1787;
  t3926 = t3924 + t3925;
  t3927 = t3926*t2177;
  t3931 = -1.*t1782*t2177;
  t3932 = t3793 + t3931;
  t2287 = t2037*t2203;
  t2295 = -1.*t2043*t2203;
  p_output1[0]=var2[0] + 0.0288377642750394*(1.965608*(t3047 + t3048 + t3049 - 0.1351*t3056 + 0.01793*t3061) + 1.316608*(t3047 + t3049 - 0.0343*t3061 + t3068 + t3069 - 0.135*t3080 - 0.049*t3087) + 5.79228*(t3047 + t3049 + t3068 + t3069 - 0.17081*t3080 + t3095 + t3100 - 0.04895*t3105 - 0.14946*t3114) + 1.03008*(t3047 + t3049 + t3068 + t3069 - 0.132168*t3080 + t3095 + t3100 + t3129 + t3131 - 0.255862*t3135 - 0.007761*t3141) + 0.763*(t3047 + t3049 + t3068 + t3069 - 0.130288*t3080 + t3095 + t3100 + t3129 + t3131 - 0.45406*t3135 - 0.000421*t3141) + 1.03*(t3047 + t3049 + t3068 + t3069 - 0.127241*t3080 + t3095 + t3100 + t3129 + t3131 + t3168 + t3184 - 0.004179*t3189 - 0.826587*t3198) + 1.965608*(t3048 + t3286 + t3287 + 0.1351*t3290 + 0.01793*t3297) + 1.316608*(t3286 + t3287 - 0.0343*t3297 + t3310 + t3311 + 0.135*t3314 - 0.049*t3325) + 5.79228*(t3286 + t3287 + t3310 + t3311 + 0.17081*t3314 + t3340 + t3342 - 0.04895*t3348 - 0.14946*t3363) + 1.03008*(t3286 + t3287 + t3310 + t3311 + 0.132168*t3314 + t3340 + t3342 + t3370 + t3371 - 0.255862*t3380 - 0.007761*t3386) + 0.763*(t3286 + t3287 + t3310 + t3311 + 0.130288*t3314 + t3340 + t3342 + t3370 + t3371 - 0.45406*t3380 - 0.000421*t3386) + 1.03*(t3286 + t3287 + t3310 + t3311 + 0.127241*t3314 + t3340 + t3342 + t3370 + t3371 + t3415 + t3418 - 0.004179*t3426 - 0.826587*t3433) + 0.126*(t3286 + t3287 + t3310 + t3311 + t1881*t3314 + t3340 + t3342 + t3370 + t3371 + t3415 + t3418 + t1914*t3426 + t1934*t3433 - 0.617968*(t1953*t3314 + t1959*t3426 + t1969*t3433) + 0.126739*(t1979*t3314 + t1988*t3426 + t1997*t3433) + 0.01889*(t2006*t3314 + t2012*t3426 + t2015*t3433)) + 0.1498*(t3286 + t3287 + t3310 + t3311 + 0.13064*t3314 + t3340 + t3342 + t3370 + t3371 + t3415 + t3418 + t2046*t3426 + t2057*t3433 - 1.11818*(-1.*t2043*t3426 + t2037*t3433) + 0.00589*(t2037*t3426 + t2043*t3433)) + 0.126*(t3047 + t3049 + t3068 + t3069 + t3095 + t3100 + t3129 + t3131 + t3168 + t3184 + t3080*t434 + t3189*t469 + t3198*t512 - 0.617968*(t3080*t519 + t3189*t528 + t3198*t534) - 0.126739*(t3080*t547 + t3189*t556 + t3198*t565) + 0.01889*(t3080*t578 + t3189*t583 + t3198*t589)) + 0.1498*(t3047 + t3049 + t3068 + t3069 - 0.13064*t3080 + t3095 + t3100 + t3129 + t3131 + t3168 + t3184 - 1.11818*(t3198*t606 - 1.*t3189*t615) + 0.00589*(t3189*t606 + t3198*t615) + t3189*t621 + t3198*t643) + 10.33*(0.02841*t34 + 0.000346*t119*t93 - 0.05066*t38*t93))*var2[4] + 0.0288377642750394*(5.79228*(t2540 + t2562 + t2567 - 0.17081*t2595 + t2599 + t2600 - 0.04895*t2607 - 0.14946*t2617) + 1.03008*(t2540 + t2562 + t2567 - 0.132168*t2595 + t2599 + t2600 + t2631 + t2632 - 0.255862*t2651 - 0.007761*t2657) + 0.763*(t2540 + t2562 + t2567 - 0.130288*t2595 + t2599 + t2600 + t2631 + t2632 - 0.45406*t2651 - 0.000421*t2657) + 1.03*(t2540 + t2562 + t2567 - 0.127241*t2595 + t2599 + t2600 + t2631 + t2632 + t2681 + t2682 - 0.004179*t2696 - 0.826587*t2703) + 5.79228*(t2779 + t2818 + t2834 + 0.17081*t2859 + t2873 + t2881 - 0.04895*t2885 - 0.14946*t2890) + 1.03008*(t2779 + t2818 + t2834 + 0.132168*t2859 + t2873 + t2881 + t2903 + t2904 - 0.255862*t2908 - 0.007761*t2918) + 0.763*(t2779 + t2818 + t2834 + 0.130288*t2859 + t2873 + t2881 + t2903 + t2904 - 0.45406*t2908 - 0.000421*t2918) + 1.03*(t2779 + t2818 + t2834 + 0.127241*t2859 + t2873 + t2881 + t2903 + t2904 + t2939 + t2940 - 0.004179*t2944 - 0.826587*t2955) + 0.126*(t2779 + t2818 + t2834 + t1881*t2859 + t2873 + t2881 + t2903 + t2904 + t2939 + t2940 + t1914*t2944 + t1934*t2955 - 0.617968*(t1953*t2859 + t1959*t2944 + t1969*t2955) + 0.126739*(t1979*t2859 + t1988*t2944 + t1997*t2955) + 0.01889*(t2006*t2859 + t2012*t2944 + t2015*t2955)) + 0.1498*(t2779 + t2818 + t2834 + 0.13064*t2859 + t2873 + t2881 + t2903 + t2904 + t2939 + t2940 + t2046*t2944 + t2057*t2955 - 1.11818*(-1.*t2043*t2944 + t2037*t2955) + 0.00589*(t2037*t2944 + t2043*t2955)) + 10.33*(-0.05066*t119*t34 - 0.000346*t34*t38) + 1.316608*(t2779 + t2818 + t2834 - 0.049*t2844 + 0.135*t2859 - 0.0343*t1640*t34*t38) + 1.965608*(t2552 + t2779 - 0.1351*t1638*t34*t38 + 0.01793*t1640*t34*t38) + 0.126*(t2540 + t2562 + t2567 + t2599 + t2600 + t2631 + t2632 + t2681 + t2682 + t2595*t434 + t2696*t469 + t2703*t512 - 0.617968*(t2595*t519 + t2696*t528 + t2703*t534) - 0.126739*(t2595*t547 + t2696*t556 + t2703*t565) + 0.01889*(t2595*t578 + t2696*t583 + t2703*t589)) + 0.1498*(t2540 + t2562 + t2567 - 0.13064*t2595 + t2599 + t2600 + t2631 + t2632 + t2681 + t2682 - 1.11818*(t2703*t606 - 1.*t2696*t615) + 0.00589*(t2696*t606 + t2703*t615) + t2696*t621 + t2703*t643) + 1.316608*(t2540 + t2562 + t2567 - 0.049*t2583 - 0.135*t2595 - 0.0343*t34*t38*t85) + 1.965608*(t2540 + t2552 + 0.1351*t108*t34*t38 + 0.01793*t34*t38*t85))*var2[5] + 0.0288377642750394*(1.965608*(0.1351*t2152 + t2313 + t2317 + 0.01793*t2321) + 1.316608*(0.135*t1614*t2152 - 0.049*t1620*t2152 + t2313 + t2317 - 0.0343*t2321 + t2344) + 5.79228*(0.17081*t1614*t2152 + t2313 + t2317 + t2344 + t2352 + t2363 - 0.04895*t2370 - 0.14946*t2379) + 1.03008*(0.132168*t1614*t2152 + t2313 + t2317 + t2344 + t2352 + t2363 + t2391 + t2392 - 0.255862*t2395 - 0.007761*t2403) + 0.763*(0.130288*t1614*t2152 + t2313 + t2317 + t2344 + t2352 + t2363 + t2391 + t2392 - 0.45406*t2395 - 0.000421*t2403) + 1.03*(0.127241*t1614*t2152 + t2313 + t2317 + t2344 + t2352 + t2363 + t2391 + t2392 + t2427 + t2430 - 0.004179*t2434 - 0.826587*t2449) + 0.126*(t1614*t1881*t2152 + t2313 + t2317 + t2344 + t2352 + t2363 + t2391 + t2392 + t2427 + t2430 + t1914*t2434 + t1934*t2449 - 0.617968*(t1614*t1953*t2152 + t1959*t2434 + t1969*t2449) + 0.126739*(t1614*t1979*t2152 + t1988*t2434 + t1997*t2449) + 0.01889*(t1614*t2006*t2152 + t2012*t2434 + t2015*t2449)) + 0.1498*(0.13064*t1614*t2152 + t2313 + t2317 + t2344 + t2352 + t2363 + t2391 + t2392 + t2427 + t2430 + t2046*t2434 + t2057*t2449 - 1.11818*(-1.*t2043*t2434 + t2037*t2449) + 0.00589*(t2037*t2434 + t2043*t2449)))*var2[6] + 0.0288377642750394*(1.316608*(t1627 + t1663 - 0.049*t1667 + 0.135*t1673) + 5.79228*(t1627 + t1663 + 0.17081*t1673 - 0.04895*t1667*t1682 + 0.14946*t1667*t1693 + t1701) + 1.03008*(t1627 + t1663 + 0.132168*t1673 + t1701 + t1722 + t1732 - 0.255862*t1739 - 0.007761*t1746) + 0.763*(t1627 + t1663 + 0.130288*t1673 + t1701 + t1722 + t1732 - 0.45406*t1739 - 0.000421*t1746) + 1.03*(t1627 + t1663 + 0.127241*t1673 + t1701 + t1722 + t1732 + t1795 + t1799 - 0.004179*t1806 - 0.826587*t1822) + 0.126*(t1627 + t1663 + t1701 + t1722 + t1732 + t1795 + t1799 + t1673*t1881 + t1806*t1914 + t1822*t1934 - 0.617968*(t1673*t1953 + t1806*t1959 + t1822*t1969) + 0.126739*(t1673*t1979 + t1806*t1988 + t1822*t1997) + 0.01889*(t1673*t2006 + t1806*t2012 + t1822*t2015)) + 0.1498*(t1627 + t1663 + 0.13064*t1673 + t1701 + t1722 + t1732 + t1795 + t1799 - 1.11818*(t1822*t2037 - 1.*t1806*t2043) + 0.00589*(t1806*t2037 + t1822*t2043) + t1806*t2046 + t1822*t2057))*var2[7] + 0.0288377642750394*(5.79228*(-0.04895*t2167 + t3571 + t3584 - 0.14946*t3594) + 0.763*(t3571 + t3584 + t3609 + t3618 - 0.000421*t3623 - 0.45406*t3635) + 1.03008*(t3571 + t3584 + t3609 + t3618 - 0.007761*t3623 - 0.255862*t3635) + 1.03*(t3571 + t3584 + t3609 + t3618 + t3659 + t3661 - 0.826587*t3666 - 0.004179*t3670) + 0.126*(t3571 + t3584 + t3609 + t3618 + t3659 + t3661 + t1934*t3666 + t1914*t3670 - 0.617968*(t1969*t3666 + t1959*t3670) + 0.126739*(t1997*t3666 + t1988*t3670) + 0.01889*(t2015*t3666 + t2012*t3670)) + 0.1498*(t3571 + t3584 + t3609 + t3618 + t3659 + t3661 + t2057*t3666 + t2046*t3670 + 0.00589*(t2043*t3666 + t2037*t3670) - 1.11818*(t2037*t3666 - 1.*t2043*t3670)))*var2[8] + 0.0288377642750394*(1.03008*(-0.007761*t2170 + t3762 + t3766 - 0.255862*t3771) + 0.763*(-0.000421*t2170 + t3762 + t3766 + t3772) + 1.03*(t3762 + t3766 + t3791 + t3792 + t3803 + t3806) + 0.126*(t3762 + t3766 + t3791 + t3792 + t3816 + t3820 + t3828 + t3845 + t3852) + 0.1498*(t3762 + t3766 + t3791 + t3792 + t3855 + t3857 + t3865 + t3876))*var2[9] + 0.0288377642750394*(0.763*(0.001169*t2170 + t3772 + t3888) + 1.03*(t3791 + t3792 + t3803 + t3806 + t3888 + t3894) + 0.126*(t3791 + t3792 + t3816 + t3820 + t3828 + t3845 + t3852 + t3888 + t3894) + 0.1498*(t3791 + t3792 + t3855 + t3857 + t3865 + t3876 + t3888 + t3894))*var2[10] + 0.0288377642750394*(1.03*(-0.004179*t2203 + t3919 + t3927 - 0.826587*t3932) + 0.126*(t1914*t2203 + t3919 + t3927 + t1934*t3932 - 0.617968*(t1959*t2203 + t1969*t3932) + 0.126739*(t1988*t2203 + t1997*t3932) + 0.01889*(t2012*t2203 + t2015*t3932)) + 0.1498*(t2046*t2203 + t3919 + t3927 + t2057*t3932 - 1.11818*(t2295 + t2037*t3932) + 0.00589*(t2287 + t2043*t3932)))*var2[11] + 0.00363355829865496*(t1667*(-2.1934241414728571e-7 + 0.000033783761634830594*t1851 - 0.021877537552*(t2081 + t2082) - 0.6934341012630001*(t2086 + t2087)) + (-1.7147089040178687e-8 - 0.021744644052735636*t1851 + 0.005534467322*(t2082 + t2103) - 0.6934341012630001*(t2112 + t2114))*t2179 + (-1.2096424700126054e-9 - 0.6934128581485427*t1851 + 0.005534467322*(t2087 + t2181) - 0.021877537552*(t2114 + t2193))*t2203 + 0.01889*(-0.993925573253*t1851*t2179 + t1667*(t2103 + t2205) + t2203*(t2112 + t2211)) + 0.126739*(-0.006104248100000001*t1667*t1851 + t2179*(t2081 + t2205) + t2203*(t2086 + t2227)) - 0.617968*(-0.999969365345*t1851*t2203 + t2179*(t2193 + t2211) + t1667*(t2181 + t2227)))*var2[12] + 0.0043198970884009*((-1.11344*t2037 - 0.02159*t2043)*t2179 + (0.02159*t2037 + t2045)*t2203 + 0.00589*(-1.*t2043*t2179 + t2287) - 1.11818*(-1.*t2037*t2179 + t2295))*var2[13] + 0.0288377642750394*(1.965608*(-0.1351*t710 + t939 + t941 + 0.01793*t951) + 1.316608*(-0.135*t48*t710 - 0.049*t54*t710 + t939 + t941 - 0.0343*t951 + t989) + 5.79228*(t1002 - 0.04895*t1006 - 0.14946*t1013 - 0.17081*t48*t710 + t939 + t941 + t989 + t998) + 1.03008*(t1002 + t1028 + t1029 - 0.255862*t1035 - 0.007761*t1045 - 0.132168*t48*t710 + t939 + t941 + t989 + t998) + 0.1498*(t1002 + t1028 + t1029 + t1066 + t1068 - 1.11818*(t1080*t606 - 1.*t1074*t615) + 0.00589*(t1074*t606 + t1080*t615) + t1074*t621 + t1080*t643 - 0.13064*t48*t710 + t939 + t941 + t989 + t998) + 0.763*(t1002 + t1028 + t1029 - 0.45406*t1035 - 0.000421*t1045 - 0.130288*t48*t710 + t939 + t941 + t989 + t998) + 1.03*(t1002 + t1028 + t1029 + t1066 + t1068 - 0.004179*t1074 - 0.826587*t1080 - 0.127241*t48*t710 + t939 + t941 + t989 + t998) + 0.126*(t1002 + t1028 + t1029 + t1066 + t1068 + t1074*t469 + t1080*t512 + t434*t48*t710 - 0.617968*(t1074*t528 + t1080*t534 + t48*t519*t710) - 0.126739*(t1074*t556 + t1080*t565 + t48*t547*t710) + 0.01889*(t1074*t583 + t1080*t589 + t48*t578*t710) + t939 + t941 + t989 + t998))*var2[14] + 0.0288377642750394*(5.79228*(t126 - 0.04895*t134*t145 + 0.14946*t145*t167 + t177 - 0.17081*t186 + t67) + 1.316608*(t126 - 0.049*t145 - 0.135*t186 + t67) + 1.03008*(t126 + t177 - 0.132168*t186 + t250 + t268 - 0.255862*t280 - 0.007761*t291 + t67) + 0.763*(t126 + t177 - 0.130288*t186 + t250 + t268 - 0.45406*t280 - 0.000421*t291 + t67) + 1.03*(t126 + t177 - 0.127241*t186 + t250 + t268 + t356 + t366 - 0.004179*t377 - 0.826587*t388 + t67) + 0.126*(t126 + t177 + t250 + t268 + t356 + t366 + t186*t434 + t377*t469 + t388*t512 - 0.617968*(t186*t519 + t377*t528 + t388*t534) - 0.126739*(t186*t547 + t377*t556 + t388*t565) + 0.01889*(t186*t578 + t377*t583 + t388*t589) + t67) + 0.1498*(t126 + t177 - 0.13064*t186 + t250 + t268 + t356 + t366 - 1.11818*(t388*t606 - 1.*t377*t615) + 0.00589*(t377*t606 + t388*t615) + t377*t621 + t388*t643 + t67))*var2[15] + 0.0288377642750394*(0.763*(t1178 + t1186 + t1213 + t1220 - 0.000421*t1227 - 0.45406*t1241) + 1.03008*(t1178 + t1186 + t1213 + t1220 - 0.007761*t1227 - 0.255862*t1241) + 1.03*(t1178 + t1186 + t1213 + t1220 + t1276 + t1279 - 0.826587*t1284 - 0.004179*t1291) + 0.126*(t1178 + t1186 + t1213 + t1220 + t1276 + t1279 + t1291*t469 + t1284*t512 - 0.617968*(t1291*t528 + t1284*t534) - 0.126739*(t1291*t556 + t1284*t565) + 0.01889*(t1291*t583 + t1284*t589)) + 0.1498*(t1178 + t1186 + t1213 + t1220 + t1276 + t1279 + 0.00589*(t1291*t606 + t1284*t615) - 1.11818*(t1284*t606 - 1.*t1291*t615) + t1291*t621 + t1284*t643) + 5.79228*(t1178 + t1186 - 0.14946*t1197 - 0.04895*t727))*var2[16] + 0.0288377642750394*(1.03*(t1367 + t1373 + t1395 + t1401 + t1412 + t1419) + 0.126*(t1367 + t1373 + t1395 + t1401 + t1422 + t1423 + t1431 + t1443 + t1452) + 0.1498*(t1367 + t1373 + t1395 + t1401 + t1457 + t1458 + t1466 + t1470) + 1.03008*(t1367 + t1373 - 0.255862*t1377 - 0.007761*t734) + 0.763*(t1367 + t1373 + t1378 - 0.000421*t734))*var2[17] + 0.0288377642750394*(1.03*(t1395 + t1401 + t1412 + t1419 + t1484 + t1487) + 0.126*(t1395 + t1401 + t1422 + t1423 + t1431 + t1443 + t1452 + t1484 + t1487) + 0.1498*(t1395 + t1401 + t1457 + t1458 + t1466 + t1470 + t1484 + t1487) + 0.763*(t1378 + t1484 + 0.001169*t734))*var2[18] + 0.0288377642750394*(1.03*(t1508 + t1517 - 0.826587*t1522 - 0.004179*t784) + 0.126*(t1508 + t1517 + t1522*t512 + t469*t784 - 0.617968*(t1522*t534 + t528*t784) - 0.126739*(t1522*t565 + t556*t784) + 0.01889*(t1522*t589 + t583*t784)) + 0.1498*(t1508 + t1517 + t1522*t643 + t621*t784 + 0.00589*(t1522*t615 + t902) - 1.11818*(t1522*t606 + t914)))*var2[19] + 0.00363355829865496*(t145*(2.1934241414728571e-7 - 0.000033783761634830594*t413 - 0.6934341012630001*(t669 + t670) - 0.021877537552*(t677 + t678)) + (-1.7147089040178687e-8 - 0.021744644052735636*t413 - 0.6934341012630001*(t690 + t691) - 0.005534467322*(t678 + t699))*t747 + (-1.2096424700126054e-9 - 0.6934128581485427*t413 - 0.021877537552*(t691 + t751) - 0.005534467322*(t670 + t762))*t784 - 0.126739*(-0.006104248100000001*t145*t413 + t747*(t677 + t791) + t784*(t669 + t799)) + 0.01889*(-0.993925573253*t413*t747 + t145*(t699 + t791) + t784*(t690 + t830)) - 0.617968*(-0.999969365345*t413*t784 + t145*(t762 + t799) + t747*(t751 + t830)))*var2[20] + 0.0043198970884009*((-1.11344*t606 - 0.02159*t615)*t747 + (0.02159*t606 + t618)*t784 + 0.00589*(-1.*t615*t747 + t902) - 1.11818*(-1.*t606*t747 + t914))*var2[21];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 1, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#endif // MATLAB_MEX_FILE

namespace SymFunction
{

void ya1_new_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}




