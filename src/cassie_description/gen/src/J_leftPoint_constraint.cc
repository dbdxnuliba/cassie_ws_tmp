/*
 * Automatically Generated from Mathematica.
 * Sun 7 Nov 2021 14:26:39 GMT-08:00
 */

#ifdef MATLAB_MEX_FILE
// No need to include header
#else
#include "J_leftPoint_constraint.hh"
#endif

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t904;
  double t462;
  double t796;
  double t873;
  double t895;
  double t907;
  double t915;
  double t999;
  double t1090;
  double t1191;
  double t1235;
  double t1717;
  double t1719;
  double t1720;
  double t1733;
  double t1468;
  double t1591;
  double t1666;
  double t1764;
  double t1768;
  double t1796;
  double t1983;
  double t1986;
  double t1989;
  double t2025;
  double t1897;
  double t1919;
  double t1939;
  double t2049;
  double t2050;
  double t2058;
  double t2096;
  double t2100;
  double t2102;
  double t2113;
  double t2135;
  double t2140;
  double t2148;
  double t2158;
  double t2171;
  double t2179;
  double t2190;
  double t2192;
  double t2245;
  double t2250;
  double t2253;
  double t2255;
  double t2259;
  double t2272;
  double t2276;
  double t2277;
  double t2283;
  double t2284;
  double t2287;
  double t2291;
  double t2296;
  double t2297;
  double t2298;
  double t2306;
  double t2307;
  double t2309;
  double t529;
  double t543;
  double t2324;
  double t2325;
  double t2326;
  double t1730;
  double t1739;
  double t1743;
  double t1806;
  double t1808;
  double t1811;
  double t2333;
  double t2334;
  double t2335;
  double t2338;
  double t2339;
  double t2340;
  double t2018;
  double t2026;
  double t2028;
  double t2059;
  double t2073;
  double t2089;
  double t2108;
  double t2121;
  double t2126;
  double t2349;
  double t2350;
  double t2351;
  double t2353;
  double t2355;
  double t2356;
  double t2154;
  double t2155;
  double t2157;
  double t2249;
  double t2251;
  double t2252;
  double t2360;
  double t2362;
  double t2363;
  double t2366;
  double t2367;
  double t2371;
  double t2263;
  double t2264;
  double t2269;
  double t2290;
  double t2292;
  double t2294;
  double t2374;
  double t2376;
  double t2379;
  double t2384;
  double t2385;
  double t2386;
  double t2302;
  double t2303;
  double t2305;
  double t2389;
  double t2395;
  double t2396;
  double t2404;
  double t2406;
  double t2407;
  double t2515;
  double t2523;
  double t2530;
  double t2544;
  double t2551;
  double t2554;
  double t2497;
  double t2498;
  double t2504;
  double t2505;
  double t2532;
  double t2533;
  double t2537;
  double t2540;
  double t2541;
  double t2543;
  double t2570;
  double t2576;
  double t2598;
  double t2602;
  double t2603;
  double t2589;
  double t2605;
  double t2612;
  double t2623;
  double t2624;
  double t2647;
  double t2615;
  double t2648;
  double t2653;
  double t2658;
  double t2659;
  double t2660;
  double t2663;
  double t2670;
  double t2671;
  double t2675;
  double t2677;
  double t2691;
  double t2481;
  double t2484;
  double t2492;
  double t2741;
  double t2744;
  double t2748;
  double t2711;
  double t2712;
  double t2730;
  double t2731;
  double t2750;
  double t2769;
  double t2774;
  double t2777;
  double t2783;
  double t2770;
  double t2785;
  double t2793;
  double t2815;
  double t2823;
  double t2824;
  double t2694;
  double t2696;
  double t2698;
  double t2702;
  double t2316;
  double t2318;
  double t2320;
  double t2860;
  double t2861;
  double t2862;
  double t2421;
  double t2447;
  double t2468;
  double t2863;
  double t2866;
  double t2867;
  double t2872;
  double t2493;
  double t2494;
  double t2495;
  double t2796;
  double t2826;
  double t2831;
  double t2833;
  double t2839;
  double t2840;
  double t2847;
  double t2848;
  double t2849;
  double t2896;
  double t2906;
  double t2907;
  double t2912;
  double t2918;
  double t2919;
  double t2925;
  double t2926;
  double t2930;
  double t2931;
  double t2955;
  double t2957;
  double t2965;
  double t2993;
  double t2994;
  double t2995;
  double t3020;
  double t3030;
  double t3033;
  double t3045;
  double t3053;
  double t3054;
  double t3057;
  double t3063;
  double t3064;
  double t3069;
  double t3070;
  double t3071;
  double t3081;
  double t3082;
  double t3083;
  double t3088;
  double t3089;
  double t3091;
  double t3107;
  double t3113;
  double t3114;
  double t3156;
  double t3161;
  double t3166;
  double t3184;
  double t3186;
  double t3188;
  double t3194;
  double t3195;
  double t3197;
  double t3201;
  double t3205;
  double t3208;
  double t3213;
  double t3214;
  double t3215;
  double t3218;
  double t3225;
  double t3226;
  double t3232;
  double t3239;
  double t3241;
  double t3260;
  double t3273;
  double t3274;
  double t3300;
  double t3305;
  double t3306;
  double t3347;
  double t3359;
  double t3380;
  double t3414;
  double t3421;
  double t3422;
  double t3432;
  double t3433;
  double t3435;
  double t3439;
  double t3440;
  double t3446;
  double t3453;
  double t3459;
  double t3470;
  double t3482;
  double t3483;
  double t3489;
  double t3491;
  double t3494;
  double t3499;
  double t3511;
  double t3515;
  double t3528;
  double t3552;
  double t3558;
  double t3564;
  double t2703;
  double t2850;
  double t2851;
  double t3600;
  double t3606;
  double t3607;
  double t3323;
  double t3327;
  double t3329;
  double t3653;
  double t3660;
  double t3662;
  double t3708;
  double t3713;
  double t3740;
  double t3141;
  double t3143;
  double t3146;
  double t3937;
  double t3958;
  double t3961;
  double t3970;
  double t3980;
  double t3990;
  double t4005;
  double t4026;
  double t4036;
  double t4045;
  double t4053;
  double t4054;
  double t4076;
  double t4081;
  double t4083;
  double t4087;
  double t4096;
  double t4098;
  double t4102;
  double t4104;
  double t4118;
  double t4190;
  double t4191;
  double t4197;
  double t4222;
  double t4224;
  double t4227;
  double t4239;
  double t4240;
  double t4243;
  double t4245;
  double t4255;
  double t4258;
  double t4267;
  double t4268;
  double t4270;
  double t4275;
  double t4276;
  double t4277;
  double t4284;
  double t4286;
  double t4290;
  double t4296;
  double t4300;
  double t4306;
  double t4375;
  double t4376;
  double t4379;
  double t4382;
  double t4385;
  double t4388;
  double t4396;
  double t4401;
  double t4418;
  double t4433;
  double t4434;
  double t4436;
  double t4441;
  double t4442;
  double t4447;
  double t4454;
  double t4456;
  double t4461;
  double t4474;
  double t4476;
  double t4483;
  double t4514;
  double t4515;
  double t4516;
  double t4527;
  double t4528;
  double t4533;
  double t4537;
  double t4539;
  double t4540;
  double t4324;
  double t4326;
  double t4327;
  double t4165;
  double t4171;
  double t4174;
  double t4606;
  double t4616;
  double t4620;
  double t4623;
  double t4624;
  double t4629;
  double t4632;
  double t4634;
  double t4639;
  double t4643;
  double t4644;
  double t4646;
  double t4655;
  double t4656;
  double t4659;
  double t4667;
  double t4670;
  double t4679;
  double t4684;
  double t4686;
  double t4689;
  double t4758;
  double t4764;
  double t4765;
  double t4767;
  double t4771;
  double t4772;
  double t4775;
  double t4778;
  double t4782;
  double t4785;
  double t4786;
  double t4787;
  double t4789;
  double t4792;
  double t4794;
  double t4797;
  double t4798;
  double t4803;
  double t4805;
  double t4806;
  double t4807;
  double t4850;
  double t4851;
  double t4857;
  double t4858;
  double t4860;
  double t4869;
  double t4873;
  double t4874;
  double t4876;
  double t4877;
  double t4878;
  double t4884;
  double t4885;
  double t4888;
  double t4894;
  double t4899;
  double t4905;
  double t4912;
  double t4918;
  double t4924;
  double t4945;
  double t4948;
  double t4950;
  double t4971;
  double t4975;
  double t4979;
  double t4713;
  double t4717;
  double t4726;
  double t4818;
  double t4823;
  double t4825;
  double t5033;
  double t5034;
  double t5036;
  double t5054;
  double t5061;
  double t5066;
  double t5076;
  double t5080;
  double t5081;
  double t5083;
  double t5084;
  double t5085;
  double t5092;
  double t5093;
  double t5096;
  double t5020;
  double t5021;
  double t5022;
  double t5027;
  double t5028;
  double t2343;
  double t2345;
  double t2347;
  double t5151;
  double t5154;
  double t5155;
  double t5157;
  double t5161;
  double t5162;
  double t5164;
  double t5165;
  double t5167;
  double t5169;
  double t5170;
  double t5171;
  double t5188;
  double t5190;
  double t5191;
  double t5200;
  double t5201;
  double t5204;
  double t5206;
  double t5208;
  double t5209;
  double t5215;
  double t5217;
  double t5221;
  double t5226;
  double t5229;
  double t5233;
  double t5246;
  double t5248;
  double t5249;
  double t5256;
  double t5260;
  double t5261;
  double t5179;
  double t5180;
  double t5182;
  double t5114;
  double t5115;
  double t5116;
  double t5312;
  double t5313;
  double t5314;
  double t5318;
  double t5319;
  double t5321;
  double t5323;
  double t5324;
  double t5327;
  double t5328;
  double t5330;
  double t5332;
  double t5333;
  double t5334;
  double t5303;
  double t5305;
  double t5308;
  double t5309;
  double t5310;
  double t5348;
  double t5349;
  double t5350;
  double t5359;
  double t5360;
  double t5369;
  double t5372;
  double t5373;
  double t5375;
  double t5376;
  double t5379;
  double t5386;
  double t5387;
  double t5388;
  double t5413;
  double t5414;
  double t5415;
  double t5419;
  double t5420;
  double t5422;
  double t5423;
  double t5424;
  double t5426;
  double t5427;
  double t5428;
  double t5430;
  double t5431;
  double t5432;
  double t5434;
  double t5435;
  double t5436;
  double t5336;
  double t5337;
  double t5338;
  double t5390;
  double t5393;
  double t5395;
  double t5474;
  double t5475;
  double t5477;
  double t5480;
  double t5482;
  double t5485;
  double t5486;
  double t5464;
  double t5465;
  double t5466;
  double t5468;
  double t5469;
  double t5505;
  double t5506;
  double t5508;
  double t5509;
  double t5510;
  double t5512;
  double t5513;
  double t5527;
  double t5528;
  double t5531;
  double t5532;
  double t5533;
  double t5535;
  double t5536;
  double t5538;
  double t5539;
  double t5540;
  double t5490;
  double t5491;
  double t5493;
  double t5515;
  double t5516;
  double t5517;
  double t5568;
  double t5569;
  double t5561;
  double t5562;
  double t5564;
  double t5565;
  double t5566;
  double t5584;
  double t5585;
  double t2415;
  double t5603;
  double t5605;
  double t5610;
  double t5611;
  double t5613;
  double t5573;
  double t5574;
  double t5575;
  double t5589;
  double t5590;
  double t5578;
  double t5642;
  double t5643;
  double t5644;
  double t5647;
  double t5649;
  double t2412;
  double t2417;
  double t5595;
  double t5618;
  double t5677;
  double t5678;
  double t5651;
  double t5653;
  t904 = Cos(var1[3]);
  t462 = Cos(var1[6]);
  t796 = Cos(var1[5]);
  t873 = Sin(var1[3]);
  t895 = -1.*t796*t873;
  t907 = Sin(var1[4]);
  t915 = Sin(var1[5]);
  t999 = -1.*t904*t907*t915;
  t1090 = t895 + t999;
  t1191 = Cos(var1[4]);
  t1235 = Sin(var1[6]);
  t1717 = Cos(var1[7]);
  t1719 = -1.*t1717;
  t1720 = 1. + t1719;
  t1733 = Sin(var1[7]);
  t1468 = t462*t1090;
  t1591 = -1.*t904*t1191*t1235;
  t1666 = t1468 + t1591;
  t1764 = t904*t796*t907;
  t1768 = -1.*t873*t915;
  t1796 = t1764 + t1768;
  t1983 = Cos(var1[8]);
  t1986 = -1.*t1983;
  t1989 = 1. + t1986;
  t2025 = Sin(var1[8]);
  t1897 = t1717*t1796;
  t1919 = t1666*t1733;
  t1939 = t1897 + t1919;
  t2049 = -1.*t904*t1191*t462;
  t2050 = -1.*t1090*t1235;
  t2058 = t2049 + t2050;
  t2096 = Cos(var1[9]);
  t2100 = -1.*t2096;
  t2102 = 1. + t2100;
  t2113 = Sin(var1[9]);
  t2135 = t1983*t1939;
  t2140 = t2058*t2025;
  t2148 = t2135 + t2140;
  t2158 = t1983*t2058;
  t2171 = -1.*t1939*t2025;
  t2179 = t2158 + t2171;
  t2190 = Cos(var1[10]);
  t2192 = -1.*t2190;
  t2245 = 1. + t2192;
  t2250 = Sin(var1[10]);
  t2253 = -1.*t2113*t2148;
  t2255 = t2096*t2179;
  t2259 = t2253 + t2255;
  t2272 = t2096*t2148;
  t2276 = t2113*t2179;
  t2277 = t2272 + t2276;
  t2283 = Cos(var1[11]);
  t2284 = -1.*t2283;
  t2287 = 1. + t2284;
  t2291 = Sin(var1[11]);
  t2296 = t2250*t2259;
  t2297 = t2190*t2277;
  t2298 = t2296 + t2297;
  t2306 = t2190*t2259;
  t2307 = -1.*t2250*t2277;
  t2309 = t2306 + t2307;
  t529 = -1.*t462;
  t543 = 1. + t529;
  t2324 = t904*t796;
  t2325 = -1.*t873*t907*t915;
  t2326 = t2324 + t2325;
  t1730 = 0.135*t1720;
  t1739 = 0.049*t1733;
  t1743 = t1730 + t1739;
  t1806 = -0.049*t1720;
  t1808 = 0.135*t1733;
  t1811 = t1806 + t1808;
  t2333 = t462*t2326;
  t2334 = -1.*t1191*t873*t1235;
  t2335 = t2333 + t2334;
  t2338 = t796*t873*t907;
  t2339 = t904*t915;
  t2340 = t2338 + t2339;
  t2018 = -0.049*t1989;
  t2026 = -0.09*t2025;
  t2028 = t2018 + t2026;
  t2059 = -0.09*t1989;
  t2073 = 0.049*t2025;
  t2089 = t2059 + t2073;
  t2108 = -0.049*t2102;
  t2121 = -0.21*t2113;
  t2126 = t2108 + t2121;
  t2349 = t1717*t2340;
  t2350 = t2335*t1733;
  t2351 = t2349 + t2350;
  t2353 = -1.*t1191*t462*t873;
  t2355 = -1.*t2326*t1235;
  t2356 = t2353 + t2355;
  t2154 = -0.21*t2102;
  t2155 = 0.049*t2113;
  t2157 = t2154 + t2155;
  t2249 = -0.27068*t2245;
  t2251 = 0.00159*t2250;
  t2252 = t2249 + t2251;
  t2360 = t1983*t2351;
  t2362 = t2356*t2025;
  t2363 = t2360 + t2362;
  t2366 = t1983*t2356;
  t2367 = -1.*t2351*t2025;
  t2371 = t2366 + t2367;
  t2263 = -0.00159*t2245;
  t2264 = -0.27068*t2250;
  t2269 = t2263 + t2264;
  t2290 = 0.01841*t2287;
  t2292 = -0.70544*t2291;
  t2294 = t2290 + t2292;
  t2374 = -1.*t2113*t2363;
  t2376 = t2096*t2371;
  t2379 = t2374 + t2376;
  t2384 = t2096*t2363;
  t2385 = t2113*t2371;
  t2386 = t2384 + t2385;
  t2302 = -0.70544*t2287;
  t2303 = -0.01841*t2291;
  t2305 = t2302 + t2303;
  t2389 = t2250*t2379;
  t2395 = t2190*t2386;
  t2396 = t2389 + t2395;
  t2404 = t2190*t2379;
  t2406 = -1.*t2250*t2386;
  t2407 = t2404 + t2406;
  t2515 = t796*t873;
  t2523 = t904*t907*t915;
  t2530 = t2515 + t2523;
  t2544 = t904*t1191*t462;
  t2551 = -1.*t2530*t1235;
  t2554 = t2544 + t2551;
  t2497 = -1.*t904*t796*t907;
  t2498 = t873*t915;
  t2504 = t2497 + t2498;
  t2505 = t1717*t2504;
  t2532 = t462*t2530;
  t2533 = t904*t1191*t1235;
  t2537 = t2532 + t2533;
  t2540 = t2537*t1733;
  t2541 = t2505 + t2540;
  t2543 = t1983*t2541;
  t2570 = t2554*t2025;
  t2576 = t2543 + t2570;
  t2598 = t1983*t2554;
  t2602 = -1.*t2541*t2025;
  t2603 = t2598 + t2602;
  t2589 = -1.*t2113*t2576;
  t2605 = t2096*t2603;
  t2612 = t2589 + t2605;
  t2623 = t2096*t2576;
  t2624 = t2113*t2603;
  t2647 = t2623 + t2624;
  t2615 = t2250*t2612;
  t2648 = t2190*t2647;
  t2653 = t2615 + t2648;
  t2658 = t2283*t2653;
  t2659 = t2190*t2612;
  t2660 = -1.*t2250*t2647;
  t2663 = t2659 + t2660;
  t2670 = t2291*t2663;
  t2671 = t2658 + t2670;
  t2675 = -1.*t1717*t2537;
  t2677 = t2504*t1733;
  t2691 = t2675 + t2677;
  t2481 = -1.*t1191*t462*t915;
  t2484 = t907*t1235;
  t2492 = t2481 + t2484;
  t2741 = t462*t907;
  t2744 = t1191*t915*t1235;
  t2748 = t2741 + t2744;
  t2711 = t1191*t796*t1717;
  t2712 = t2492*t1733;
  t2730 = t2711 + t2712;
  t2731 = t1983*t2730;
  t2750 = t2748*t2025;
  t2769 = t2731 + t2750;
  t2774 = t1983*t2748;
  t2777 = -1.*t2730*t2025;
  t2783 = t2774 + t2777;
  t2770 = -1.*t2113*t2769;
  t2785 = t2096*t2783;
  t2793 = t2770 + t2785;
  t2815 = t2096*t2769;
  t2823 = t2113*t2783;
  t2824 = t2815 + t2823;
  t2694 = Power(t2691,2);
  t2696 = Power(t2671,2);
  t2698 = t2694 + t2696;
  t2702 = 1/Sqrt(t2698);
  t2316 = t2283*t2298;
  t2318 = t2291*t2309;
  t2320 = t2316 + t2318;
  t2860 = -1.*t1717*t2335;
  t2861 = t2340*t1733;
  t2862 = t2860 + t2861;
  t2421 = t2283*t2396;
  t2447 = t2291*t2407;
  t2468 = t2421 + t2447;
  t2863 = Power(t2698,-1.5);
  t2866 = 2.*t2862*t2691;
  t2867 = 2.*t2671*t2468;
  t2872 = t2866 + t2867;
  t2493 = -1.*t1717*t2492;
  t2494 = t1191*t796*t1733;
  t2495 = t2493 + t2494;
  t2796 = t2250*t2793;
  t2826 = t2190*t2824;
  t2831 = t2796 + t2826;
  t2833 = t2283*t2831;
  t2839 = t2190*t2793;
  t2840 = -1.*t2250*t2824;
  t2847 = t2839 + t2840;
  t2848 = t2291*t2847;
  t2849 = t2833 + t2848;
  t2896 = -1.*t2862*t2671*t2702;
  t2906 = t2691*t2468*t2702;
  t2907 = t2896 + t2906;
  t2912 = Power(t2907,2);
  t2918 = t2495*t2671*t2702;
  t2919 = -1.*t2691*t2849*t2702;
  t2925 = t2918 + t2919;
  t2926 = Power(t2925,2);
  t2930 = t2912 + t2926;
  t2931 = 1/t2930;
  t2955 = t462*t907*t915;
  t2957 = t1191*t1235;
  t2965 = t2955 + t2957;
  t2993 = -1.*t796*t1717*t907;
  t2994 = t2965*t1733;
  t2995 = t2993 + t2994;
  t3020 = t1191*t462;
  t3030 = -1.*t907*t915*t1235;
  t3033 = t3020 + t3030;
  t3045 = t1983*t2995;
  t3053 = t3033*t2025;
  t3054 = t3045 + t3053;
  t3057 = t1983*t3033;
  t3063 = -1.*t2995*t2025;
  t3064 = t3057 + t3063;
  t3069 = -1.*t2113*t3054;
  t3070 = t2096*t3064;
  t3071 = t3069 + t3070;
  t3081 = t2096*t3054;
  t3082 = t2113*t3064;
  t3083 = t3081 + t3082;
  t3088 = t2250*t3071;
  t3089 = t2190*t3083;
  t3091 = t3088 + t3089;
  t3107 = t2190*t3071;
  t3113 = -1.*t2250*t3083;
  t3114 = t3107 + t3113;
  t3156 = -1.*t1191*t462*t873*t915;
  t3161 = t873*t907*t1235;
  t3166 = t3156 + t3161;
  t3184 = t1191*t796*t1717*t873;
  t3186 = t3166*t1733;
  t3188 = t3184 + t3186;
  t3194 = t462*t873*t907;
  t3195 = t1191*t873*t915*t1235;
  t3197 = t3194 + t3195;
  t3201 = t1983*t3188;
  t3205 = t3197*t2025;
  t3208 = t3201 + t3205;
  t3213 = t1983*t3197;
  t3214 = -1.*t3188*t2025;
  t3215 = t3213 + t3214;
  t3218 = -1.*t2113*t3208;
  t3225 = t2096*t3215;
  t3226 = t3218 + t3225;
  t3232 = t2096*t3208;
  t3239 = t2113*t3215;
  t3241 = t3232 + t3239;
  t3260 = t2250*t3226;
  t3273 = t2190*t3241;
  t3274 = t3260 + t3273;
  t3300 = t2190*t3226;
  t3305 = -1.*t2250*t3241;
  t3306 = t3300 + t3305;
  t3347 = t904*t1191*t462*t915;
  t3359 = -1.*t904*t907*t1235;
  t3380 = t3347 + t3359;
  t3414 = -1.*t904*t1191*t796*t1717;
  t3421 = t3380*t1733;
  t3422 = t3414 + t3421;
  t3432 = -1.*t904*t462*t907;
  t3433 = -1.*t904*t1191*t915*t1235;
  t3435 = t3432 + t3433;
  t3439 = t1983*t3422;
  t3440 = t3435*t2025;
  t3446 = t3439 + t3440;
  t3453 = t1983*t3435;
  t3459 = -1.*t3422*t2025;
  t3470 = t3453 + t3459;
  t3482 = -1.*t2113*t3446;
  t3483 = t2096*t3470;
  t3489 = t3482 + t3483;
  t3491 = t2096*t3446;
  t3494 = t2113*t3470;
  t3499 = t3491 + t3494;
  t3511 = t2250*t3489;
  t3515 = t2190*t3499;
  t3528 = t3511 + t3515;
  t3552 = t2190*t3489;
  t3558 = -1.*t2250*t3499;
  t3564 = t3552 + t3558;
  t2703 = -1.*t2495*t2671*t2702;
  t2850 = t2691*t2849*t2702;
  t2851 = t2703 + t2850;
  t3600 = t2283*t3528;
  t3606 = t2291*t3564;
  t3607 = t3600 + t3606;
  t3323 = t2283*t3274;
  t3327 = t2291*t3306;
  t3329 = t3323 + t3327;
  t3653 = -1.*t1717*t3380;
  t3660 = -1.*t904*t1191*t796*t1733;
  t3662 = t3653 + t3660;
  t3708 = 2.*t3662*t2691;
  t3713 = 2.*t2671*t3607;
  t3740 = t3708 + t3713;
  t3141 = t2283*t3091;
  t3143 = t2291*t3114;
  t3146 = t3141 + t3143;
  t3937 = -1.*t1191*t1717*t915;
  t3958 = -1.*t1191*t796*t462*t1733;
  t3961 = t3937 + t3958;
  t3970 = t1983*t3961;
  t3980 = t1191*t796*t1235*t2025;
  t3990 = t3970 + t3980;
  t4005 = t1191*t796*t1983*t1235;
  t4026 = -1.*t3961*t2025;
  t4036 = t4005 + t4026;
  t4045 = -1.*t2113*t3990;
  t4053 = t2096*t4036;
  t4054 = t4045 + t4053;
  t4076 = t2096*t3990;
  t4081 = t2113*t4036;
  t4083 = t4076 + t4081;
  t4087 = t2250*t4054;
  t4096 = t2190*t4083;
  t4098 = t4087 + t4096;
  t4102 = t2190*t4054;
  t4104 = -1.*t2250*t4083;
  t4118 = t4102 + t4104;
  t4190 = -1.*t796*t873*t907;
  t4191 = -1.*t904*t915;
  t4197 = t4190 + t4191;
  t4222 = t1717*t2326;
  t4224 = t462*t4197*t1733;
  t4227 = t4222 + t4224;
  t4239 = t1983*t4227;
  t4240 = -1.*t4197*t1235*t2025;
  t4243 = t4239 + t4240;
  t4245 = -1.*t1983*t4197*t1235;
  t4255 = -1.*t4227*t2025;
  t4258 = t4245 + t4255;
  t4267 = -1.*t2113*t4243;
  t4268 = t2096*t4258;
  t4270 = t4267 + t4268;
  t4275 = t2096*t4243;
  t4276 = t2113*t4258;
  t4277 = t4275 + t4276;
  t4284 = t2250*t4270;
  t4286 = t2190*t4277;
  t4290 = t4284 + t4286;
  t4296 = t2190*t4270;
  t4300 = -1.*t2250*t4277;
  t4306 = t4296 + t4300;
  t4375 = t1717*t2530;
  t4376 = t462*t1796*t1733;
  t4379 = t4375 + t4376;
  t4382 = t1983*t4379;
  t4385 = -1.*t1796*t1235*t2025;
  t4388 = t4382 + t4385;
  t4396 = -1.*t1983*t1796*t1235;
  t4401 = -1.*t4379*t2025;
  t4418 = t4396 + t4401;
  t4433 = -1.*t2113*t4388;
  t4434 = t2096*t4418;
  t4436 = t4433 + t4434;
  t4441 = t2096*t4388;
  t4442 = t2113*t4418;
  t4447 = t4441 + t4442;
  t4454 = t2250*t4436;
  t4456 = t2190*t4447;
  t4461 = t4454 + t4456;
  t4474 = t2190*t4436;
  t4476 = -1.*t2250*t4447;
  t4483 = t4474 + t4476;
  t4514 = t2283*t4461;
  t4515 = t2291*t4483;
  t4516 = t4514 + t4515;
  t4527 = -1.*t462*t1717*t1796;
  t4528 = t2530*t1733;
  t4533 = t4527 + t4528;
  t4537 = 2.*t2691*t4533;
  t4539 = 2.*t4516*t2671;
  t4540 = t4537 + t4539;
  t4324 = t2283*t4290;
  t4326 = t2291*t4306;
  t4327 = t4324 + t4326;
  t4165 = t2283*t4098;
  t4171 = t2291*t4118;
  t4174 = t4165 + t4171;
  t4606 = t1191*t462*t915;
  t4616 = -1.*t907*t1235;
  t4620 = t4606 + t4616;
  t4623 = t1983*t2748*t1733;
  t4624 = t4620*t2025;
  t4629 = t4623 + t4624;
  t4632 = t1983*t4620;
  t4634 = -1.*t2748*t1733*t2025;
  t4639 = t4632 + t4634;
  t4643 = -1.*t2113*t4629;
  t4644 = t2096*t4639;
  t4646 = t4643 + t4644;
  t4655 = t2096*t4629;
  t4656 = t2113*t4639;
  t4659 = t4655 + t4656;
  t4667 = t2250*t4646;
  t4670 = t2190*t4659;
  t4679 = t4667 + t4670;
  t4684 = t2190*t4646;
  t4686 = -1.*t2250*t4659;
  t4689 = t4684 + t4686;
  t4758 = -1.*t462*t2326;
  t4764 = t1191*t873*t1235;
  t4765 = t4758 + t4764;
  t4767 = t1983*t2356*t1733;
  t4771 = t4765*t2025;
  t4772 = t4767 + t4771;
  t4775 = t1983*t4765;
  t4778 = -1.*t2356*t1733*t2025;
  t4782 = t4775 + t4778;
  t4785 = -1.*t2113*t4772;
  t4786 = t2096*t4782;
  t4787 = t4785 + t4786;
  t4789 = t2096*t4772;
  t4792 = t2113*t4782;
  t4794 = t4789 + t4792;
  t4797 = t2250*t4787;
  t4798 = t2190*t4794;
  t4803 = t4797 + t4798;
  t4805 = t2190*t4787;
  t4806 = -1.*t2250*t4794;
  t4807 = t4805 + t4806;
  t4850 = -1.*t462*t2530;
  t4851 = t4850 + t1591;
  t4857 = t1983*t2554*t1733;
  t4858 = t4851*t2025;
  t4860 = t4857 + t4858;
  t4869 = t1983*t4851;
  t4873 = -1.*t2554*t1733*t2025;
  t4874 = t4869 + t4873;
  t4876 = -1.*t2113*t4860;
  t4877 = t2096*t4874;
  t4878 = t4876 + t4877;
  t4884 = t2096*t4860;
  t4885 = t2113*t4874;
  t4888 = t4884 + t4885;
  t4894 = t2250*t4878;
  t4899 = t2190*t4888;
  t4905 = t4894 + t4899;
  t4912 = t2190*t4878;
  t4918 = -1.*t2250*t4888;
  t4924 = t4912 + t4918;
  t4945 = t2283*t4905;
  t4948 = t2291*t4924;
  t4950 = t4945 + t4948;
  t4971 = -2.*t1717*t2554*t2691;
  t4975 = 2.*t4950*t2671;
  t4979 = t4971 + t4975;
  t4713 = t2283*t4679;
  t4717 = t2291*t4689;
  t4726 = t4713 + t4717;
  t4818 = t2283*t4803;
  t4823 = t2291*t4807;
  t4825 = t4818 + t4823;
  t5033 = t1717*t2492;
  t5034 = -1.*t1191*t796*t1733;
  t5036 = t5033 + t5034;
  t5054 = -1.*t1983*t2113*t5036;
  t5061 = -1.*t2096*t5036*t2025;
  t5066 = t5054 + t5061;
  t5076 = t2096*t1983*t5036;
  t5080 = -1.*t2113*t5036*t2025;
  t5081 = t5076 + t5080;
  t5083 = t2250*t5066;
  t5084 = t2190*t5081;
  t5085 = t5083 + t5084;
  t5092 = t2190*t5066;
  t5093 = -1.*t2250*t5081;
  t5096 = t5092 + t5093;
  t5020 = 0.135*t1717;
  t5021 = -0.049*t1733;
  t5022 = t5020 + t5021;
  t5027 = 0.049*t1717;
  t5028 = t5027 + t1808;
  t2343 = t1717*t2335;
  t2345 = -1.*t2340*t1733;
  t2347 = t2343 + t2345;
  t5151 = -1.*t1983*t2113*t2347;
  t5154 = -1.*t2096*t2347*t2025;
  t5155 = t5151 + t5154;
  t5157 = t2096*t1983*t2347;
  t5161 = -1.*t2113*t2347*t2025;
  t5162 = t5157 + t5161;
  t5164 = t2250*t5155;
  t5165 = t2190*t5162;
  t5167 = t5164 + t5165;
  t5169 = t2190*t5155;
  t5170 = -1.*t2250*t5162;
  t5171 = t5169 + t5170;
  t5188 = t1717*t2537;
  t5190 = -1.*t2504*t1733;
  t5191 = t5188 + t5190;
  t5200 = -1.*t1983*t2113*t5191;
  t5201 = -1.*t2096*t5191*t2025;
  t5204 = t5200 + t5201;
  t5206 = t2096*t1983*t5191;
  t5208 = -1.*t2113*t5191*t2025;
  t5209 = t5206 + t5208;
  t5215 = t2250*t5204;
  t5217 = t2190*t5209;
  t5221 = t5215 + t5217;
  t5226 = t2190*t5204;
  t5229 = -1.*t2250*t5209;
  t5233 = t5226 + t5229;
  t5246 = t2283*t5221;
  t5248 = t2291*t5233;
  t5249 = t5246 + t5248;
  t5256 = 2.*t2691*t2541;
  t5260 = 2.*t5249*t2671;
  t5261 = t5256 + t5260;
  t5179 = t2283*t5167;
  t5180 = t2291*t5171;
  t5182 = t5179 + t5180;
  t5114 = t2283*t5085;
  t5115 = t2291*t5096;
  t5116 = t5114 + t5115;
  t5312 = -1.*t1983*t2730;
  t5313 = -1.*t2748*t2025;
  t5314 = t5312 + t5313;
  t5318 = t2113*t5314;
  t5319 = t5318 + t2785;
  t5321 = t2096*t5314;
  t5323 = -1.*t2113*t2783;
  t5324 = t5321 + t5323;
  t5327 = -1.*t2250*t5319;
  t5328 = t2190*t5324;
  t5330 = t5327 + t5328;
  t5332 = t2190*t5319;
  t5333 = t2250*t5324;
  t5334 = t5332 + t5333;
  t5303 = 0.049*t1983;
  t5305 = t5303 + t2026;
  t5308 = -0.09*t1983;
  t5309 = -0.049*t2025;
  t5310 = t5308 + t5309;
  t5348 = -1.*t1983*t2351;
  t5349 = -1.*t2356*t2025;
  t5350 = t5348 + t5349;
  t5359 = t2113*t5350;
  t5360 = t5359 + t2376;
  t5369 = t2096*t5350;
  t5372 = -1.*t2113*t2371;
  t5373 = t5369 + t5372;
  t5375 = -1.*t2250*t5360;
  t5376 = t2190*t5373;
  t5379 = t5375 + t5376;
  t5386 = t2190*t5360;
  t5387 = t2250*t5373;
  t5388 = t5386 + t5387;
  t5413 = -1.*t1983*t2541;
  t5414 = -1.*t2554*t2025;
  t5415 = t5413 + t5414;
  t5419 = t2113*t5415;
  t5420 = t5419 + t2605;
  t5422 = t2096*t5415;
  t5423 = -1.*t2113*t2603;
  t5424 = t5422 + t5423;
  t5426 = -1.*t2250*t5420;
  t5427 = t2190*t5424;
  t5428 = t5426 + t5427;
  t5430 = t2190*t5420;
  t5431 = t2250*t5424;
  t5432 = t5430 + t5431;
  t5434 = t2291*t5428;
  t5435 = t2283*t5432;
  t5436 = t5434 + t5435;
  t5336 = t2291*t5330;
  t5337 = t2283*t5334;
  t5338 = t5336 + t5337;
  t5390 = t2291*t5379;
  t5393 = t2283*t5388;
  t5395 = t5390 + t5393;
  t5474 = -1.*t2096*t2769;
  t5475 = t5474 + t5323;
  t5477 = -1.*t2250*t2793;
  t5480 = t2190*t5475;
  t5482 = t5477 + t5480;
  t5485 = t2250*t5475;
  t5486 = t2839 + t5485;
  t5464 = -0.21*t2096;
  t5465 = -0.049*t2113;
  t5466 = t5464 + t5465;
  t5468 = 0.049*t2096;
  t5469 = t5468 + t2121;
  t5505 = -1.*t2096*t2363;
  t5506 = t5505 + t5372;
  t5508 = -1.*t2250*t2379;
  t5509 = t2190*t5506;
  t5510 = t5508 + t5509;
  t5512 = t2250*t5506;
  t5513 = t2404 + t5512;
  t5527 = -1.*t2096*t2576;
  t5528 = t5527 + t5423;
  t5531 = -1.*t2250*t2612;
  t5532 = t2190*t5528;
  t5533 = t5531 + t5532;
  t5535 = t2250*t5528;
  t5536 = t2659 + t5535;
  t5538 = t2291*t5533;
  t5539 = t2283*t5536;
  t5540 = t5538 + t5539;
  t5490 = t2291*t5482;
  t5491 = t2283*t5486;
  t5493 = t5490 + t5491;
  t5515 = t2291*t5510;
  t5516 = t2283*t5513;
  t5517 = t5515 + t5516;
  t5568 = -1.*t2190*t2824;
  t5569 = t5477 + t5568;
  t5561 = 0.00159*t2190;
  t5562 = t5561 + t2264;
  t5564 = -0.27068*t2190;
  t5565 = -0.00159*t2250;
  t5566 = t5564 + t5565;
  t5584 = -1.*t2190*t2386;
  t5585 = t5508 + t5584;
  t2415 = t2283*t2407;
  t5603 = -1.*t2190*t2647;
  t5605 = t5531 + t5603;
  t5610 = t2291*t5605;
  t5611 = t2283*t2663;
  t5613 = t5610 + t5611;
  t5573 = t2291*t5569;
  t5574 = t2283*t2847;
  t5575 = t5573 + t5574;
  t5589 = t2291*t5585;
  t5590 = t5589 + t2415;
  t5578 = -1.*t2291*t2847;
  t5642 = -0.70544*t2283;
  t5643 = 0.01841*t2291;
  t5644 = t5642 + t5643;
  t5647 = -0.01841*t2283;
  t5649 = t5647 + t2292;
  t2412 = -1.*t2291*t2396;
  t2417 = t2412 + t2415;
  t5595 = -1.*t2291*t2407;
  t5618 = -1.*t2291*t2663;
  t5677 = -1.*t2291*t2653;
  t5678 = t5677 + t5611;
  t5651 = -1.*t2291*t2831;
  t5653 = t5651 + t5574;
  p_output1[0]=1.;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=1.;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=1.;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=t1666*t1743 + 0.1305*(t1666*t1717 - 1.*t1733*t1796) + t1796*t1811 + t1939*t2028 + t2058*t2089 + t2126*t2148 + t2157*t2179 + t2252*t2259 + t2269*t2277 + t2294*t2298 + t2305*t2309 - 1.11344*(-1.*t2291*t2298 + t2283*t2309) - 0.02159*t2320 + 0.135*t1090*t543 + 0.135*t1191*t1235*t904;
  p_output1[14]=t1743*t2335 + t1811*t2340 + 0.1305*t2347 + t2028*t2351 + t2089*t2356 + t2126*t2363 + t2157*t2371 + t2252*t2379 + t2269*t2386 + t2294*t2396 + t2305*t2407 - 1.11344*t2417 - 0.02159*t2468 + 0.135*t2326*t543 + 0.135*t1191*t1235*t873;
  p_output1[15]=t2851*(-1.*(-1.*t1666*t1717 + t1733*t1796)*t2671*t2702 + t2320*t2691*t2702 - 0.5*t2468*t2691*t2863*t2872 + 0.5*t2671*t2862*t2863*t2872)*t2931 + (t2468*t2495*t2702 - 1.*t2702*t2849*t2862 - 0.5*t2495*t2671*t2863*t2872 + 0.5*t2691*t2849*t2863*t2872)*t2907*t2931;
  p_output1[16]=-0.135*t1191*t1235 + t1743*t2965 + t2028*t2995 + t2089*t3033 + t2126*t3054 + t2157*t3064 + t2252*t3071 + t2269*t3083 + t2294*t3091 + t2305*t3114 - 1.11344*(-1.*t2291*t3091 + t2283*t3114) - 0.02159*t3146 - 1.*t1811*t796*t907 + 0.1305*(t1717*t2965 + t1733*t796*t907) + 0.135*t543*t907*t915;
  p_output1[17]=t1743*t3166 + t2028*t3188 + t2089*t3197 + t2126*t3208 + t2157*t3215 + t2252*t3226 + t2269*t3241 + t2294*t3274 + t2305*t3306 - 1.11344*(-1.*t2291*t3274 + t2283*t3306) - 0.02159*t3329 + t1191*t1811*t796*t873 + 0.1305*(t1717*t3166 - 1.*t1191*t1733*t796*t873) - 0.135*t1235*t873*t907 - 0.135*t1191*t543*t873*t915;
  p_output1[18]=t1743*t3380 + t2028*t3422 + t2089*t3435 + t2126*t3446 + t2157*t3470 + t2252*t3489 + t2269*t3499 + t2294*t3528 + t2305*t3564 - 1.11344*(-1.*t2291*t3528 + t2283*t3564) - 0.02159*t3607 - 1.*t1191*t1811*t796*t904 + 0.1305*(t1717*t3380 + t1191*t1733*t796*t904) + 0.135*t1235*t904*t907 + 0.135*t1191*t543*t904*t915;
  p_output1[19]=t2851*t2931*(t2691*t2702*t3329 - 1.*t2702*t2862*t3607 + t2468*t2702*t3662 - 0.5*t2468*t2691*t2863*t3740 + 0.5*t2671*t2862*t2863*t3740 - 1.*t2671*t2702*(-1.*t1717*t3166 + t1191*t1733*t796*t873)) + t2907*t2931*(-1.*t2691*t2702*t3146 + t2495*t2702*t3607 - 1.*t2702*t2849*t3662 - 0.5*t2495*t2671*t2863*t3740 + 0.5*t2691*t2849*t2863*t3740 + t2671*t2702*(-1.*t1717*t2965 - 1.*t1733*t796*t907));
  p_output1[20]=t2028*t3961 + t2126*t3990 + t2157*t4036 + t2252*t4054 + t2269*t4083 + t2294*t4098 + t2305*t4118 - 1.11344*(-1.*t2291*t4098 + t2283*t4118) - 0.02159*t4174 + t1191*t1235*t2089*t796 - 1.*t1191*t1743*t462*t796 - 0.135*t1191*t543*t796 - 1.*t1191*t1811*t915 + 0.1305*(-1.*t1191*t1717*t462*t796 + t1191*t1733*t915);
  p_output1[21]=t1811*t2326 - 1.*t1235*t2089*t4197 + t2028*t4227 + t2126*t4243 + t2157*t4258 + t2252*t4270 + t2269*t4277 + t2294*t4290 + t2305*t4306 - 1.11344*(-1.*t2291*t4290 + t2283*t4306) - 0.02159*t4327 + t1743*t4197*t462 + 0.1305*(-1.*t1733*t2326 + t1717*t4197*t462) + 0.135*t4197*t543;
  p_output1[22]=-1.*t1235*t1796*t2089 + t1811*t2530 + t2028*t4379 + t2126*t4388 + t2157*t4418 + t2252*t4436 + t2269*t4447 + t2294*t4461 + t2305*t4483 - 1.11344*(-1.*t2291*t4461 + t2283*t4483) - 0.02159*t4516 + t1743*t1796*t462 + 0.1305*(-1.*t1733*t2530 + t1717*t1796*t462) + 0.135*t1796*t543;
  p_output1[23]=t2851*t2931*(t2691*t2702*t4327 - 1.*t2702*t2862*t4516 + t2468*t2702*t4533 - 0.5*t2468*t2691*t2863*t4540 + 0.5*t2671*t2862*t2863*t4540 - 1.*t2671*t2702*(t1733*t2326 - 1.*t1717*t4197*t462)) + t2907*t2931*(-1.*t2691*t2702*t4174 + t2495*t2702*t4516 - 1.*t2702*t2849*t4533 - 0.5*t2495*t2671*t2863*t4540 + 0.5*t2691*t2849*t2863*t4540 + t2671*t2702*(t1191*t1717*t462*t796 - 1.*t1191*t1733*t915));
  p_output1[24]=0.1305*t1717*t2748 + t1743*t2748 + t1733*t2028*t2748 + t2089*t4620 + t2126*t4629 + t2157*t4639 + t2252*t4646 + t2269*t4659 + t2294*t4679 + t2305*t4689 - 1.11344*(-1.*t2291*t4679 + t2283*t4689) - 0.02159*t4726 - 0.135*t462*t907 - 0.135*t1191*t1235*t915;
  p_output1[25]=0.135*t1235*t2326 + 0.1305*t1717*t2356 + t1743*t2356 + t1733*t2028*t2356 + t2089*t4765 + t2126*t4772 + t2157*t4782 + t2252*t4787 + t2269*t4794 + t2294*t4803 + t2305*t4807 - 1.11344*(-1.*t2291*t4803 + t2283*t4807) - 0.02159*t4825 + 0.135*t1191*t462*t873;
  p_output1[26]=0.135*t1235*t2530 + 0.1305*t1717*t2554 + t1743*t2554 + t1733*t2028*t2554 + t2089*t4851 + t2126*t4860 + t2157*t4874 + t2252*t4878 + t2269*t4888 + t2294*t4905 + t2305*t4924 - 1.11344*(-1.*t2291*t4905 + t2283*t4924) - 0.02159*t4950 - 0.135*t1191*t462*t904;
  p_output1[27]=t2907*t2931*(-1.*t1717*t2671*t2702*t2748 + t1717*t2554*t2702*t2849 - 1.*t2691*t2702*t4726 + t2495*t2702*t4950 - 0.5*t2495*t2671*t2863*t4979 + 0.5*t2691*t2849*t2863*t4979) + t2851*t2931*(-1.*t1717*t2468*t2554*t2702 + t1717*t2356*t2671*t2702 + t2691*t2702*t4825 - 1.*t2702*t2862*t4950 - 0.5*t2468*t2691*t2863*t4979 + 0.5*t2671*t2862*t2863*t4979);
  p_output1[28]=t2492*t5028 + t2028*t5036 + t1983*t2126*t5036 - 1.*t2025*t2157*t5036 + t2252*t5066 + t2269*t5081 + t2294*t5085 + t2305*t5096 - 1.11344*(-1.*t2291*t5085 + t2283*t5096) - 0.02159*t5116 + t1191*t5022*t796 + 0.1305*(-1.*t1733*t2492 - 1.*t1191*t1717*t796);
  p_output1[29]=0.1305*(-1.*t1733*t2335 - 1.*t1717*t2340) + t2028*t2347 + t1983*t2126*t2347 - 1.*t2025*t2157*t2347 + t2340*t5022 + t2335*t5028 + t2252*t5155 + t2269*t5162 + t2294*t5167 + t2305*t5171 - 1.11344*(-1.*t2291*t5167 + t2283*t5171) - 0.02159*t5182;
  p_output1[30]=0.1305*(-1.*t1717*t2504 - 1.*t1733*t2537) + t2504*t5022 + t2537*t5028 + t2028*t5191 + t1983*t2126*t5191 - 1.*t2025*t2157*t5191 + t2252*t5204 + t2269*t5209 + t2294*t5221 + t2305*t5233 - 1.11344*(-1.*t2291*t5221 + t2283*t5233) - 0.02159*t5249;
  p_output1[31]=t2907*t2931*(t2671*t2702*t2730 - 1.*t2541*t2702*t2849 - 1.*t2691*t2702*t5116 + t2495*t2702*t5249 - 0.5*t2495*t2671*t2863*t5261 + 0.5*t2691*t2849*t2863*t5261) + t2851*t2931*(t2468*t2541*t2702 - 1.*t2351*t2671*t2702 + t2691*t2702*t5182 - 1.*t2702*t2862*t5249 - 0.5*t2468*t2691*t2863*t5261 + 0.5*t2671*t2862*t2863*t5261);
  p_output1[32]=t2126*t2783 + t2748*t5305 + t2730*t5310 + t2157*t5314 + t2269*t5319 + t2252*t5324 + t2305*t5330 + t2294*t5334 - 1.11344*(t2283*t5330 - 1.*t2291*t5334) - 0.02159*t5338;
  p_output1[33]=t2126*t2371 + t2356*t5305 + t2351*t5310 + t2157*t5350 + t2269*t5360 + t2252*t5373 + t2305*t5379 + t2294*t5388 - 1.11344*(t2283*t5379 - 1.*t2291*t5388) - 0.02159*t5395;
  p_output1[34]=t2126*t2603 + t2554*t5305 + t2541*t5310 + t2157*t5415 + t2269*t5420 + t2252*t5424 + t2305*t5428 + t2294*t5432 - 1.11344*(t2283*t5428 - 1.*t2291*t5432) - 0.02159*t5436;
  p_output1[35]=t2907*t2931*(-1.*t2691*t2702*t5338 + t2495*t2702*t5436 - 1.*t2495*t2696*t2863*t5436 + t2671*t2691*t2849*t2863*t5436) + t2851*t2931*(t2691*t2702*t5395 - 1.*t2702*t2862*t5436 - 1.*t2468*t2671*t2691*t2863*t5436 + t2696*t2862*t2863*t5436);
  p_output1[36]=t2269*t2793 + t2769*t5466 + t2783*t5469 + t2252*t5475 + t2305*t5482 + t2294*t5486 - 1.11344*(t2283*t5482 - 1.*t2291*t5486) - 0.02159*t5493;
  p_output1[37]=t2269*t2379 + t2363*t5466 + t2371*t5469 + t2252*t5506 + t2305*t5510 + t2294*t5513 - 1.11344*(t2283*t5510 - 1.*t2291*t5513) - 0.02159*t5517;
  p_output1[38]=t2269*t2612 + t2576*t5466 + t2603*t5469 + t2252*t5528 + t2305*t5533 + t2294*t5536 - 1.11344*(t2283*t5533 - 1.*t2291*t5536) - 0.02159*t5540;
  p_output1[39]=t2907*t2931*(-1.*t2691*t2702*t5493 + t2495*t2702*t5540 - 1.*t2495*t2696*t2863*t5540 + t2671*t2691*t2849*t2863*t5540) + t2851*t2931*(t2691*t2702*t5517 - 1.*t2702*t2862*t5540 - 1.*t2468*t2671*t2691*t2863*t5540 + t2696*t2862*t2863*t5540);
  p_output1[40]=t2294*t2847 + t2793*t5562 + t2824*t5566 + t2305*t5569 - 0.02159*t5575 - 1.11344*(t2283*t5569 + t5578);
  p_output1[41]=t2294*t2407 + t2379*t5562 + t2386*t5566 + t2305*t5585 - 0.02159*t5590 - 1.11344*(t2283*t5585 + t5595);
  p_output1[42]=t2294*t2663 + t2612*t5562 + t2647*t5566 + t2305*t5605 - 0.02159*t5613 - 1.11344*(t2283*t5605 + t5618);
  p_output1[43]=t2907*t2931*(-1.*t2691*t2702*t5575 + t2495*t2702*t5613 - 1.*t2495*t2696*t2863*t5613 + t2671*t2691*t2849*t2863*t5613) + t2851*t2931*(t2691*t2702*t5590 - 1.*t2702*t2862*t5613 - 1.*t2468*t2671*t2691*t2863*t5613 + t2696*t2862*t2863*t5613);
  p_output1[44]=-1.11344*(-1.*t2283*t2831 + t5578) + t2831*t5644 + t2847*t5649 - 0.02159*t5653;
  p_output1[45]=-0.02159*t2417 - 1.11344*(-1.*t2283*t2396 + t5595) + t2396*t5644 + t2407*t5649;
  p_output1[46]=-1.11344*(-1.*t2283*t2653 + t5618) + t2653*t5644 + t2663*t5649 - 0.02159*t5678;
  p_output1[47]=t2907*t2931*(-1.*t2691*t2702*t5653 + t2495*t2702*t5678 - 1.*t2495*t2696*t2863*t5678 + t2671*t2691*t2849*t2863*t5678) + t2851*t2931*(t2417*t2691*t2702 - 1.*t2702*t2862*t5678 - 1.*t2468*t2671*t2691*t2863*t5678 + t2696*t2862*t2863*t5678);
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 4, (mwSize) 22, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#endif // MATLAB_MEX_FILE

namespace SymFunction
{

void J_leftPoint_constraint_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}




