/*
 * Automatically Generated from Mathematica.
 * Sun 7 Nov 2021 14:28:36 GMT-08:00
 */

#ifdef MATLAB_MEX_FILE
// No need to include header
#else
#include "ya1_SLIP.hh"
#endif

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t87;
  double t104;
  double t35;
  double t66;
  double t141;
  double t143;
  double t144;
  double t147;
  double t149;
  double t156;
  double t158;
  double t167;
  double t171;
  double t172;
  double t176;
  double t186;
  double t98;
  double t113;
  double t120;
  double t121;
  double t123;
  double t130;
  double t135;
  double t166;
  double t223;
  double t228;
  double t242;
  double t179;
  double t180;
  double t183;
  double t191;
  double t194;
  double t201;
  double t269;
  double t271;
  double t274;
  double t278;
  double t277;
  double t284;
  double t285;
  double t286;
  double t287;
  double t302;
  double t304;
  double t329;
  double t337;
  double t340;
  double t345;
  double t352;
  double t361;
  double t379;
  double t425;
  double t432;
  double t436;
  double t450;
  double t459;
  double t468;
  double t530;
  double t531;
  double t534;
  double t542;
  double t464;
  double t472;
  double t474;
  double t480;
  double t481;
  double t482;
  double t484;
  double t485;
  double t538;
  double t488;
  double t494;
  double t498;
  double t628;
  double t552;
  double t514;
  double t517;
  double t520;
  double t691;
  double t673;
  double t546;
  double t712;
  double t555;
  double t789;
  double t608;
  double t743;
  double t635;
  double t885;
  double t888;
  double t889;
  double t901;
  double t1013;
  double t1065;
  double t1066;
  double t1075;
  double t1079;
  double t1080;
  double t1097;
  double t1078;
  double t1099;
  double t1110;
  double t1112;
  double t1115;
  double t1116;
  double t1046;
  double t997;
  double t1111;
  double t1119;
  double t1120;
  double t1130;
  double t1137;
  double t1140;
  double t1012;
  double t1123;
  double t1141;
  double t1142;
  double t996;
  double t1169;
  double t1171;
  double t1173;
  double t1054;
  double t1183;
  double t1039;
  double t1152;
  double t1195;
  double t1144;
  double t1222;
  double t913;
  double t1332;
  double t1333;
  double t1336;
  double t1338;
  double t1346;
  double t1362;
  double t1363;
  double t1367;
  double t1374;
  double t1375;
  double t1376;
  double t1388;
  double t1393;
  double t1395;
  double t1399;
  double t1403;
  double t1406;
  double t1407;
  double t1410;
  double t1413;
  double t1416;
  double t1421;
  double t1431;
  double t1437;
  double t1438;
  double t1449;
  double t1450;
  double t1457;
  double t1461;
  double t1464;
  double t529;
  double t535;
  double t547;
  double t551;
  double t560;
  double t562;
  double t566;
  double t1505;
  double t1510;
  double t596;
  double t603;
  double t609;
  double t618;
  double t636;
  double t639;
  double t640;
  double t1511;
  double t1513;
  double t1515;
  double t660;
  double t664;
  double t684;
  double t686;
  double t698;
  double t701;
  double t702;
  double t1519;
  double t1521;
  double t1522;
  double t732;
  double t745;
  double t752;
  double t764;
  double t776;
  double t785;
  double t792;
  double t807;
  double t820;
  double t832;
  double t834;
  double t845;
  double t900;
  double t920;
  double t927;
  double t929;
  double t930;
  double t1635;
  double t1636;
  double t1641;
  double t1648;
  double t1650;
  double t1653;
  double t1654;
  double t1656;
  double t1658;
  double t1660;
  double t1678;
  double t1681;
  double t1686;
  double t1688;
  double t1695;
  double t1706;
  double t1707;
  double t1750;
  double t1751;
  double t1755;
  double t1760;
  double t1775;
  double t1782;
  double t1785;
  double t1793;
  double t1907;
  double t1912;
  double t1914;
  double t1915;
  double t1917;
  double t1922;
  double t1925;
  double t1937;
  double t1951;
  double t1996;
  double t1997;
  double t2000;
  double t2006;
  double t2013;
  double t2021;
  double t2022;
  double t1959;
  double t2161;
  double t2014;
  double t2035;
  double t2169;
  double t2043;
  double t2047;
  double t2055;
  double t2059;
  double t2060;
  double t2065;
  double t2067;
  double t2068;
  double t2074;
  double t2076;
  double t2079;
  double t2080;
  double t2082;
  double t2085;
  double t2104;
  double t2105;
  double t2114;
  double t2115;
  double t2116;
  double t2119;
  double t2124;
  double t2125;
  double t2129;
  double t2134;
  double t2191;
  double t2196;
  double t2199;
  double t2202;
  double t2208;
  double t2209;
  double t2210;
  double t2216;
  double t2220;
  double t1307;
  double t1321;
  double t2332;
  double t2344;
  double t2356;
  double t2357;
  double t2358;
  double t2362;
  double t2365;
  double t2334;
  double t2345;
  double t2347;
  double t2351;
  double t2371;
  double t2372;
  double t2375;
  double t2380;
  double t2381;
  double t2384;
  double t2385;
  double t2394;
  double t2396;
  double t2397;
  double t2410;
  double t2420;
  double t2413;
  double t2415;
  double t2418;
  double t2425;
  double t2428;
  double t2432;
  double t2448;
  double t2450;
  double t2453;
  double t2460;
  double t2459;
  double t2461;
  double t2469;
  double t2470;
  double t2473;
  double t2476;
  double t2477;
  double t2483;
  double t2487;
  double t2489;
  double t2494;
  double t2498;
  double t2500;
  double t2504;
  double t2536;
  double t2538;
  double t2539;
  double t2542;
  double t2543;
  double t2547;
  double t2597;
  double t2598;
  double t2601;
  double t2608;
  double t2546;
  double t2549;
  double t2550;
  double t2551;
  double t2564;
  double t2568;
  double t2570;
  double t2571;
  double t2615;
  double t2575;
  double t2576;
  double t2577;
  double t2651;
  double t2607;
  double t2580;
  double t2582;
  double t2586;
  double t2699;
  double t2679;
  double t2617;
  double t2716;
  double t2611;
  double t2757;
  double t2635;
  double t2729;
  double t2652;
  double t2815;
  double t2816;
  double t2817;
  double t2826;
  double t2888;
  double t2935;
  double t2936;
  double t2944;
  double t2928;
  double t2931;
  double t2933;
  double t2934;
  double t2945;
  double t2946;
  double t2955;
  double t2957;
  double t2958;
  double t2895;
  double t2921;
  double t2953;
  double t2967;
  double t2973;
  double t2979;
  double t2980;
  double t2982;
  double t2903;
  double t2976;
  double t2983;
  double t2986;
  double t2920;
  double t3020;
  double t3027;
  double t3028;
  double t2885;
  double t3033;
  double t2893;
  double t2995;
  double t3059;
  double t3003;
  double t3041;
  double t2827;
  double t3175;
  double t3181;
  double t3185;
  double t3191;
  double t3192;
  double t3215;
  double t3223;
  double t3225;
  double t3226;
  double t3228;
  double t3234;
  double t3246;
  double t3247;
  double t3250;
  double t3251;
  double t3252;
  double t3253;
  double t3256;
  double t3259;
  double t3265;
  double t3270;
  double t3276;
  double t3281;
  double t3283;
  double t3289;
  double t3293;
  double t3294;
  double t3311;
  double t3313;
  double t3314;
  double t2596;
  double t2603;
  double t2612;
  double t2613;
  double t2618;
  double t2622;
  double t2626;
  double t3338;
  double t3340;
  double t2629;
  double t2634;
  double t2644;
  double t2650;
  double t2661;
  double t2663;
  double t2664;
  double t3341;
  double t3346;
  double t3348;
  double t2670;
  double t2671;
  double t2682;
  double t2686;
  double t2700;
  double t2711;
  double t2713;
  double t3353;
  double t3356;
  double t3358;
  double t2719;
  double t2733;
  double t2737;
  double t2738;
  double t2749;
  double t2754;
  double t2760;
  double t2768;
  double t2775;
  double t2780;
  double t2786;
  double t2792;
  double t2820;
  double t2829;
  double t2834;
  double t2836;
  double t2843;
  double t3491;
  double t3492;
  double t3495;
  double t3519;
  double t3520;
  double t3524;
  double t3527;
  double t3530;
  double t3535;
  double t3537;
  double t3545;
  double t3546;
  double t3548;
  double t3569;
  double t3573;
  double t3582;
  double t3585;
  double t3599;
  double t3603;
  double t3606;
  double t3609;
  double t3619;
  double t3622;
  double t3623;
  double t3625;
  double t3628;
  double t3630;
  double t3632;
  double t3637;
  double t3657;
  double t3658;
  double t3659;
  double t3661;
  double t3663;
  double t3669;
  double t3674;
  double t3675;
  double t3507;
  double t3785;
  double t3789;
  double t3790;
  double t3826;
  double t3827;
  double t3828;
  double t3835;
  double t3844;
  double t3852;
  double t3861;
  double t3836;
  double t3838;
  double t3840;
  double t3875;
  double t3881;
  double t3885;
  double t3888;
  double t3889;
  double t3895;
  double t3897;
  double t3899;
  double t3916;
  double t3919;
  double t3920;
  double t3925;
  double t3931;
  double t3936;
  double t3939;
  double t3951;
  double t3985;
  double t3988;
  double t3994;
  double t3995;
  double t3997;
  double t4004;
  double t4005;
  double t4009;
  double t4124;
  double t4131;
  double t4134;
  double t4136;
  double t4138;
  double t4149;
  double t4151;
  double t4154;
  double t4167;
  double t4172;
  double t4174;
  double t4175;
  double t4176;
  double t4179;
  double t4181;
  double t4183;
  double t4190;
  double t4193;
  double t4194;
  double t4196;
  double t4197;
  double t4199;
  double t4200;
  double t4202;
  double t4212;
  double t4213;
  double t4214;
  double t4216;
  double t4218;
  double t4225;
  double t4226;
  double t4227;
  double t4254;
  double t4263;
  double t4268;
  double t4271;
  double t4274;
  double t4283;
  double t4284;
  double t4285;
  double t4129;
  double t4375;
  double t4378;
  double t4394;
  double t4395;
  double t4396;
  double t4380;
  double t4384;
  double t4388;
  double t4413;
  double t4414;
  double t4416;
  double t4417;
  double t4420;
  double t4423;
  double t4424;
  double t4425;
  double t4440;
  double t4444;
  double t4447;
  double t4448;
  double t4457;
  double t4464;
  double t4467;
  double t4468;
  double t4488;
  double t4490;
  double t4492;
  double t4496;
  double t4497;
  double t4501;
  double t4503;
  double t4512;
  double t4530;
  double t4531;
  double t4533;
  double t4534;
  double t4535;
  double t4537;
  double t4540;
  double t4541;
  double t4628;
  double t4632;
  double t4633;
  double t4634;
  double t4638;
  double t4639;
  double t4651;
  double t4652;
  double t4654;
  double t4657;
  double t4681;
  double t4687;
  double t4688;
  double t4693;
  double t4700;
  double t4703;
  double t4707;
  double t4731;
  double t4733;
  double t4734;
  double t4735;
  double t4737;
  double t4742;
  double t4743;
  double t4745;
  double t4824;
  double t4825;
  double t4826;
  double t4827;
  double t4829;
  double t4830;
  double t4831;
  double t4834;
  double t4836;
  double t4850;
  double t4851;
  double t4852;
  double t4857;
  double t4861;
  double t4867;
  double t4868;
  double t4837;
  double t4946;
  double t4865;
  double t4869;
  double t4954;
  double t4874;
  double t4877;
  double t4878;
  double t4880;
  double t4881;
  double t4882;
  double t4884;
  double t4888;
  double t4889;
  double t4893;
  double t4897;
  double t4898;
  double t4900;
  double t4902;
  double t4912;
  double t4914;
  double t4915;
  double t4918;
  double t4921;
  double t4922;
  double t4924;
  double t4925;
  double t4926;
  double t4931;
  double t4974;
  double t4975;
  double t4982;
  double t4983;
  double t4986;
  double t4991;
  double t4992;
  double t4997;
  double t4999;
  double t3146;
  double t3156;
  t87 = Cos(var1[15]);
  t104 = Sin(var1[15]);
  t35 = Cos(var1[4]);
  t66 = Cos(var1[5]);
  t141 = Sin(var1[14]);
  t143 = Sin(var1[4]);
  t144 = t141*t143;
  t147 = Cos(var1[14]);
  t149 = Sin(var1[5]);
  t156 = -1.*t147*t35*t149;
  t158 = t144 + t156;
  t167 = Cos(var1[16]);
  t171 = -1.*t35*t66*t104;
  t172 = t87*t158;
  t176 = t171 + t172;
  t186 = Sin(var1[16]);
  t98 = -0.135*t87;
  t113 = -0.049*t104;
  t120 = t98 + t113;
  t121 = t35*t66*t120;
  t123 = 0.049*t87;
  t130 = -0.135*t104;
  t135 = t123 + t130;
  t166 = t135*t158;
  t223 = -1.*t87*t35*t66;
  t228 = -1.*t104*t158;
  t242 = t223 + t228;
  t179 = -1.*t167;
  t180 = 1. + t179;
  t183 = -0.049*t180;
  t191 = -0.09*t186;
  t194 = t183 + t191;
  t201 = t194*t176;
  t269 = Cos(var1[17]);
  t271 = -1.*t269;
  t274 = 1. + t271;
  t278 = Sin(var1[17]);
  t277 = -0.049*t274;
  t284 = -0.21*t278;
  t285 = t277 + t284;
  t286 = t167*t285*t176;
  t287 = -0.21*t274;
  t302 = 0.049*t278;
  t304 = t287 + t302;
  t329 = -1.*t186*t304*t176;
  t337 = -1.*t269*t186*t176;
  t340 = -1.*t167*t278*t176;
  t345 = t337 + t340;
  t352 = t167*t269*t176;
  t361 = -1.*t186*t278*t176;
  t379 = t352 + t361;
  t425 = -1.*var1[17];
  t432 = 0.226893 + t425;
  t436 = Cos(t432);
  t450 = -1.*t436;
  t459 = 1. + t450;
  t468 = Sin(t432);
  t530 = Cos(var1[20]);
  t531 = -1.*t530;
  t534 = 1. + t531;
  t542 = Sin(var1[20]);
  t464 = -0.70544*t459;
  t472 = -0.01841*t468;
  t474 = t464 + t472;
  t480 = t474*t345;
  t481 = 0.01841*t459;
  t482 = -0.70544*t468;
  t484 = t481 + t482;
  t485 = t484*t379;
  t538 = 0.07769774964800001*t534;
  t488 = t468*t345;
  t494 = t436*t379;
  t498 = t488 + t494;
  t628 = -0.0004284921280000001*t534;
  t552 = 0.005481192614*t534;
  t514 = t436*t345;
  t517 = -1.*t468*t379;
  t520 = t514 + t517;
  t691 = -0.077936*t542;
  t673 = -0.996943*t542;
  t546 = -0.005498*t542;
  t712 = -0.005481192614*t534;
  t555 = 0.077936*t542;
  t789 = -0.07769774964800001*t534;
  t608 = 0.005498*t542;
  t743 = 0.0004284921280000001*t534;
  t635 = 0.996943*t542;
  t885 = Cos(var1[21]);
  t888 = -1.*t885;
  t889 = 1. + t888;
  t901 = Sin(var1[21]);
  t1013 = 0.07769774964800001*t542;
  t1065 = t147*t143;
  t1066 = t35*t141*t149;
  t1075 = t1065 + t1066;
  t1079 = t87*t35*t66;
  t1080 = t104*t158;
  t1097 = t1079 + t1080;
  t1078 = t186*t1075;
  t1099 = t167*t1097;
  t1110 = t1078 + t1099;
  t1112 = t167*t1075;
  t1115 = -1.*t186*t1097;
  t1116 = t1112 + t1115;
  t1046 = -0.0004284921280000001*t542;
  t997 = 0.005481192614*t542;
  t1111 = -1.*t278*t1110;
  t1119 = t269*t1116;
  t1120 = t1111 + t1119;
  t1130 = t269*t1110;
  t1137 = t278*t1116;
  t1140 = t1130 + t1137;
  t1012 = -0.005498*t530;
  t1123 = t468*t1120;
  t1141 = t436*t1140;
  t1142 = t1123 + t1141;
  t996 = 0.077936*t530;
  t1169 = t436*t1120;
  t1171 = -1.*t468*t1140;
  t1173 = t1169 + t1171;
  t1054 = 0.005498*t530;
  t1183 = -0.07769774964800001*t542;
  t1039 = 0.996943*t530;
  t1152 = -0.077936*t530;
  t1195 = -0.005481192614*t542;
  t1144 = -0.996943*t530;
  t1222 = 0.0004284921280000001*t542;
  t913 = -1.11344*t901;
  t1332 = 0.135*t147*t143;
  t1333 = 0.135*t35*t141*t149;
  t1336 = -1.*t141*t143;
  t1338 = t147*t35*t149;
  t1346 = t1336 + t1338;
  t1362 = -1.*t87;
  t1363 = 1. + t1362;
  t1367 = -0.135*t1363;
  t1374 = 0.049*t104;
  t1375 = t1367 + t1374;
  t1376 = t1375*t1075;
  t1388 = -0.09*t180;
  t1393 = 0.049*t186;
  t1395 = t1388 + t1393;
  t1399 = t1395*t1346;
  t1403 = t104*t194*t1075;
  t1406 = t186*t1346;
  t1407 = t167*t104*t1075;
  t1410 = t1406 + t1407;
  t1413 = t167*t1346;
  t1416 = -1.*t104*t186*t1075;
  t1421 = t1413 + t1416;
  t1431 = t285*t1410;
  t1437 = t304*t1421;
  t1438 = -1.*t278*t1410;
  t1449 = t269*t1421;
  t1450 = t1438 + t1449;
  t1457 = t269*t1410;
  t1461 = t278*t1421;
  t1464 = t1457 + t1461;
  t529 = 2.1934241414728571e-7*var1[20];
  t535 = -0.000033783761634830594*t534;
  t547 = t538 + t546;
  t551 = -0.021877537552*t547;
  t560 = t552 + t555;
  t562 = -0.6934341012630001*t560;
  t566 = t529 + t535 + t551 + t562;
  t1505 = t474*t1450;
  t1510 = t484*t1464;
  t596 = -1.7147089040178687e-8*var1[20];
  t603 = -0.021744644052735636*t534;
  t609 = t538 + t608;
  t618 = -0.005534467322*t609;
  t636 = t628 + t635;
  t639 = -0.6934341012630001*t636;
  t640 = t596 + t603 + t618 + t639;
  t1511 = t468*t1450;
  t1513 = t436*t1464;
  t1515 = t1511 + t1513;
  t660 = -1.2096424700126054e-9*var1[20];
  t664 = -0.6934128581485427*t534;
  t684 = t628 + t673;
  t686 = -0.021877537552*t684;
  t698 = t552 + t691;
  t701 = -0.005534467322*t698;
  t702 = t660 + t664 + t686 + t701;
  t1519 = t436*t1450;
  t1521 = -1.*t468*t1464;
  t1522 = t1519 + t1521;
  t732 = t712 + t691;
  t745 = t743 + t673;
  t752 = -0.999969365345*t534;
  t764 = 1. + t752;
  t776 = -0.006104248100000001*t534;
  t785 = 1. + t776;
  t792 = t789 + t546;
  t807 = t712 + t555;
  t820 = t789 + t608;
  t832 = -0.993925573253*t534;
  t834 = 1. + t832;
  t845 = t743 + t635;
  t900 = -0.02159*t889;
  t920 = t900 + t913;
  t927 = -1.11344*t889;
  t929 = 0.02159*t901;
  t930 = t927 + t929;
  t1635 = 0.049*t167;
  t1636 = t1635 + t191;
  t1641 = t1636*t1075;
  t1648 = -0.09*t167;
  t1650 = -0.049*t186;
  t1653 = t1648 + t1650;
  t1654 = t1653*t1097;
  t1656 = -1.*t186*t1075;
  t1658 = -1.*t167*t1097;
  t1660 = t1656 + t1658;
  t1678 = t304*t1660;
  t1681 = t285*t1116;
  t1686 = t278*t1660;
  t1688 = t1686 + t1119;
  t1695 = t269*t1660;
  t1706 = -1.*t278*t1116;
  t1707 = t1695 + t1706;
  t1750 = t484*t1688;
  t1751 = t474*t1707;
  t1755 = -1.*t468*t1688;
  t1760 = t436*t1707;
  t1775 = t1755 + t1760;
  t1782 = t436*t1688;
  t1785 = t468*t1707;
  t1793 = t1782 + t1785;
  t1907 = -0.21*t269;
  t1912 = -0.049*t278;
  t1914 = t1907 + t1912;
  t1915 = t1914*t1110;
  t1917 = 0.049*t269;
  t1922 = t1917 + t284;
  t1925 = t1922*t1116;
  t1937 = -1.*t269*t1110;
  t1951 = t1937 + t1706;
  t1996 = t484*t1120;
  t1997 = t474*t1951;
  t2000 = -1.*t468*t1120;
  t2006 = t436*t1951;
  t2013 = t2000 + t2006;
  t2021 = t468*t1951;
  t2022 = t1169 + t2021;
  t1959 = -0.45406*t1951;
  t2161 = -0.27068*t1140;
  t2014 = -0.826587*t2013;
  t2035 = -0.004179*t2022;
  t2169 = 0.00159*t1120;
  t2043 = t702*t2013;
  t2047 = t640*t2022;
  t2055 = t845*t2013;
  t2059 = t834*t2022;
  t2060 = t2055 + t2059;
  t2065 = 0.01889*t2060;
  t2067 = t764*t2013;
  t2068 = t745*t2022;
  t2074 = t2067 + t2068;
  t2076 = -0.617968*t2074;
  t2079 = t807*t2013;
  t2080 = t792*t2022;
  t2082 = t2079 + t2080;
  t2085 = -0.126739*t2082;
  t2104 = t930*t2013;
  t2105 = t920*t2022;
  t2114 = t901*t2013;
  t2115 = t885*t2022;
  t2116 = t2114 + t2115;
  t2119 = 0.00589*t2116;
  t2124 = t885*t2013;
  t2125 = -1.*t901*t2022;
  t2129 = t2124 + t2125;
  t2134 = -1.11818*t2129;
  t2191 = -0.01841*t436;
  t2196 = t2191 + t482;
  t2199 = t2196*t1120;
  t2202 = -0.70544*t436;
  t2208 = 0.01841*t468;
  t2209 = t2202 + t2208;
  t2210 = t2209*t1140;
  t2216 = -1.*t436*t1140;
  t2220 = t2000 + t2216;
  t1307 = t885*t1173;
  t1321 = -1.*t901*t1173;
  t2332 = Cos(var1[7]);
  t2344 = Sin(var1[7]);
  t2356 = Cos(var1[6]);
  t2357 = -1.*t35*t2356*t149;
  t2358 = Sin(var1[6]);
  t2362 = t143*t2358;
  t2365 = t2357 + t2362;
  t2334 = 0.135*t2332;
  t2345 = -0.049*t2344;
  t2347 = t2334 + t2345;
  t2351 = t35*t66*t2347;
  t2371 = 0.049*t2332;
  t2372 = 0.135*t2344;
  t2375 = t2371 + t2372;
  t2380 = t2365*t2375;
  t2381 = t2332*t2365;
  t2384 = -1.*t35*t66*t2344;
  t2385 = t2381 + t2384;
  t2394 = -1.*t35*t66*t2332;
  t2396 = -1.*t2365*t2344;
  t2397 = t2394 + t2396;
  t2410 = Cos(var1[8]);
  t2420 = Sin(var1[8]);
  t2413 = -1.*t2410;
  t2415 = 1. + t2413;
  t2418 = -0.049*t2415;
  t2425 = -0.09*t2420;
  t2428 = t2418 + t2425;
  t2432 = t2385*t2428;
  t2448 = Cos(var1[9]);
  t2450 = -1.*t2448;
  t2453 = 1. + t2450;
  t2460 = Sin(var1[9]);
  t2459 = -0.049*t2453;
  t2461 = -0.21*t2460;
  t2469 = t2459 + t2461;
  t2470 = t2410*t2469*t2385;
  t2473 = -0.21*t2453;
  t2476 = 0.049*t2460;
  t2477 = t2473 + t2476;
  t2483 = -1.*t2477*t2385*t2420;
  t2487 = -1.*t2410*t2460*t2385;
  t2489 = -1.*t2448*t2385*t2420;
  t2494 = t2487 + t2489;
  t2498 = t2448*t2410*t2385;
  t2500 = -1.*t2460*t2385*t2420;
  t2504 = t2498 + t2500;
  t2536 = -1.*var1[9];
  t2538 = 0.226893 + t2536;
  t2539 = Cos(t2538);
  t2542 = -1.*t2539;
  t2543 = 1. + t2542;
  t2547 = Sin(t2538);
  t2597 = Cos(var1[12]);
  t2598 = -1.*t2597;
  t2601 = 1. + t2598;
  t2608 = Sin(var1[12]);
  t2546 = -0.70544*t2543;
  t2549 = -0.01841*t2547;
  t2550 = t2546 + t2549;
  t2551 = t2550*t2494;
  t2564 = 0.01841*t2543;
  t2568 = -0.70544*t2547;
  t2570 = t2564 + t2568;
  t2571 = t2570*t2504;
  t2615 = -0.07769774964800001*t2601;
  t2575 = t2547*t2494;
  t2576 = t2539*t2504;
  t2577 = t2575 + t2576;
  t2651 = -0.0004284921280000001*t2601;
  t2607 = -0.005481192614*t2601;
  t2580 = t2539*t2494;
  t2582 = -1.*t2547*t2504;
  t2586 = t2580 + t2582;
  t2699 = 0.077936*t2608;
  t2679 = -0.996943*t2608;
  t2617 = 0.005498*t2608;
  t2716 = 0.005481192614*t2601;
  t2611 = -0.077936*t2608;
  t2757 = 0.07769774964800001*t2601;
  t2635 = -0.005498*t2608;
  t2729 = 0.0004284921280000001*t2601;
  t2652 = 0.996943*t2608;
  t2815 = Cos(var1[13]);
  t2816 = -1.*t2815;
  t2817 = 1. + t2816;
  t2826 = Sin(var1[13]);
  t2888 = -0.07769774964800001*t2608;
  t2935 = t2356*t143;
  t2936 = t35*t149*t2358;
  t2944 = t2935 + t2936;
  t2928 = t35*t66*t2332;
  t2931 = t2365*t2344;
  t2933 = t2928 + t2931;
  t2934 = t2410*t2933;
  t2945 = t2944*t2420;
  t2946 = t2934 + t2945;
  t2955 = t2410*t2944;
  t2957 = -1.*t2933*t2420;
  t2958 = t2955 + t2957;
  t2895 = -0.005481192614*t2608;
  t2921 = -0.0004284921280000001*t2608;
  t2953 = -1.*t2460*t2946;
  t2967 = t2448*t2958;
  t2973 = t2953 + t2967;
  t2979 = t2448*t2946;
  t2980 = t2460*t2958;
  t2982 = t2979 + t2980;
  t2903 = -0.005498*t2597;
  t2976 = t2547*t2973;
  t2983 = t2539*t2982;
  t2986 = t2976 + t2983;
  t2920 = 0.996943*t2597;
  t3020 = t2539*t2973;
  t3027 = -1.*t2547*t2982;
  t3028 = t3020 + t3027;
  t2885 = 0.005498*t2597;
  t3033 = 0.07769774964800001*t2608;
  t2893 = -0.077936*t2597;
  t2995 = 0.077936*t2597;
  t3059 = 0.005481192614*t2608;
  t3003 = -0.996943*t2597;
  t3041 = 0.0004284921280000001*t2608;
  t2827 = -1.11344*t2826;
  t3175 = -0.135*t2356*t143;
  t3181 = -0.135*t35*t149*t2358;
  t3185 = t35*t2356*t149;
  t3191 = -1.*t143*t2358;
  t3192 = t3185 + t3191;
  t3215 = -1.*t2332;
  t3223 = 1. + t3215;
  t3225 = 0.135*t3223;
  t3226 = 0.049*t2344;
  t3228 = t3225 + t3226;
  t3234 = t2944*t3228;
  t3246 = t2944*t2344*t2428;
  t3247 = -0.09*t2415;
  t3250 = 0.049*t2420;
  t3251 = t3247 + t3250;
  t3252 = t3192*t3251;
  t3253 = t2410*t2944*t2344;
  t3256 = t3192*t2420;
  t3259 = t3253 + t3256;
  t3265 = t2410*t3192;
  t3270 = -1.*t2944*t2344*t2420;
  t3276 = t3265 + t3270;
  t3281 = t2469*t3259;
  t3283 = t2477*t3276;
  t3289 = -1.*t2460*t3259;
  t3293 = t2448*t3276;
  t3294 = t3289 + t3293;
  t3311 = t2448*t3259;
  t3313 = t2460*t3276;
  t3314 = t3311 + t3313;
  t2596 = -2.1934241414728571e-7*var1[12];
  t2603 = 0.000033783761634830594*t2601;
  t2612 = t2607 + t2611;
  t2613 = -0.6934341012630001*t2612;
  t2618 = t2615 + t2617;
  t2622 = -0.021877537552*t2618;
  t2626 = t2596 + t2603 + t2613 + t2622;
  t3338 = t2550*t3294;
  t3340 = t2570*t3314;
  t2629 = -1.7147089040178687e-8*var1[12];
  t2634 = -0.021744644052735636*t2601;
  t2644 = t2615 + t2635;
  t2650 = 0.005534467322*t2644;
  t2661 = t2651 + t2652;
  t2663 = -0.6934341012630001*t2661;
  t2664 = t2629 + t2634 + t2650 + t2663;
  t3341 = t2547*t3294;
  t3346 = t2539*t3314;
  t3348 = t3341 + t3346;
  t2670 = -1.2096424700126054e-9*var1[12];
  t2671 = -0.6934128581485427*t2601;
  t2682 = t2651 + t2679;
  t2686 = -0.021877537552*t2682;
  t2700 = t2607 + t2699;
  t2711 = 0.005534467322*t2700;
  t2713 = t2670 + t2671 + t2686 + t2711;
  t3353 = t2539*t3294;
  t3356 = -1.*t2547*t3314;
  t3358 = t3353 + t3356;
  t2719 = t2716 + t2699;
  t2733 = t2729 + t2679;
  t2737 = -0.999969365345*t2601;
  t2738 = 1. + t2737;
  t2749 = -0.006104248100000001*t2601;
  t2754 = 1. + t2749;
  t2760 = t2757 + t2617;
  t2768 = t2716 + t2611;
  t2775 = t2757 + t2635;
  t2780 = -0.993925573253*t2601;
  t2786 = 1. + t2780;
  t2792 = t2729 + t2652;
  t2820 = -0.02159*t2817;
  t2829 = t2820 + t2827;
  t2834 = -1.11344*t2817;
  t2836 = 0.02159*t2826;
  t2843 = t2834 + t2836;
  t3491 = -1.*t147;
  t3492 = 1. + t3491;
  t3495 = 0.135*t3492*t35*t66;
  t3519 = -1.*t147*t35*t66*t1375;
  t3520 = -0.049*t1363;
  t3524 = t3520 + t130;
  t3527 = -1.*t35*t3524*t149;
  t3530 = -1.*t147*t35*t66*t104;
  t3535 = -1.*t87*t35*t149;
  t3537 = t3530 + t3535;
  t3545 = -1.*t147*t87*t35*t66;
  t3546 = t35*t104*t149;
  t3548 = t3545 + t3546;
  t3569 = t35*t66*t141*t1395;
  t3573 = t194*t3537;
  t3582 = t35*t66*t141*t186;
  t3585 = t167*t3537;
  t3599 = t3582 + t3585;
  t3603 = t167*t35*t66*t141;
  t3606 = -1.*t186*t3537;
  t3609 = t3603 + t3606;
  t3619 = t285*t3599;
  t3622 = t304*t3609;
  t3623 = -1.*t278*t3599;
  t3625 = t269*t3609;
  t3628 = t3623 + t3625;
  t3630 = t269*t3599;
  t3632 = t278*t3609;
  t3637 = t3630 + t3632;
  t3657 = t474*t3628;
  t3658 = t484*t3637;
  t3659 = t468*t3628;
  t3661 = t436*t3637;
  t3663 = t3659 + t3661;
  t3669 = t436*t3628;
  t3674 = -1.*t468*t3637;
  t3675 = t3669 + t3674;
  t3507 = 0.0233*t35*t149;
  t3785 = -1.*t2356;
  t3789 = 1. + t3785;
  t3790 = -0.135*t35*t66*t3789;
  t3826 = -1.*t35*t66*t2356*t3228;
  t3827 = -0.049*t3223;
  t3828 = t3827 + t2372;
  t3835 = -1.*t35*t149*t3828;
  t3844 = -1.*t35*t66*t2356*t2332;
  t3852 = t35*t149*t2344;
  t3861 = t3844 + t3852;
  t3836 = -1.*t35*t2332*t149;
  t3838 = -1.*t35*t66*t2356*t2344;
  t3840 = t3836 + t3838;
  t3875 = t3840*t2428;
  t3881 = t35*t66*t2358*t3251;
  t3885 = t2410*t3840;
  t3888 = t35*t66*t2358*t2420;
  t3889 = t3885 + t3888;
  t3895 = t35*t66*t2410*t2358;
  t3897 = -1.*t3840*t2420;
  t3899 = t3895 + t3897;
  t3916 = t2469*t3889;
  t3919 = t2477*t3899;
  t3920 = -1.*t2460*t3889;
  t3925 = t2448*t3899;
  t3931 = t3920 + t3925;
  t3936 = t2448*t3889;
  t3939 = t2460*t3899;
  t3951 = t3936 + t3939;
  t3985 = t2550*t3931;
  t3988 = t2570*t3951;
  t3994 = t2547*t3931;
  t3995 = t2539*t3951;
  t3997 = t3994 + t3995;
  t4004 = t2539*t3931;
  t4005 = -1.*t2547*t3951;
  t4009 = t4004 + t4005;
  t4124 = 0.135*t35*t141;
  t4131 = -0.135*t3492*t143*t149;
  t4134 = t35*t141;
  t4136 = t147*t143*t149;
  t4138 = t4134 + t4136;
  t4149 = t147*t35;
  t4151 = -1.*t141*t143*t149;
  t4154 = t4149 + t4151;
  t4167 = -1.*t66*t3524*t143;
  t4172 = t1375*t4138;
  t4174 = t66*t104*t143;
  t4175 = t87*t4138;
  t4176 = t4174 + t4175;
  t4179 = -1.*t87*t66*t143;
  t4181 = t104*t4138;
  t4183 = t4179 + t4181;
  t4190 = t1395*t4154;
  t4193 = t194*t4183;
  t4194 = t186*t4154;
  t4196 = t167*t4183;
  t4197 = t4194 + t4196;
  t4199 = t167*t4154;
  t4200 = -1.*t186*t4183;
  t4202 = t4199 + t4200;
  t4212 = t285*t4197;
  t4213 = t304*t4202;
  t4214 = -1.*t278*t4197;
  t4216 = t269*t4202;
  t4218 = t4214 + t4216;
  t4225 = t269*t4197;
  t4226 = t278*t4202;
  t4227 = t4225 + t4226;
  t4254 = t474*t4218;
  t4263 = t484*t4227;
  t4268 = t468*t4218;
  t4271 = t436*t4227;
  t4274 = t4268 + t4271;
  t4283 = t436*t4218;
  t4284 = -1.*t468*t4227;
  t4285 = t4283 + t4284;
  t4129 = 0.0233*t66*t143;
  t4375 = 0.135*t3789*t143*t149;
  t4378 = -0.135*t35*t2358;
  t4394 = t35*t2356;
  t4395 = -1.*t143*t149*t2358;
  t4396 = t4394 + t4395;
  t4380 = t2356*t143*t149;
  t4384 = t35*t2358;
  t4388 = t4380 + t4384;
  t4413 = t4388*t3228;
  t4414 = -1.*t66*t143*t3828;
  t4416 = t2332*t4388;
  t4417 = t66*t143*t2344;
  t4420 = t4416 + t4417;
  t4423 = -1.*t66*t2332*t143;
  t4424 = t4388*t2344;
  t4425 = t4423 + t4424;
  t4440 = t4425*t2428;
  t4444 = t4396*t3251;
  t4447 = t2410*t4425;
  t4448 = t4396*t2420;
  t4457 = t4447 + t4448;
  t4464 = t2410*t4396;
  t4467 = -1.*t4425*t2420;
  t4468 = t4464 + t4467;
  t4488 = t2469*t4457;
  t4490 = t2477*t4468;
  t4492 = -1.*t2460*t4457;
  t4496 = t2448*t4468;
  t4497 = t4492 + t4496;
  t4501 = t2448*t4457;
  t4503 = t2460*t4468;
  t4512 = t4501 + t4503;
  t4530 = t2550*t4497;
  t4531 = t2570*t4512;
  t4533 = t2547*t4497;
  t4534 = t2539*t4512;
  t4535 = t4533 + t4534;
  t4537 = t2539*t4497;
  t4540 = -1.*t2547*t4512;
  t4541 = t4537 + t4540;
  t4628 = 0.049*t2410;
  t4632 = t4628 + t2425;
  t4633 = t2944*t4632;
  t4634 = -0.09*t2410;
  t4638 = -0.049*t2420;
  t4639 = t4634 + t4638;
  t4651 = t2933*t4639;
  t4652 = -1.*t2410*t2933;
  t4654 = -1.*t2944*t2420;
  t4657 = t4652 + t4654;
  t4681 = t2477*t4657;
  t4687 = t2469*t2958;
  t4688 = t2460*t4657;
  t4693 = t4688 + t2967;
  t4700 = t2448*t4657;
  t4703 = -1.*t2460*t2958;
  t4707 = t4700 + t4703;
  t4731 = t2570*t4693;
  t4733 = t2550*t4707;
  t4734 = -1.*t2547*t4693;
  t4735 = t2539*t4707;
  t4737 = t4734 + t4735;
  t4742 = t2539*t4693;
  t4743 = t2547*t4707;
  t4745 = t4742 + t4743;
  t4824 = -0.21*t2448;
  t4825 = -0.049*t2460;
  t4826 = t4824 + t4825;
  t4827 = t4826*t2946;
  t4829 = 0.049*t2448;
  t4830 = t4829 + t2461;
  t4831 = t4830*t2958;
  t4834 = -1.*t2448*t2946;
  t4836 = t4834 + t4703;
  t4850 = t2570*t2973;
  t4851 = t2550*t4836;
  t4852 = -1.*t2547*t2973;
  t4857 = t2539*t4836;
  t4861 = t4852 + t4857;
  t4867 = t2547*t4836;
  t4868 = t3020 + t4867;
  t4837 = -0.45406*t4836;
  t4946 = -0.27068*t2982;
  t4865 = -0.826587*t4861;
  t4869 = -0.004179*t4868;
  t4954 = 0.00159*t2973;
  t4874 = t2713*t4861;
  t4877 = t2664*t4868;
  t4878 = t2792*t4861;
  t4880 = t2786*t4868;
  t4881 = t4878 + t4880;
  t4882 = 0.01889*t4881;
  t4884 = t2738*t4861;
  t4888 = t2733*t4868;
  t4889 = t4884 + t4888;
  t4893 = -0.617968*t4889;
  t4897 = t2768*t4861;
  t4898 = t2760*t4868;
  t4900 = t4897 + t4898;
  t4902 = 0.126739*t4900;
  t4912 = t2843*t4861;
  t4914 = t2829*t4868;
  t4915 = t2826*t4861;
  t4918 = t2815*t4868;
  t4921 = t4915 + t4918;
  t4922 = 0.00589*t4921;
  t4924 = t2815*t4861;
  t4925 = -1.*t2826*t4868;
  t4926 = t4924 + t4925;
  t4931 = -1.11818*t4926;
  t4974 = -0.01841*t2539;
  t4975 = t4974 + t2568;
  t4982 = t4975*t2973;
  t4983 = -0.70544*t2539;
  t4986 = 0.01841*t2547;
  t4991 = t4983 + t4986;
  t4992 = t4991*t2982;
  t4997 = -1.*t2539*t2982;
  t4999 = t4852 + t4997;
  t3146 = t2815*t3028;
  t3156 = -1.*t2826*t3028;
  p_output1[0]=var2[0] + 0.0288377642750394*(1.965608*(t4124 + t4129 + t4131 - 0.1351*t4138 + 0.01793*t4154) + 1.316608*(t4124 + t4131 - 0.0343*t4154 + t4167 + t4172 - 0.135*t4176 - 0.049*t4183) + 5.79228*(t4124 + t4131 + t4167 + t4172 - 0.17081*t4176 + t4190 + t4193 - 0.04895*t4197 - 0.14946*t4202) + 1.03008*(t4124 + t4131 + t4167 + t4172 - 0.132168*t4176 + t4190 + t4193 + t4212 + t4213 - 0.255862*t4218 - 0.007761*t4227) + 0.763*(t4124 + t4131 + t4167 + t4172 - 0.130288*t4176 + t4190 + t4193 + t4212 + t4213 - 0.45406*t4218 - 0.000421*t4227) + 1.03*(t4124 + t4131 + t4167 + t4172 - 0.127241*t4176 + t4190 + t4193 + t4212 + t4213 + t4254 + t4263 - 0.004179*t4274 - 0.826587*t4285) + 1.965608*(t4129 + t4375 + t4378 + 0.1351*t4388 + 0.01793*t4396) + 1.316608*(t4375 + t4378 - 0.0343*t4396 + t4413 + t4414 + 0.135*t4420 - 0.049*t4425) + 5.79228*(t4375 + t4378 + t4413 + t4414 + 0.17081*t4420 + t4440 + t4444 - 0.04895*t4457 - 0.14946*t4468) + 1.03008*(t4375 + t4378 + t4413 + t4414 + 0.132168*t4420 + t4440 + t4444 + t4488 + t4490 - 0.255862*t4497 - 0.007761*t4512) + 0.763*(t4375 + t4378 + t4413 + t4414 + 0.130288*t4420 + t4440 + t4444 + t4488 + t4490 - 0.45406*t4497 - 0.000421*t4512) + 1.03*(t4375 + t4378 + t4413 + t4414 + 0.127241*t4420 + t4440 + t4444 + t4488 + t4490 + t4530 + t4531 - 0.004179*t4535 - 0.826587*t4541) + 0.126*(t4375 + t4378 + t4413 + t4414 + t2626*t4420 + t4440 + t4444 + t4488 + t4490 + t4530 + t4531 + t2664*t4535 + t2713*t4541 - 0.617968*(t2719*t4420 + t2733*t4535 + t2738*t4541) + 0.126739*(t2754*t4420 + t2760*t4535 + t2768*t4541) + 0.01889*(t2775*t4420 + t2786*t4535 + t2792*t4541)) + 0.1498*(t4375 + t4378 + t4413 + t4414 + 0.13064*t4420 + t4440 + t4444 + t4488 + t4490 + t4530 + t4531 + t2829*t4535 + t2843*t4541 - 1.11818*(-1.*t2826*t4535 + t2815*t4541) + 0.00589*(t2815*t4535 + t2826*t4541)) + 10.33*(0.000346*t143*t149 + 0.02841*t35 - 0.05066*t143*t66) + 0.126*(t4124 + t4131 + t4167 + t4172 + t4190 + t4193 + t4212 + t4213 + t4254 + t4263 + t4176*t566 + t4274*t640 + t4285*t702 - 0.617968*(t4176*t732 + t4274*t745 + t4285*t764) - 0.126739*(t4176*t785 + t4274*t792 + t4285*t807) + 0.01889*(t4176*t820 + t4274*t834 + t4285*t845)) + 0.1498*(t4124 + t4131 + t4167 + t4172 - 0.13064*t4176 + t4190 + t4193 + t4212 + t4213 + t4254 + t4263 - 1.11818*(t4285*t885 - 1.*t4274*t901) + 0.00589*(t4274*t885 + t4285*t901) + t4274*t920 + t4285*t930))*var2[4] + 0.0288377642750394*(5.79228*(t3495 + t3519 + t3527 - 0.17081*t3548 + t3569 + t3573 - 0.04895*t3599 - 0.14946*t3609) + 1.03008*(t3495 + t3519 + t3527 - 0.132168*t3548 + t3569 + t3573 + t3619 + t3622 - 0.255862*t3628 - 0.007761*t3637) + 0.763*(t3495 + t3519 + t3527 - 0.130288*t3548 + t3569 + t3573 + t3619 + t3622 - 0.45406*t3628 - 0.000421*t3637) + 1.03*(t3495 + t3519 + t3527 - 0.127241*t3548 + t3569 + t3573 + t3619 + t3622 + t3657 + t3658 - 0.004179*t3663 - 0.826587*t3675) + 5.79228*(t3790 + t3826 + t3835 + 0.17081*t3861 + t3875 + t3881 - 0.04895*t3889 - 0.14946*t3899) + 1.03008*(t3790 + t3826 + t3835 + 0.132168*t3861 + t3875 + t3881 + t3916 + t3919 - 0.255862*t3931 - 0.007761*t3951) + 0.763*(t3790 + t3826 + t3835 + 0.130288*t3861 + t3875 + t3881 + t3916 + t3919 - 0.45406*t3931 - 0.000421*t3951) + 1.03*(t3790 + t3826 + t3835 + 0.127241*t3861 + t3875 + t3881 + t3916 + t3919 + t3985 + t3988 - 0.004179*t3997 - 0.826587*t4009) + 0.126*(t3790 + t3826 + t3835 + t2626*t3861 + t3875 + t3881 + t3916 + t3919 + t3985 + t3988 + t2664*t3997 + t2713*t4009 - 0.617968*(t2719*t3861 + t2733*t3997 + t2738*t4009) + 0.126739*(t2754*t3861 + t2760*t3997 + t2768*t4009) + 0.01889*(t2775*t3861 + t2786*t3997 + t2792*t4009)) + 0.1498*(t3790 + t3826 + t3835 + 0.13064*t3861 + t3875 + t3881 + t3916 + t3919 + t3985 + t3988 + t2829*t3997 + t2843*t4009 - 1.11818*(-1.*t2826*t3997 + t2815*t4009) + 0.00589*(t2815*t3997 + t2826*t4009)) + 10.33*(-0.05066*t149*t35 - 0.000346*t35*t66) + 1.316608*(t3495 + t3519 + t3527 - 0.049*t3537 - 0.135*t3548 - 0.0343*t141*t35*t66) + 1.965608*(t3495 + t3507 + 0.01793*t141*t35*t66 + 0.1351*t147*t35*t66) + 1.316608*(t3790 + t3826 + t3835 - 0.049*t3840 + 0.135*t3861 - 0.0343*t2358*t35*t66) + 1.965608*(t3507 + t3790 - 0.1351*t2356*t35*t66 + 0.01793*t2358*t35*t66) + 0.126*(t3495 + t3519 + t3527 + t3569 + t3573 + t3619 + t3622 + t3657 + t3658 + t3548*t566 + t3663*t640 + t3675*t702 - 0.617968*(t3548*t732 + t3663*t745 + t3675*t764) - 0.126739*(t3548*t785 + t3663*t792 + t3675*t807) + 0.01889*(t3548*t820 + t3663*t834 + t3675*t845)) + 0.1498*(t3495 + t3519 + t3527 - 0.13064*t3548 + t3569 + t3573 + t3619 + t3622 + t3657 + t3658 - 1.11818*(t3675*t885 - 1.*t3663*t901) + 0.00589*(t3663*t885 + t3675*t901) + t3663*t920 + t3675*t930))*var2[5] + 0.0288377642750394*(1.965608*(0.1351*t2944 + t3175 + t3181 + 0.01793*t3192) + 1.316608*(0.135*t2332*t2944 - 0.049*t2344*t2944 + t3175 + t3181 - 0.0343*t3192 + t3234) + 5.79228*(0.17081*t2332*t2944 + t3175 + t3181 + t3234 + t3246 + t3252 - 0.04895*t3259 - 0.14946*t3276) + 1.03008*(0.132168*t2332*t2944 + t3175 + t3181 + t3234 + t3246 + t3252 + t3281 + t3283 - 0.255862*t3294 - 0.007761*t3314) + 0.763*(0.130288*t2332*t2944 + t3175 + t3181 + t3234 + t3246 + t3252 + t3281 + t3283 - 0.45406*t3294 - 0.000421*t3314) + 1.03*(0.127241*t2332*t2944 + t3175 + t3181 + t3234 + t3246 + t3252 + t3281 + t3283 + t3338 + t3340 - 0.004179*t3348 - 0.826587*t3358) + 0.126*(t2332*t2626*t2944 + t3175 + t3181 + t3234 + t3246 + t3252 + t3281 + t3283 + t3338 + t3340 + t2664*t3348 + t2713*t3358 - 0.617968*(t2332*t2719*t2944 + t2733*t3348 + t2738*t3358) + 0.126739*(t2332*t2754*t2944 + t2760*t3348 + t2768*t3358) + 0.01889*(t2332*t2775*t2944 + t2786*t3348 + t2792*t3358)) + 0.1498*(0.13064*t2332*t2944 + t3175 + t3181 + t3234 + t3246 + t3252 + t3281 + t3283 + t3338 + t3340 + t2829*t3348 + t2843*t3358 - 1.11818*(-1.*t2826*t3348 + t2815*t3358) + 0.00589*(t2815*t3348 + t2826*t3358)))*var2[6] + 0.0288377642750394*(1.316608*(t2351 + t2380 - 0.049*t2385 + 0.135*t2397) + 5.79228*(t2351 + t2380 + 0.17081*t2397 - 0.04895*t2385*t2410 + 0.14946*t2385*t2420 + t2432) + 1.03008*(t2351 + t2380 + 0.132168*t2397 + t2432 + t2470 + t2483 - 0.255862*t2494 - 0.007761*t2504) + 0.763*(t2351 + t2380 + 0.130288*t2397 + t2432 + t2470 + t2483 - 0.45406*t2494 - 0.000421*t2504) + 1.03*(t2351 + t2380 + 0.127241*t2397 + t2432 + t2470 + t2483 + t2551 + t2571 - 0.004179*t2577 - 0.826587*t2586) + 0.126*(t2351 + t2380 + t2432 + t2470 + t2483 + t2551 + t2571 + t2397*t2626 + t2577*t2664 + t2586*t2713 - 0.617968*(t2397*t2719 + t2577*t2733 + t2586*t2738) + 0.126739*(t2397*t2754 + t2577*t2760 + t2586*t2768) + 0.01889*(t2397*t2775 + t2577*t2786 + t2586*t2792)) + 0.1498*(t2351 + t2380 + 0.13064*t2397 + t2432 + t2470 + t2483 + t2551 + t2571 - 1.11818*(t2586*t2815 - 1.*t2577*t2826) + 0.00589*(t2577*t2815 + t2586*t2826) + t2577*t2829 + t2586*t2843))*var2[7] + 0.0288377642750394*(5.79228*(-0.04895*t2958 + t4633 + t4651 - 0.14946*t4657) + 0.763*(t4633 + t4651 + t4681 + t4687 - 0.000421*t4693 - 0.45406*t4707) + 1.03008*(t4633 + t4651 + t4681 + t4687 - 0.007761*t4693 - 0.255862*t4707) + 1.03*(t4633 + t4651 + t4681 + t4687 + t4731 + t4733 - 0.826587*t4737 - 0.004179*t4745) + 0.126*(t4633 + t4651 + t4681 + t4687 + t4731 + t4733 + t2713*t4737 + t2664*t4745 - 0.617968*(t2738*t4737 + t2733*t4745) + 0.126739*(t2768*t4737 + t2760*t4745) + 0.01889*(t2792*t4737 + t2786*t4745)) + 0.1498*(t4633 + t4651 + t4681 + t4687 + t4731 + t4733 + t2843*t4737 + t2829*t4745 + 0.00589*(t2826*t4737 + t2815*t4745) - 1.11818*(t2815*t4737 - 1.*t2826*t4745)))*var2[8] + 0.0288377642750394*(1.03008*(-0.007761*t2973 + t4827 + t4831 - 0.255862*t4836) + 0.763*(-0.000421*t2973 + t4827 + t4831 + t4837) + 1.03*(t4827 + t4831 + t4850 + t4851 + t4865 + t4869) + 0.126*(t4827 + t4831 + t4850 + t4851 + t4874 + t4877 + t4882 + t4893 + t4902) + 0.1498*(t4827 + t4831 + t4850 + t4851 + t4912 + t4914 + t4922 + t4931))*var2[9] + 0.0288377642750394*(0.763*(0.001169*t2973 + t4837 + t4946) + 1.03*(t4850 + t4851 + t4865 + t4869 + t4946 + t4954) + 0.126*(t4850 + t4851 + t4874 + t4877 + t4882 + t4893 + t4902 + t4946 + t4954) + 0.1498*(t4850 + t4851 + t4912 + t4914 + t4922 + t4931 + t4946 + t4954))*var2[10] + 0.0288377642750394*(1.03*(-0.004179*t3028 + t4982 + t4992 - 0.826587*t4999) + 0.126*(t2664*t3028 + t4982 + t4992 + t2713*t4999 - 0.617968*(t2733*t3028 + t2738*t4999) + 0.126739*(t2760*t3028 + t2768*t4999) + 0.01889*(t2786*t3028 + t2792*t4999)) + 0.1498*(t2829*t3028 + t4982 + t4992 + t2843*t4999 - 1.11818*(t3156 + t2815*t4999) + 0.00589*(t3146 + t2826*t4999)))*var2[11] + 0.00363355829865496*(t2385*(-2.1934241414728571e-7 + 0.000033783761634830594*t2608 - 0.021877537552*(t2885 + t2888) - 0.6934341012630001*(t2893 + t2895)) + (-1.7147089040178687e-8 - 0.021744644052735636*t2608 + 0.005534467322*(t2888 + t2903) - 0.6934341012630001*(t2920 + t2921))*t2986 + (-1.2096424700126054e-9 - 0.6934128581485427*t2608 + 0.005534467322*(t2895 + t2995) - 0.021877537552*(t2921 + t3003))*t3028 + 0.01889*(-0.993925573253*t2608*t2986 + t2385*(t2903 + t3033) + t3028*(t2920 + t3041)) + 0.126739*(-0.006104248100000001*t2385*t2608 + t2986*(t2885 + t3033) + t3028*(t2893 + t3059)) - 0.617968*(-0.999969365345*t2608*t3028 + t2986*(t3003 + t3041) + t2385*(t2995 + t3059)))*var2[12] + 0.0043198970884009*((-1.11344*t2815 - 0.02159*t2826)*t2986 + (0.02159*t2815 + t2827)*t3028 + 0.00589*(-1.*t2826*t2986 + t3146) - 1.11818*(-1.*t2815*t2986 + t3156))*var2[13] + 0.0288377642750394*(1.965608*(-0.1351*t1075 + t1332 + t1333 + 0.01793*t1346) + 5.79228*(t1332 + t1333 + t1376 + t1399 + t1403 - 0.04895*t1410 - 0.14946*t1421 - 0.17081*t1075*t87) + 1.316608*(-0.049*t104*t1075 + t1332 + t1333 - 0.0343*t1346 + t1376 - 0.135*t1075*t87) + 1.03008*(t1332 + t1333 + t1376 + t1399 + t1403 + t1431 + t1437 - 0.255862*t1450 - 0.007761*t1464 - 0.132168*t1075*t87) + 0.763*(t1332 + t1333 + t1376 + t1399 + t1403 + t1431 + t1437 - 0.45406*t1450 - 0.000421*t1464 - 0.130288*t1075*t87) + 1.03*(t1332 + t1333 + t1376 + t1399 + t1403 + t1431 + t1437 + t1505 + t1510 - 0.004179*t1515 - 0.826587*t1522 - 0.127241*t1075*t87) + 0.126*(t1332 + t1333 + t1376 + t1399 + t1403 + t1431 + t1437 + t1505 + t1510 + t1515*t640 + t1522*t702 + t1075*t566*t87 - 0.617968*(t1515*t745 + t1522*t764 + t1075*t732*t87) - 0.126739*(t1515*t792 + t1522*t807 + t1075*t785*t87) + 0.01889*(t1515*t834 + t1522*t845 + t1075*t820*t87)) + 0.1498*(t1332 + t1333 + t1376 + t1399 + t1403 + t1431 + t1437 + t1505 + t1510 - 0.13064*t1075*t87 - 1.11818*(t1522*t885 - 1.*t1515*t901) + 0.00589*(t1515*t885 + t1522*t901) + t1515*t920 + t1522*t930))*var2[14] + 0.0288377642750394*(5.79228*(t121 + t166 - 0.04895*t167*t176 + 0.14946*t176*t186 + t201 - 0.17081*t242) + 1.316608*(t121 + t166 - 0.049*t176 - 0.135*t242) + 1.03008*(t121 + t166 + t201 - 0.132168*t242 + t286 + t329 - 0.255862*t345 - 0.007761*t379) + 0.763*(t121 + t166 + t201 - 0.130288*t242 + t286 + t329 - 0.45406*t345 - 0.000421*t379) + 1.03*(t121 + t166 + t201 - 0.127241*t242 + t286 + t329 + t480 + t485 - 0.004179*t498 - 0.826587*t520) + 0.126*(t121 + t166 + t201 + t286 + t329 + t480 + t485 + t242*t566 + t498*t640 + t520*t702 - 0.617968*(t242*t732 + t498*t745 + t520*t764) - 0.126739*(t242*t785 + t498*t792 + t520*t807) + 0.01889*(t242*t820 + t498*t834 + t520*t845)) + 0.1498*(t121 + t166 + t201 - 0.13064*t242 + t286 + t329 + t480 + t485 - 1.11818*(t520*t885 - 1.*t498*t901) + 0.00589*(t498*t885 + t520*t901) + t498*t920 + t520*t930))*var2[15] + 0.0288377642750394*(5.79228*(-0.04895*t1116 + t1641 + t1654 - 0.14946*t1660) + 0.763*(t1641 + t1654 + t1678 + t1681 - 0.000421*t1688 - 0.45406*t1707) + 1.03008*(t1641 + t1654 + t1678 + t1681 - 0.007761*t1688 - 0.255862*t1707) + 1.03*(t1641 + t1654 + t1678 + t1681 + t1750 + t1751 - 0.826587*t1775 - 0.004179*t1793) + 0.126*(t1641 + t1654 + t1678 + t1681 + t1750 + t1751 + t1793*t640 + t1775*t702 - 0.617968*(t1793*t745 + t1775*t764) - 0.126739*(t1793*t792 + t1775*t807) + 0.01889*(t1793*t834 + t1775*t845)) + 0.1498*(t1641 + t1654 + t1678 + t1681 + t1750 + t1751 + 0.00589*(t1793*t885 + t1775*t901) - 1.11818*(t1775*t885 - 1.*t1793*t901) + t1793*t920 + t1775*t930))*var2[16] + 0.0288377642750394*(1.03008*(-0.007761*t1120 + t1915 + t1925 - 0.255862*t1951) + 0.763*(-0.000421*t1120 + t1915 + t1925 + t1959) + 1.03*(t1915 + t1925 + t1996 + t1997 + t2014 + t2035) + 0.126*(t1915 + t1925 + t1996 + t1997 + t2043 + t2047 + t2065 + t2076 + t2085) + 0.1498*(t1915 + t1925 + t1996 + t1997 + t2104 + t2105 + t2119 + t2134))*var2[17] + 0.0288377642750394*(0.763*(0.001169*t1120 + t1959 + t2161) + 1.03*(t1996 + t1997 + t2014 + t2035 + t2161 + t2169) + 0.126*(t1996 + t1997 + t2043 + t2047 + t2065 + t2076 + t2085 + t2161 + t2169) + 0.1498*(t1996 + t1997 + t2104 + t2105 + t2119 + t2134 + t2161 + t2169))*var2[18] + 0.0288377642750394*(1.03*(-0.004179*t1173 + t2199 + t2210 - 0.826587*t2220) + 0.126*(t2199 + t2210 + t1173*t640 + t2220*t702 - 0.617968*(t1173*t745 + t2220*t764) - 0.126739*(t1173*t792 + t2220*t807) + 0.01889*(t1173*t834 + t2220*t845)) + 0.1498*(t2199 + t2210 - 1.11818*(t1321 + t2220*t885) + 0.00589*(t1307 + t2220*t901) + t1173*t920 + t2220*t930))*var2[19] + 0.00363355829865496*(t1142*(-1.7147089040178687e-8 - 0.6934341012630001*(t1039 + t1046) - 0.005534467322*(t1013 + t1054) - 0.021744644052735636*t542) + 0.01889*(t1173*(t1039 + t1222) + (t1054 + t1183)*t176 - 0.993925573253*t1142*t542) - 0.617968*(t1142*(t1144 + t1222) + (t1152 + t1195)*t176 - 0.999969365345*t1173*t542) - 0.126739*(t1142*(t1012 + t1183) - 0.006104248100000001*t176*t542 + t1173*(t1195 + t996)) + t1173*(-1.2096424700126054e-9 - 0.021877537552*(t1046 + t1144) - 0.6934128581485427*t542 - 0.005534467322*(t1152 + t997)) + t176*(2.1934241414728571e-7 - 0.021877537552*(t1012 + t1013) - 0.000033783761634830594*t542 - 0.6934341012630001*(t996 + t997)))*var2[20] + 0.0043198970884009*(-1.11818*(t1321 - 1.*t1142*t885) + t1142*(-1.11344*t885 - 0.02159*t901) + 0.00589*(t1307 - 1.*t1142*t901) + t1173*(0.02159*t885 + t913))*var2[21];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 1, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#endif // MATLAB_MEX_FILE

namespace SymFunction
{

void ya1_SLIP_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}




