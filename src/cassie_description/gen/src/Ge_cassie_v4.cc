/*
 * Automatically Generated from Mathematica.
 * Tue 4 Jan 2022 15:05:03 GMT-08:00
 */

#ifdef MATLAB_MEX_FILE
// No need to include header
#else
#include "Ge_cassie_v4.hh"
#endif

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t13;
  double t21;
  double t17;
  double t19;
  double t22;
  double t10;
  double t20;
  double t25;
  double t26;
  double t30;
  double t32;
  double t34;
  double t40;
  double t43;
  double t41;
  double t45;
  double t47;
  double t48;
  double t64;
  double t69;
  double t71;
  double t73;
  double t49;
  double t50;
  double t51;
  double t55;
  double t56;
  double t58;
  double t72;
  double t74;
  double t76;
  double t77;
  double t78;
  double t79;
  double t82;
  double t83;
  double t86;
  double t88;
  double t90;
  double t103;
  double t108;
  double t109;
  double t113;
  double t93;
  double t96;
  double t98;
  double t111;
  double t116;
  double t119;
  double t120;
  double t122;
  double t124;
  double t127;
  double t131;
  double t132;
  double t134;
  double t135;
  double t146;
  double t147;
  double t148;
  double t150;
  double t137;
  double t138;
  double t139;
  double t149;
  double t154;
  double t157;
  double t158;
  double t160;
  double t163;
  double t165;
  double t166;
  double t172;
  double t174;
  double t175;
  double t191;
  double t193;
  double t194;
  double t199;
  double t182;
  double t183;
  double t184;
  double t197;
  double t200;
  double t202;
  double t204;
  double t205;
  double t206;
  double t208;
  double t209;
  double t210;
  double t212;
  double t213;
  double t225;
  double t227;
  double t228;
  double t230;
  double t216;
  double t217;
  double t218;
  double t255;
  double t256;
  double t257;
  double t261;
  double t229;
  double t232;
  double t233;
  double t234;
  double t236;
  double t237;
  double t238;
  double t239;
  double t268;
  double t240;
  double t241;
  double t242;
  double t259;
  double t278;
  double t244;
  double t246;
  double t249;
  double t301;
  double t305;
  double t286;
  double t318;
  double t280;
  double t328;
  double t269;
  double t313;
  double t262;
  double t357;
  double t359;
  double t361;
  double t365;
  double t42;
  double t392;
  double t399;
  double t393;
  double t394;
  double t396;
  double t402;
  double t409;
  double t410;
  double t411;
  double t404;
  double t405;
  double t407;
  double t418;
  double t419;
  double t421;
  double t427;
  double t426;
  double t430;
  double t431;
  double t432;
  double t434;
  double t436;
  double t437;
  double t440;
  double t441;
  double t442;
  double t443;
  double t445;
  double t446;
  double t448;
  double t455;
  double t456;
  double t458;
  double t461;
  double t460;
  double t462;
  double t463;
  double t464;
  double t465;
  double t466;
  double t467;
  double t469;
  double t470;
  double t471;
  double t472;
  double t485;
  double t486;
  double t488;
  double t490;
  double t474;
  double t478;
  double t480;
  double t489;
  double t492;
  double t494;
  double t495;
  double t496;
  double t501;
  double t504;
  double t506;
  double t511;
  double t512;
  double t513;
  double t527;
  double t530;
  double t531;
  double t533;
  double t516;
  double t517;
  double t518;
  double t532;
  double t534;
  double t536;
  double t539;
  double t540;
  double t541;
  double t542;
  double t544;
  double t547;
  double t549;
  double t551;
  double t565;
  double t567;
  double t568;
  double t570;
  double t554;
  double t555;
  double t556;
  double t601;
  double t602;
  double t606;
  double t611;
  double t569;
  double t574;
  double t576;
  double t577;
  double t579;
  double t583;
  double t584;
  double t585;
  double t608;
  double t587;
  double t589;
  double t590;
  double t618;
  double t632;
  double t592;
  double t593;
  double t594;
  double t646;
  double t651;
  double t637;
  double t663;
  double t634;
  double t678;
  double t613;
  double t659;
  double t621;
  double t713;
  double t714;
  double t716;
  double t722;
  double t765;
  double t769;
  double t770;
  double t771;
  double t772;
  double t776;
  double t777;
  double t778;
  double t784;
  double t787;
  double t790;
  double t793;
  double t794;
  double t797;
  double t798;
  double t799;
  double t808;
  double t813;
  double t814;
  double t815;
  double t817;
  double t820;
  double t823;
  double t824;
  double t834;
  double t838;
  double t839;
  double t841;
  double t843;
  double t845;
  double t849;
  double t851;
  double t862;
  double t864;
  double t866;
  double t867;
  double t868;
  double t875;
  double t876;
  double t880;
  double t254;
  double t258;
  double t264;
  double t266;
  double t270;
  double t271;
  double t272;
  double t891;
  double t894;
  double t275;
  double t276;
  double t281;
  double t282;
  double t288;
  double t290;
  double t291;
  double t895;
  double t896;
  double t897;
  double t297;
  double t299;
  double t302;
  double t303;
  double t306;
  double t307;
  double t309;
  double t900;
  double t901;
  double t903;
  double t315;
  double t319;
  double t322;
  double t323;
  double t330;
  double t332;
  double t334;
  double t336;
  double t340;
  double t341;
  double t343;
  double t346;
  double t362;
  double t366;
  double t367;
  double t374;
  double t375;
  double t376;
  double t764;
  double t972;
  double t974;
  double t979;
  double t980;
  double t984;
  double t975;
  double t976;
  double t977;
  double t996;
  double t998;
  double t999;
  double t1003;
  double t1007;
  double t1009;
  double t1012;
  double t1015;
  double t1023;
  double t1024;
  double t1025;
  double t1028;
  double t1029;
  double t1033;
  double t1034;
  double t1036;
  double t1046;
  double t1048;
  double t1050;
  double t1053;
  double t1054;
  double t1056;
  double t1057;
  double t1058;
  double t1066;
  double t1069;
  double t1072;
  double t1073;
  double t1074;
  double t1076;
  double t1078;
  double t1080;
  double t600;
  double t607;
  double t615;
  double t616;
  double t622;
  double t623;
  double t624;
  double t1088;
  double t1089;
  double t629;
  double t630;
  double t635;
  double t636;
  double t639;
  double t640;
  double t641;
  double t1090;
  double t1092;
  double t1093;
  double t644;
  double t645;
  double t648;
  double t649;
  double t654;
  double t656;
  double t657;
  double t1098;
  double t1099;
  double t1100;
  double t661;
  double t665;
  double t668;
  double t670;
  double t679;
  double t682;
  double t684;
  double t688;
  double t697;
  double t699;
  double t701;
  double t704;
  double t719;
  double t723;
  double t724;
  double t727;
  double t728;
  double t732;
  double t1165;
  double t1166;
  double t1169;
  double t1176;
  double t1179;
  double t1180;
  double t1170;
  double t1193;
  double t1196;
  double t1197;
  double t1199;
  double t1200;
  double t1203;
  double t1204;
  double t1206;
  double t1213;
  double t1214;
  double t1217;
  double t1219;
  double t1220;
  double t1224;
  double t1227;
  double t1229;
  double t1239;
  double t1240;
  double t1241;
  double t1244;
  double t1250;
  double t1254;
  double t1255;
  double t1256;
  double t1270;
  double t1271;
  double t1273;
  double t1274;
  double t1277;
  double t1280;
  double t1282;
  double t1283;
  double t1290;
  double t1291;
  double t1293;
  double t1294;
  double t1295;
  double t1300;
  double t1301;
  double t1302;
  double t1182;
  double t1369;
  double t1379;
  double t1380;
  double t1387;
  double t1388;
  double t1389;
  double t1381;
  double t1383;
  double t1384;
  double t1396;
  double t1397;
  double t1399;
  double t1400;
  double t1401;
  double t1404;
  double t1405;
  double t1408;
  double t1416;
  double t1417;
  double t1419;
  double t1421;
  double t1424;
  double t1427;
  double t1428;
  double t1432;
  double t1443;
  double t1444;
  double t1445;
  double t1447;
  double t1449;
  double t1453;
  double t1455;
  double t1457;
  double t1468;
  double t1469;
  double t1471;
  double t1472;
  double t1473;
  double t1476;
  double t1477;
  double t1479;
  double t1540;
  double t1541;
  double t1543;
  double t1545;
  double t1546;
  double t1548;
  double t1549;
  double t1550;
  double t1558;
  double t1565;
  double t1567;
  double t1568;
  double t1570;
  double t1571;
  double t1573;
  double t1574;
  double t1575;
  double t1583;
  double t1588;
  double t1589;
  double t1590;
  double t1591;
  double t1594;
  double t1595;
  double t1596;
  double t1604;
  double t1605;
  double t1606;
  double t1607;
  double t1609;
  double t1612;
  double t1613;
  double t1614;
  double t1620;
  double t1621;
  double t1623;
  double t1625;
  double t1627;
  double t1629;
  double t1630;
  double t1632;
  double t1696;
  double t1698;
  double t1699;
  double t1689;
  double t1690;
  double t1691;
  double t1692;
  double t1693;
  double t1694;
  double t1695;
  double t1700;
  double t1702;
  double t1703;
  double t1704;
  double t1706;
  double t1707;
  double t1710;
  double t1711;
  double t1712;
  double t1721;
  double t1727;
  double t1730;
  double t1732;
  double t1733;
  double t1736;
  double t1738;
  double t1739;
  double t1741;
  double t1747;
  double t1748;
  double t1749;
  double t1750;
  double t1751;
  double t1754;
  double t1755;
  double t1757;
  double t1762;
  double t1763;
  double t1765;
  double t1766;
  double t1767;
  double t1770;
  double t1775;
  double t1776;
  double t1837;
  double t1839;
  double t1840;
  double t1833;
  double t1835;
  double t1836;
  double t1841;
  double t1842;
  double t1843;
  double t1844;
  double t1845;
  double t1847;
  double t1848;
  double t1853;
  double t1854;
  double t1856;
  double t1862;
  double t1863;
  double t1865;
  double t1866;
  double t1870;
  double t1872;
  double t1873;
  double t1876;
  double t1881;
  double t1884;
  double t1886;
  double t1887;
  double t1888;
  double t1890;
  double t1892;
  double t1894;
  double t1899;
  double t1902;
  double t1903;
  double t1904;
  double t1905;
  double t1908;
  double t1909;
  double t1910;
  double t1965;
  double t1967;
  double t1968;
  double t1956;
  double t1959;
  double t1963;
  double t1969;
  double t1970;
  double t1971;
  double t1972;
  double t1973;
  double t1975;
  double t1977;
  double t1978;
  double t1983;
  double t1984;
  double t1986;
  double t1987;
  double t1988;
  double t1991;
  double t1992;
  double t1993;
  double t2000;
  double t2001;
  double t2002;
  double t2003;
  double t2004;
  double t2007;
  double t2008;
  double t2009;
  double t2066;
  double t2070;
  double t2071;
  double t2056;
  double t2058;
  double t2059;
  double t2062;
  double t2064;
  double t2065;
  double t2074;
  double t2075;
  double t2076;
  double t2078;
  double t2079;
  double t2083;
  double t2087;
  double t2088;
  double t2089;
  double t2090;
  double t2092;
  double t2094;
  double t2096;
  double t2143;
  double t2144;
  double t2147;
  double t2138;
  double t2139;
  double t2141;
  double t2148;
  double t2149;
  double t2150;
  double t2151;
  double t2152;
  double t2153;
  double t2159;
  double t2160;
  double t2216;
  double t2211;
  double t2232;
  double t2227;
  double t2231;
  double t2253;
  double t2254;
  double t2255;
  double t2215;
  double t2257;
  double t2210;
  double t2239;
  double t2273;
  double t2242;
  double t2263;
  double t2190;
  double t2195;
  double t2313;
  double t2314;
  double t2316;
  double t2319;
  double t2322;
  double t2324;
  double t2325;
  double t2328;
  double t2338;
  double t2343;
  double t2345;
  double t2346;
  double t2348;
  double t2349;
  double t2352;
  double t2355;
  double t2356;
  double t2364;
  double t2366;
  double t2367;
  double t2368;
  double t2369;
  double t2373;
  double t2374;
  double t2375;
  double t2382;
  double t2383;
  double t2384;
  double t2385;
  double t2386;
  double t2388;
  double t2389;
  double t2391;
  double t2399;
  double t2402;
  double t2403;
  double t2404;
  double t2405;
  double t2407;
  double t2409;
  double t2410;
  double t2484;
  double t2485;
  double t2486;
  double t2489;
  double t2490;
  double t2497;
  double t2476;
  double t2478;
  double t2480;
  double t2481;
  double t2482;
  double t2483;
  double t2487;
  double t2501;
  double t2504;
  double t2505;
  double t2499;
  double t2514;
  double t2516;
  double t2519;
  double t2520;
  double t2521;
  double t2523;
  double t2524;
  double t2525;
  double t2531;
  double t2532;
  double t2533;
  double t2535;
  double t2536;
  double t2541;
  double t2542;
  double t2543;
  double t2549;
  double t2550;
  double t2551;
  double t2553;
  double t2555;
  double t2557;
  double t2558;
  double t2559;
  double t2633;
  double t2634;
  double t2635;
  double t2621;
  double t2622;
  double t2625;
  double t2626;
  double t2628;
  double t2630;
  double t2638;
  double t2642;
  double t2643;
  double t2644;
  double t2647;
  double t2648;
  double t2649;
  double t2654;
  double t2656;
  double t2658;
  double t2660;
  double t2661;
  double t2663;
  double t2665;
  double t2668;
  double t2674;
  double t2675;
  double t2676;
  double t2677;
  double t2678;
  double t2681;
  double t2682;
  double t2684;
  double t2689;
  double t2691;
  double t2695;
  double t2696;
  double t2697;
  double t2699;
  double t2700;
  double t2701;
  double t2751;
  double t2754;
  double t2755;
  double t2748;
  double t2749;
  double t2750;
  double t2757;
  double t2758;
  double t2759;
  double t2763;
  double t2764;
  double t2765;
  double t2770;
  double t2771;
  double t2777;
  double t2778;
  double t2779;
  double t2780;
  double t2781;
  double t2784;
  double t2786;
  double t2788;
  double t2797;
  double t2798;
  double t2801;
  double t2804;
  double t2805;
  double t2807;
  double t2808;
  double t2809;
  double t2865;
  double t2866;
  double t2867;
  double t2857;
  double t2859;
  double t2860;
  double t2862;
  double t2863;
  double t2864;
  double t2868;
  double t2870;
  double t2871;
  double t2874;
  double t2875;
  double t2879;
  double t2880;
  double t2883;
  double t2884;
  double t2885;
  double t2888;
  double t2889;
  double t2890;
  double t2937;
  double t2938;
  double t2939;
  double t2933;
  double t2934;
  double t2935;
  double t2940;
  double t2941;
  double t2943;
  double t2944;
  double t2945;
  double t2946;
  double t2948;
  double t2949;
  double t2999;
  double t3013;
  double t3005;
  double t2998;
  double t3004;
  double t3031;
  double t3033;
  double t3034;
  double t3016;
  double t3037;
  double t3011;
  double t3026;
  double t3041;
  double t3023;
  double t3053;
  double t2979;
  double t2986;
  t13 = Sin(var1[3]);
  t21 = Cos(var1[3]);
  t17 = Cos(var1[5]);
  t19 = Sin(var1[4]);
  t22 = Sin(var1[5]);
  t10 = Cos(var1[4]);
  t20 = t17*t13*t19;
  t25 = t21*t22;
  t26 = t20 + t25;
  t30 = t21*t17;
  t32 = -1.*t13*t19*t22;
  t34 = t30 + t32;
  t40 = Sin(var1[14]);
  t43 = Cos(var1[14]);
  t41 = -0.135*t10*t40*t13;
  t45 = -1.*t43;
  t47 = 1. + t45;
  t48 = -0.135*t47*t34;
  t64 = Cos(var1[15]);
  t69 = -1.*t64;
  t71 = 1. + t69;
  t73 = Sin(var1[15]);
  t49 = -1.*t10*t40*t13;
  t50 = t43*t34;
  t51 = t49 + t50;
  t55 = -1.*t43*t10*t13;
  t56 = -1.*t40*t34;
  t58 = t55 + t56;
  t72 = -0.049*t71;
  t74 = -0.135*t73;
  t76 = t72 + t74;
  t77 = t76*t26;
  t78 = -0.135*t71;
  t79 = 0.049*t73;
  t82 = t78 + t79;
  t83 = t82*t51;
  t86 = -1.*t73*t26;
  t88 = t64*t51;
  t90 = t86 + t88;
  t103 = Cos(var1[16]);
  t108 = -1.*t103;
  t109 = 1. + t108;
  t113 = Sin(var1[16]);
  t93 = t64*t26;
  t96 = t73*t51;
  t98 = t93 + t96;
  t111 = -0.09*t109;
  t116 = 0.049*t113;
  t119 = t111 + t116;
  t120 = t119*t58;
  t122 = -0.049*t109;
  t124 = -0.09*t113;
  t127 = t122 + t124;
  t131 = t127*t98;
  t132 = t113*t58;
  t134 = t103*t98;
  t135 = t132 + t134;
  t146 = Cos(var1[17]);
  t147 = -1.*t146;
  t148 = 1. + t147;
  t150 = Sin(var1[17]);
  t137 = t103*t58;
  t138 = -1.*t113*t98;
  t139 = t137 + t138;
  t149 = -0.049*t148;
  t154 = -0.21*t150;
  t157 = t149 + t154;
  t158 = t157*t135;
  t160 = -0.21*t148;
  t163 = 0.049*t150;
  t165 = t160 + t163;
  t166 = t165*t139;
  t172 = -1.*t150*t135;
  t174 = t146*t139;
  t175 = t172 + t174;
  t191 = Cos(var1[18]);
  t193 = -1.*t191;
  t194 = 1. + t193;
  t199 = Sin(var1[18]);
  t182 = t146*t135;
  t183 = t150*t139;
  t184 = t182 + t183;
  t197 = -0.27068*t194;
  t200 = 0.00159*t199;
  t202 = t197 + t200;
  t204 = t202*t175;
  t205 = -0.00159*t194;
  t206 = -0.27068*t199;
  t208 = t205 + t206;
  t209 = t208*t184;
  t210 = t199*t175;
  t212 = t191*t184;
  t213 = t210 + t212;
  t225 = Cos(var1[19]);
  t227 = -1.*t225;
  t228 = 1. + t227;
  t230 = Sin(var1[19]);
  t216 = t191*t175;
  t217 = -1.*t199*t184;
  t218 = t216 + t217;
  t255 = Cos(var1[20]);
  t256 = -1.*t255;
  t257 = 1. + t256;
  t261 = Sin(var1[20]);
  t229 = 0.01841*t228;
  t232 = -0.70544*t230;
  t233 = t229 + t232;
  t234 = t233*t213;
  t236 = -0.70544*t228;
  t237 = -0.01841*t230;
  t238 = t236 + t237;
  t239 = t238*t218;
  t268 = 0.005481192614*t257;
  t240 = -1.*t230*t213;
  t241 = t225*t218;
  t242 = t240 + t241;
  t259 = 0.07769774964800001*t257;
  t278 = -0.0004284921280000001*t257;
  t244 = t225*t213;
  t246 = t230*t218;
  t249 = t244 + t246;
  t301 = 0.005498*t261;
  t305 = 0.996943*t261;
  t286 = -0.077936*t261;
  t318 = 0.0004284921280000001*t257;
  t280 = -0.996943*t261;
  t328 = -0.005481192614*t257;
  t269 = 0.077936*t261;
  t313 = -0.07769774964800001*t257;
  t262 = -0.005498*t261;
  t357 = Cos(var1[21]);
  t359 = -1.*t357;
  t361 = 1. + t359;
  t365 = Sin(var1[21]);
  t42 = -0.0233*t26;
  t392 = Cos(var1[6]);
  t399 = Sin(var1[6]);
  t393 = -1.*t392;
  t394 = 1. + t393;
  t396 = 0.135*t394*t34;
  t402 = 0.135*t10*t13*t399;
  t409 = -1.*t10*t392*t13;
  t410 = -1.*t34*t399;
  t411 = t409 + t410;
  t404 = t392*t34;
  t405 = -1.*t10*t13*t399;
  t407 = t404 + t405;
  t418 = Cos(var1[7]);
  t419 = -1.*t418;
  t421 = 1. + t419;
  t427 = Sin(var1[7]);
  t426 = 0.135*t421;
  t430 = 0.049*t427;
  t431 = t426 + t430;
  t432 = t407*t431;
  t434 = -0.049*t421;
  t436 = 0.135*t427;
  t437 = t434 + t436;
  t440 = t26*t437;
  t441 = t418*t407;
  t442 = -1.*t26*t427;
  t443 = t441 + t442;
  t445 = t418*t26;
  t446 = t407*t427;
  t448 = t445 + t446;
  t455 = Cos(var1[8]);
  t456 = -1.*t455;
  t458 = 1. + t456;
  t461 = Sin(var1[8]);
  t460 = -0.049*t458;
  t462 = -0.09*t461;
  t463 = t460 + t462;
  t464 = t448*t463;
  t465 = -0.09*t458;
  t466 = 0.049*t461;
  t467 = t465 + t466;
  t469 = t411*t467;
  t470 = t455*t448;
  t471 = t411*t461;
  t472 = t470 + t471;
  t485 = Cos(var1[9]);
  t486 = -1.*t485;
  t488 = 1. + t486;
  t490 = Sin(var1[9]);
  t474 = t455*t411;
  t478 = -1.*t448*t461;
  t480 = t474 + t478;
  t489 = -0.049*t488;
  t492 = -0.21*t490;
  t494 = t489 + t492;
  t495 = t494*t472;
  t496 = -0.21*t488;
  t501 = 0.049*t490;
  t504 = t496 + t501;
  t506 = t504*t480;
  t511 = -1.*t490*t472;
  t512 = t485*t480;
  t513 = t511 + t512;
  t527 = Cos(var1[10]);
  t530 = -1.*t527;
  t531 = 1. + t530;
  t533 = Sin(var1[10]);
  t516 = t485*t472;
  t517 = t490*t480;
  t518 = t516 + t517;
  t532 = -0.27068*t531;
  t534 = 0.00159*t533;
  t536 = t532 + t534;
  t539 = t536*t513;
  t540 = -0.00159*t531;
  t541 = -0.27068*t533;
  t542 = t540 + t541;
  t544 = t542*t518;
  t547 = t533*t513;
  t549 = t527*t518;
  t551 = t547 + t549;
  t565 = Cos(var1[11]);
  t567 = -1.*t565;
  t568 = 1. + t567;
  t570 = Sin(var1[11]);
  t554 = t527*t513;
  t555 = -1.*t533*t518;
  t556 = t554 + t555;
  t601 = Cos(var1[12]);
  t602 = -1.*t601;
  t606 = 1. + t602;
  t611 = Sin(var1[12]);
  t569 = 0.01841*t568;
  t574 = -0.70544*t570;
  t576 = t569 + t574;
  t577 = t576*t551;
  t579 = -0.70544*t568;
  t583 = -0.01841*t570;
  t584 = t579 + t583;
  t585 = t584*t556;
  t608 = -0.005481192614*t606;
  t587 = -1.*t570*t551;
  t589 = t565*t556;
  t590 = t587 + t589;
  t618 = -0.07769774964800001*t606;
  t632 = -0.0004284921280000001*t606;
  t592 = t565*t551;
  t593 = t570*t556;
  t594 = t592 + t593;
  t646 = -0.005498*t611;
  t651 = 0.996943*t611;
  t637 = 0.077936*t611;
  t663 = 0.0004284921280000001*t606;
  t634 = -0.996943*t611;
  t678 = 0.005481192614*t606;
  t613 = -0.077936*t611;
  t659 = 0.07769774964800001*t606;
  t621 = 0.005498*t611;
  t713 = Cos(var1[13]);
  t714 = -1.*t713;
  t716 = 1. + t714;
  t722 = Sin(var1[13]);
  t765 = -0.135*t21*t40*t19;
  t769 = -0.135*t47*t21*t10*t22;
  t770 = -1.*t21*t40*t19;
  t771 = t43*t21*t10*t22;
  t772 = t770 + t771;
  t776 = -1.*t43*t21*t19;
  t777 = -1.*t21*t10*t40*t22;
  t778 = t776 + t777;
  t784 = -1.*t21*t10*t17*t76;
  t787 = t82*t772;
  t790 = t21*t10*t17*t73;
  t793 = t64*t772;
  t794 = t790 + t793;
  t797 = -1.*t64*t21*t10*t17;
  t798 = t73*t772;
  t799 = t797 + t798;
  t808 = t119*t778;
  t813 = t127*t799;
  t814 = t113*t778;
  t815 = t103*t799;
  t817 = t814 + t815;
  t820 = t103*t778;
  t823 = -1.*t113*t799;
  t824 = t820 + t823;
  t834 = t157*t817;
  t838 = t165*t824;
  t839 = -1.*t150*t817;
  t841 = t146*t824;
  t843 = t839 + t841;
  t845 = t146*t817;
  t849 = t150*t824;
  t851 = t845 + t849;
  t862 = t202*t843;
  t864 = t208*t851;
  t866 = t199*t843;
  t867 = t191*t851;
  t868 = t866 + t867;
  t875 = t191*t843;
  t876 = -1.*t199*t851;
  t880 = t875 + t876;
  t254 = 2.1934241414728571e-7*var1[20];
  t258 = -0.000033783761634830594*t257;
  t264 = t259 + t262;
  t266 = -0.021877537552*t264;
  t270 = t268 + t269;
  t271 = -0.6934341012630001*t270;
  t272 = t254 + t258 + t266 + t271;
  t891 = t233*t868;
  t894 = t238*t880;
  t275 = -1.2096424700126054e-9*var1[20];
  t276 = -0.6934128581485427*t257;
  t281 = t278 + t280;
  t282 = -0.021877537552*t281;
  t288 = t268 + t286;
  t290 = -0.005534467322*t288;
  t291 = t275 + t276 + t282 + t290;
  t895 = -1.*t230*t868;
  t896 = t225*t880;
  t897 = t895 + t896;
  t297 = -1.7147089040178687e-8*var1[20];
  t299 = -0.021744644052735636*t257;
  t302 = t259 + t301;
  t303 = -0.005534467322*t302;
  t306 = t278 + t305;
  t307 = -0.6934341012630001*t306;
  t309 = t297 + t299 + t303 + t307;
  t900 = t225*t868;
  t901 = t230*t880;
  t903 = t900 + t901;
  t315 = t313 + t301;
  t319 = t318 + t305;
  t322 = -0.993925573253*t257;
  t323 = 1. + t322;
  t330 = t328 + t286;
  t332 = -0.999969365345*t257;
  t334 = 1. + t332;
  t336 = t318 + t280;
  t340 = -0.006104248100000001*t257;
  t341 = 1. + t340;
  t343 = t328 + t269;
  t346 = t313 + t262;
  t362 = -1.11344*t361;
  t366 = 0.02159*t365;
  t367 = t362 + t366;
  t374 = -0.02159*t361;
  t375 = -1.11344*t365;
  t376 = t374 + t375;
  t764 = 0.0233*t21*t10*t17;
  t972 = 0.135*t21*t10*t394*t22;
  t974 = 0.135*t21*t19*t399;
  t979 = -1.*t21*t392*t19;
  t980 = -1.*t21*t10*t22*t399;
  t984 = t979 + t980;
  t975 = t21*t10*t392*t22;
  t976 = -1.*t21*t19*t399;
  t977 = t975 + t976;
  t996 = t977*t431;
  t998 = -1.*t21*t10*t17*t437;
  t999 = t418*t977;
  t1003 = t21*t10*t17*t427;
  t1007 = t999 + t1003;
  t1009 = -1.*t21*t10*t17*t418;
  t1012 = t977*t427;
  t1015 = t1009 + t1012;
  t1023 = t1015*t463;
  t1024 = t984*t467;
  t1025 = t455*t1015;
  t1028 = t984*t461;
  t1029 = t1025 + t1028;
  t1033 = t455*t984;
  t1034 = -1.*t1015*t461;
  t1036 = t1033 + t1034;
  t1046 = t494*t1029;
  t1048 = t504*t1036;
  t1050 = -1.*t490*t1029;
  t1053 = t485*t1036;
  t1054 = t1050 + t1053;
  t1056 = t485*t1029;
  t1057 = t490*t1036;
  t1058 = t1056 + t1057;
  t1066 = t536*t1054;
  t1069 = t542*t1058;
  t1072 = t533*t1054;
  t1073 = t527*t1058;
  t1074 = t1072 + t1073;
  t1076 = t527*t1054;
  t1078 = -1.*t533*t1058;
  t1080 = t1076 + t1078;
  t600 = -2.1934241414728571e-7*var1[12];
  t607 = 0.000033783761634830594*t606;
  t615 = t608 + t613;
  t616 = -0.6934341012630001*t615;
  t622 = t618 + t621;
  t623 = -0.021877537552*t622;
  t624 = t600 + t607 + t616 + t623;
  t1088 = t576*t1074;
  t1089 = t584*t1080;
  t629 = -1.2096424700126054e-9*var1[12];
  t630 = -0.6934128581485427*t606;
  t635 = t632 + t634;
  t636 = -0.021877537552*t635;
  t639 = t608 + t637;
  t640 = 0.005534467322*t639;
  t641 = t629 + t630 + t636 + t640;
  t1090 = -1.*t570*t1074;
  t1092 = t565*t1080;
  t1093 = t1090 + t1092;
  t644 = -1.7147089040178687e-8*var1[12];
  t645 = -0.021744644052735636*t606;
  t648 = t618 + t646;
  t649 = 0.005534467322*t648;
  t654 = t632 + t651;
  t656 = -0.6934341012630001*t654;
  t657 = t644 + t645 + t649 + t656;
  t1098 = t565*t1074;
  t1099 = t570*t1080;
  t1100 = t1098 + t1099;
  t661 = t659 + t646;
  t665 = t663 + t651;
  t668 = -0.993925573253*t606;
  t670 = 1. + t668;
  t679 = t678 + t637;
  t682 = -0.999969365345*t606;
  t684 = 1. + t682;
  t688 = t663 + t634;
  t697 = -0.006104248100000001*t606;
  t699 = 1. + t697;
  t701 = t678 + t613;
  t704 = t659 + t621;
  t719 = -1.11344*t716;
  t723 = 0.02159*t722;
  t724 = t719 + t723;
  t727 = -0.02159*t716;
  t728 = -1.11344*t722;
  t732 = t727 + t728;
  t1165 = t21*t17*t19;
  t1166 = -1.*t13*t22;
  t1169 = t1165 + t1166;
  t1176 = t17*t13;
  t1179 = t21*t19*t22;
  t1180 = t1176 + t1179;
  t1170 = -0.135*t47*t1169;
  t1193 = t43*t82*t1169;
  t1196 = t76*t1180;
  t1197 = t43*t73*t1169;
  t1199 = t64*t1180;
  t1200 = t1197 + t1199;
  t1203 = t43*t64*t1169;
  t1204 = -1.*t73*t1180;
  t1206 = t1203 + t1204;
  t1213 = -1.*t40*t119*t1169;
  t1214 = t127*t1200;
  t1217 = -1.*t40*t113*t1169;
  t1219 = t103*t1200;
  t1220 = t1217 + t1219;
  t1224 = -1.*t103*t40*t1169;
  t1227 = -1.*t113*t1200;
  t1229 = t1224 + t1227;
  t1239 = t157*t1220;
  t1240 = t165*t1229;
  t1241 = -1.*t150*t1220;
  t1244 = t146*t1229;
  t1250 = t1241 + t1244;
  t1254 = t146*t1220;
  t1255 = t150*t1229;
  t1256 = t1254 + t1255;
  t1270 = t202*t1250;
  t1271 = t208*t1256;
  t1273 = t199*t1250;
  t1274 = t191*t1256;
  t1277 = t1273 + t1274;
  t1280 = t191*t1250;
  t1282 = -1.*t199*t1256;
  t1283 = t1280 + t1282;
  t1290 = t233*t1277;
  t1291 = t238*t1283;
  t1293 = -1.*t230*t1277;
  t1294 = t225*t1283;
  t1295 = t1293 + t1294;
  t1300 = t225*t1277;
  t1301 = t230*t1283;
  t1302 = t1300 + t1301;
  t1182 = -0.0233*t1180;
  t1369 = 0.135*t394*t1169;
  t1379 = t392*t1169*t431;
  t1380 = t1180*t437;
  t1387 = t392*t418*t1169;
  t1388 = -1.*t1180*t427;
  t1389 = t1387 + t1388;
  t1381 = t418*t1180;
  t1383 = t392*t1169*t427;
  t1384 = t1381 + t1383;
  t1396 = t1384*t463;
  t1397 = -1.*t1169*t399*t467;
  t1399 = t455*t1384;
  t1400 = -1.*t1169*t399*t461;
  t1401 = t1399 + t1400;
  t1404 = -1.*t455*t1169*t399;
  t1405 = -1.*t1384*t461;
  t1408 = t1404 + t1405;
  t1416 = t494*t1401;
  t1417 = t504*t1408;
  t1419 = -1.*t490*t1401;
  t1421 = t485*t1408;
  t1424 = t1419 + t1421;
  t1427 = t485*t1401;
  t1428 = t490*t1408;
  t1432 = t1427 + t1428;
  t1443 = t536*t1424;
  t1444 = t542*t1432;
  t1445 = t533*t1424;
  t1447 = t527*t1432;
  t1449 = t1445 + t1447;
  t1453 = t527*t1424;
  t1455 = -1.*t533*t1432;
  t1457 = t1453 + t1455;
  t1468 = t576*t1449;
  t1469 = t584*t1457;
  t1471 = -1.*t570*t1449;
  t1472 = t565*t1457;
  t1473 = t1471 + t1472;
  t1476 = t565*t1449;
  t1477 = t570*t1457;
  t1479 = t1476 + t1477;
  t1540 = -0.135*t21*t10*t392;
  t1541 = 0.135*t1180*t399;
  t1543 = -1.*t392*t1180;
  t1545 = -1.*t21*t10*t399;
  t1546 = t1543 + t1545;
  t1548 = t21*t10*t392;
  t1549 = -1.*t1180*t399;
  t1550 = t1548 + t1549;
  t1558 = t1550*t431;
  t1565 = t1550*t427*t463;
  t1567 = t1546*t467;
  t1568 = t455*t1550*t427;
  t1570 = t1546*t461;
  t1571 = t1568 + t1570;
  t1573 = t455*t1546;
  t1574 = -1.*t1550*t427*t461;
  t1575 = t1573 + t1574;
  t1583 = t494*t1571;
  t1588 = t504*t1575;
  t1589 = -1.*t490*t1571;
  t1590 = t485*t1575;
  t1591 = t1589 + t1590;
  t1594 = t485*t1571;
  t1595 = t490*t1575;
  t1596 = t1594 + t1595;
  t1604 = t536*t1591;
  t1605 = t542*t1596;
  t1606 = t533*t1591;
  t1607 = t527*t1596;
  t1609 = t1606 + t1607;
  t1612 = t527*t1591;
  t1613 = -1.*t533*t1596;
  t1614 = t1612 + t1613;
  t1620 = t576*t1609;
  t1621 = t584*t1614;
  t1623 = -1.*t570*t1609;
  t1625 = t565*t1614;
  t1627 = t1623 + t1625;
  t1629 = t565*t1609;
  t1630 = t570*t1614;
  t1632 = t1629 + t1630;
  t1696 = t392*t1180;
  t1698 = t21*t10*t399;
  t1699 = t1696 + t1698;
  t1689 = -1.*t21*t17*t19;
  t1690 = t13*t22;
  t1691 = t1689 + t1690;
  t1692 = 0.135*t418;
  t1693 = -0.049*t427;
  t1694 = t1692 + t1693;
  t1695 = t1691*t1694;
  t1700 = 0.049*t418;
  t1702 = t1700 + t436;
  t1703 = t1699*t1702;
  t1704 = t418*t1699;
  t1706 = -1.*t1691*t427;
  t1707 = t1704 + t1706;
  t1710 = -1.*t418*t1691;
  t1711 = -1.*t1699*t427;
  t1712 = t1710 + t1711;
  t1721 = t1707*t463;
  t1727 = t455*t494*t1707;
  t1730 = -1.*t504*t1707*t461;
  t1732 = -1.*t455*t490*t1707;
  t1733 = -1.*t485*t1707*t461;
  t1736 = t1732 + t1733;
  t1738 = t485*t455*t1707;
  t1739 = -1.*t490*t1707*t461;
  t1741 = t1738 + t1739;
  t1747 = t536*t1736;
  t1748 = t542*t1741;
  t1749 = t533*t1736;
  t1750 = t527*t1741;
  t1751 = t1749 + t1750;
  t1754 = t527*t1736;
  t1755 = -1.*t533*t1741;
  t1757 = t1754 + t1755;
  t1762 = t576*t1751;
  t1763 = t584*t1757;
  t1765 = -1.*t570*t1751;
  t1766 = t565*t1757;
  t1767 = t1765 + t1766;
  t1770 = t565*t1751;
  t1775 = t570*t1757;
  t1776 = t1770 + t1775;
  t1837 = t418*t1691;
  t1839 = t1699*t427;
  t1840 = t1837 + t1839;
  t1833 = 0.049*t455;
  t1835 = t1833 + t462;
  t1836 = t1550*t1835;
  t1841 = -0.09*t455;
  t1842 = -0.049*t461;
  t1843 = t1841 + t1842;
  t1844 = t1840*t1843;
  t1845 = -1.*t455*t1840;
  t1847 = -1.*t1550*t461;
  t1848 = t1845 + t1847;
  t1853 = t455*t1550;
  t1854 = -1.*t1840*t461;
  t1856 = t1853 + t1854;
  t1862 = t504*t1848;
  t1863 = t494*t1856;
  t1865 = t490*t1848;
  t1866 = t485*t1856;
  t1870 = t1865 + t1866;
  t1872 = t485*t1848;
  t1873 = -1.*t490*t1856;
  t1876 = t1872 + t1873;
  t1881 = t542*t1870;
  t1884 = t536*t1876;
  t1886 = -1.*t533*t1870;
  t1887 = t527*t1876;
  t1888 = t1886 + t1887;
  t1890 = t527*t1870;
  t1892 = t533*t1876;
  t1894 = t1890 + t1892;
  t1899 = t584*t1888;
  t1902 = t576*t1894;
  t1903 = t570*t1888;
  t1904 = t565*t1894;
  t1905 = t1903 + t1904;
  t1908 = t565*t1888;
  t1909 = -1.*t570*t1894;
  t1910 = t1908 + t1909;
  t1965 = t455*t1840;
  t1967 = t1550*t461;
  t1968 = t1965 + t1967;
  t1956 = -0.21*t485;
  t1959 = -0.049*t490;
  t1963 = t1956 + t1959;
  t1969 = t1963*t1968;
  t1970 = 0.049*t485;
  t1971 = t1970 + t492;
  t1972 = t1971*t1856;
  t1973 = -1.*t490*t1968;
  t1975 = t1973 + t1866;
  t1977 = -1.*t485*t1968;
  t1978 = t1977 + t1873;
  t1983 = t542*t1975;
  t1984 = t536*t1978;
  t1986 = -1.*t533*t1975;
  t1987 = t527*t1978;
  t1988 = t1986 + t1987;
  t1991 = t527*t1975;
  t1992 = t533*t1978;
  t1993 = t1991 + t1992;
  t2000 = t584*t1988;
  t2001 = t576*t1993;
  t2002 = t570*t1988;
  t2003 = t565*t1993;
  t2004 = t2002 + t2003;
  t2007 = t565*t1988;
  t2008 = -1.*t570*t1993;
  t2009 = t2007 + t2008;
  t2066 = t485*t1968;
  t2070 = t490*t1856;
  t2071 = t2066 + t2070;
  t2056 = 0.00159*t527;
  t2058 = t2056 + t541;
  t2059 = t2058*t1975;
  t2062 = -0.27068*t527;
  t2064 = -0.00159*t533;
  t2065 = t2062 + t2064;
  t2074 = t2065*t2071;
  t2075 = -1.*t527*t2071;
  t2076 = t1986 + t2075;
  t2078 = -1.*t533*t2071;
  t2079 = t1991 + t2078;
  t2083 = t584*t2076;
  t2087 = t576*t2079;
  t2088 = t570*t2076;
  t2089 = t565*t2079;
  t2090 = t2088 + t2089;
  t2092 = t565*t2076;
  t2094 = -1.*t570*t2079;
  t2096 = t2092 + t2094;
  t2143 = t533*t1975;
  t2144 = t527*t2071;
  t2147 = t2143 + t2144;
  t2138 = -0.70544*t565;
  t2139 = 0.01841*t570;
  t2141 = t2138 + t2139;
  t2148 = t2141*t2147;
  t2149 = -0.01841*t565;
  t2150 = t2149 + t574;
  t2151 = t2150*t2079;
  t2152 = -1.*t570*t2147;
  t2153 = t2152 + t2089;
  t2159 = -1.*t565*t2147;
  t2160 = t2159 + t2094;
  t2216 = -0.005481192614*t611;
  t2211 = -0.07769774964800001*t611;
  t2232 = -0.0004284921280000001*t611;
  t2227 = 0.077936*t601;
  t2231 = -0.996943*t601;
  t2253 = t565*t2147;
  t2254 = t570*t2079;
  t2255 = t2253 + t2254;
  t2215 = -0.077936*t601;
  t2257 = 0.005481192614*t611;
  t2210 = 0.005498*t601;
  t2239 = -0.005498*t601;
  t2273 = 0.07769774964800001*t611;
  t2242 = 0.996943*t601;
  t2263 = 0.0004284921280000001*t611;
  t2190 = -1.*t722*t2153;
  t2195 = t713*t2153;
  t2313 = 0.135*t43*t21*t10;
  t2314 = -0.135*t40*t1180;
  t2316 = -1.*t21*t10*t40;
  t2319 = -1.*t43*t1180;
  t2322 = t2316 + t2319;
  t2324 = t43*t21*t10;
  t2325 = -1.*t40*t1180;
  t2328 = t2324 + t2325;
  t2338 = t82*t2328;
  t2343 = t119*t2322;
  t2345 = t73*t127*t2328;
  t2346 = t113*t2322;
  t2348 = t103*t73*t2328;
  t2349 = t2346 + t2348;
  t2352 = t103*t2322;
  t2355 = -1.*t73*t113*t2328;
  t2356 = t2352 + t2355;
  t2364 = t157*t2349;
  t2366 = t165*t2356;
  t2367 = -1.*t150*t2349;
  t2368 = t146*t2356;
  t2369 = t2367 + t2368;
  t2373 = t146*t2349;
  t2374 = t150*t2356;
  t2375 = t2373 + t2374;
  t2382 = t202*t2369;
  t2383 = t208*t2375;
  t2384 = t199*t2369;
  t2385 = t191*t2375;
  t2386 = t2384 + t2385;
  t2388 = t191*t2369;
  t2389 = -1.*t199*t2375;
  t2391 = t2388 + t2389;
  t2399 = t233*t2386;
  t2402 = t238*t2391;
  t2403 = -1.*t230*t2386;
  t2404 = t225*t2391;
  t2405 = t2403 + t2404;
  t2407 = t225*t2386;
  t2409 = t230*t2391;
  t2410 = t2407 + t2409;
  t2484 = t21*t10*t40;
  t2485 = t43*t1180;
  t2486 = t2484 + t2485;
  t2489 = -1.*t73*t1691;
  t2490 = t64*t2486;
  t2497 = t2489 + t2490;
  t2476 = -0.135*t64;
  t2478 = -0.049*t73;
  t2480 = t2476 + t2478;
  t2481 = t2480*t1691;
  t2482 = 0.049*t64;
  t2483 = t2482 + t74;
  t2487 = t2483*t2486;
  t2501 = -1.*t64*t1691;
  t2504 = -1.*t73*t2486;
  t2505 = t2501 + t2504;
  t2499 = t127*t2497;
  t2514 = t103*t157*t2497;
  t2516 = -1.*t113*t165*t2497;
  t2519 = -1.*t146*t113*t2497;
  t2520 = -1.*t103*t150*t2497;
  t2521 = t2519 + t2520;
  t2523 = t103*t146*t2497;
  t2524 = -1.*t113*t150*t2497;
  t2525 = t2523 + t2524;
  t2531 = t202*t2521;
  t2532 = t208*t2525;
  t2533 = t199*t2521;
  t2535 = t191*t2525;
  t2536 = t2533 + t2535;
  t2541 = t191*t2521;
  t2542 = -1.*t199*t2525;
  t2543 = t2541 + t2542;
  t2549 = t233*t2536;
  t2550 = t238*t2543;
  t2551 = -1.*t230*t2536;
  t2553 = t225*t2543;
  t2555 = t2551 + t2553;
  t2557 = t225*t2536;
  t2558 = t230*t2543;
  t2559 = t2557 + t2558;
  t2633 = t64*t1691;
  t2634 = t73*t2486;
  t2635 = t2633 + t2634;
  t2621 = 0.049*t103;
  t2622 = t2621 + t124;
  t2625 = t2622*t2328;
  t2626 = -0.09*t103;
  t2628 = -0.049*t113;
  t2630 = t2626 + t2628;
  t2638 = t2630*t2635;
  t2642 = -1.*t113*t2328;
  t2643 = -1.*t103*t2635;
  t2644 = t2642 + t2643;
  t2647 = t103*t2328;
  t2648 = -1.*t113*t2635;
  t2649 = t2647 + t2648;
  t2654 = t165*t2644;
  t2656 = t157*t2649;
  t2658 = t150*t2644;
  t2660 = t146*t2649;
  t2661 = t2658 + t2660;
  t2663 = t146*t2644;
  t2665 = -1.*t150*t2649;
  t2668 = t2663 + t2665;
  t2674 = t208*t2661;
  t2675 = t202*t2668;
  t2676 = -1.*t199*t2661;
  t2677 = t191*t2668;
  t2678 = t2676 + t2677;
  t2681 = t191*t2661;
  t2682 = t199*t2668;
  t2684 = t2681 + t2682;
  t2689 = t238*t2678;
  t2691 = t233*t2684;
  t2695 = t230*t2678;
  t2696 = t225*t2684;
  t2697 = t2695 + t2696;
  t2699 = t225*t2678;
  t2700 = -1.*t230*t2684;
  t2701 = t2699 + t2700;
  t2751 = t113*t2328;
  t2754 = t103*t2635;
  t2755 = t2751 + t2754;
  t2748 = -0.21*t146;
  t2749 = -0.049*t150;
  t2750 = t2748 + t2749;
  t2757 = t2750*t2755;
  t2758 = 0.049*t146;
  t2759 = t2758 + t154;
  t2763 = t2759*t2649;
  t2764 = -1.*t150*t2755;
  t2765 = t2764 + t2660;
  t2770 = -1.*t146*t2755;
  t2771 = t2770 + t2665;
  t2777 = t208*t2765;
  t2778 = t202*t2771;
  t2779 = -1.*t199*t2765;
  t2780 = t191*t2771;
  t2781 = t2779 + t2780;
  t2784 = t191*t2765;
  t2786 = t199*t2771;
  t2788 = t2784 + t2786;
  t2797 = t238*t2781;
  t2798 = t233*t2788;
  t2801 = t230*t2781;
  t2804 = t225*t2788;
  t2805 = t2801 + t2804;
  t2807 = t225*t2781;
  t2808 = -1.*t230*t2788;
  t2809 = t2807 + t2808;
  t2865 = t146*t2755;
  t2866 = t150*t2649;
  t2867 = t2865 + t2866;
  t2857 = 0.00159*t191;
  t2859 = t2857 + t206;
  t2860 = t2859*t2765;
  t2862 = -0.27068*t191;
  t2863 = -0.00159*t199;
  t2864 = t2862 + t2863;
  t2868 = t2864*t2867;
  t2870 = -1.*t191*t2867;
  t2871 = t2779 + t2870;
  t2874 = -1.*t199*t2867;
  t2875 = t2784 + t2874;
  t2879 = t238*t2871;
  t2880 = t233*t2875;
  t2883 = t230*t2871;
  t2884 = t225*t2875;
  t2885 = t2883 + t2884;
  t2888 = t225*t2871;
  t2889 = -1.*t230*t2875;
  t2890 = t2888 + t2889;
  t2937 = t199*t2765;
  t2938 = t191*t2867;
  t2939 = t2937 + t2938;
  t2933 = -0.70544*t225;
  t2934 = 0.01841*t230;
  t2935 = t2933 + t2934;
  t2940 = t2935*t2939;
  t2941 = -0.01841*t225;
  t2943 = t2941 + t232;
  t2944 = t2943*t2875;
  t2945 = -1.*t230*t2939;
  t2946 = t2945 + t2884;
  t2948 = -1.*t225*t2939;
  t2949 = t2948 + t2889;
  t2999 = 0.005481192614*t261;
  t3013 = -0.0004284921280000001*t261;
  t3005 = 0.07769774964800001*t261;
  t2998 = 0.077936*t255;
  t3004 = -0.005498*t255;
  t3031 = t225*t2939;
  t3033 = t230*t2875;
  t3034 = t3031 + t3033;
  t3016 = -0.077936*t255;
  t3037 = -0.005481192614*t261;
  t3011 = -0.996943*t255;
  t3026 = 0.005498*t255;
  t3041 = -0.07769774964800001*t261;
  t3023 = 0.996943*t255;
  t3053 = 0.0004284921280000001*t261;
  t2979 = -1.*t365*t2946;
  t2986 = t357*t2946;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=340.17893712;
  p_output1[3]=101.3373*(-0.02841*t10*t13 + 0.05066*t26 + 0.000346*t34) + 19.28261448*(t396 + t402 + 0.1351*t407 + 0.01793*t411 + t42) + 12.915924480000001*(t396 + t402 - 0.0343*t411 + t432 + t440 + 0.135*t443 - 0.049*t448) + 56.8222668*(t396 + t402 + t432 + t440 + 0.17081*t443 + t464 + t469 - 0.04895*t472 - 0.14946*t480) + 10.105084800000002*(t396 + t402 + t432 + t440 + 0.132168*t443 + t464 + t469 + t495 + t506 - 0.255862*t513 - 0.007761*t518) + 7.48503*(t396 + t402 + t432 + t440 + 0.130288*t443 + t464 + t469 + t495 + t506 + t539 + t544 - 0.000421*t551 - 0.45406*t556) + 19.28261448*(t41 + t42 + t48 - 0.1351*t51 + 0.01793*t58) + 10.1043*(t396 + t402 + t432 + t440 + 0.127241*t443 + t464 + t469 + t495 + t506 + t539 + t544 + t577 + t585 - 0.826587*t590 - 0.004179*t594) + 1.2360600000000002*(t396 + t402 + t432 + t440 + t464 + t469 + t495 + t506 + t539 + t544 + t577 + t585 + t443*t624 + t590*t641 + t594*t657 + 0.01889*(t443*t661 + t590*t665 + t594*t670) - 0.617968*(t443*t679 + t590*t684 + t594*t688) + 0.126739*(t443*t699 + t590*t701 + t594*t704)) + 1.469538*(t396 + t402 + t432 + t440 + 0.13064*t443 + t464 + t469 + t495 + t506 + t539 + t544 + t577 + t585 + 0.00589*(t594*t713 + t590*t722) - 1.11818*(t590*t713 - 1.*t594*t722) + t590*t724 + t594*t732) + 56.8222668*(t120 + t131 - 0.04895*t135 - 0.14946*t139 + t41 + t48 + t77 + t83 - 0.17081*t90) + 10.105084800000002*(t120 + t131 + t158 + t166 - 0.255862*t175 - 0.007761*t184 + t41 + t48 + t77 + t83 - 0.132168*t90) + 1.469538*(t120 + t131 + t158 + t166 + t204 + t209 + t234 + t239 + 0.00589*(t249*t357 + t242*t365) - 1.11818*(t242*t357 - 1.*t249*t365) + t242*t367 + t249*t376 + t41 + t48 + t77 + t83 - 0.13064*t90) + 7.48503*(t120 + t131 + t158 + t166 + t204 + t209 - 0.000421*t213 - 0.45406*t218 + t41 + t48 + t77 + t83 - 0.130288*t90) + 10.1043*(t120 + t131 + t158 + t166 + t204 + t209 + t234 + t239 - 0.826587*t242 - 0.004179*t249 + t41 + t48 + t77 + t83 - 0.127241*t90) + 1.2360600000000002*(t120 + t131 + t158 + t166 + t204 + t209 + t234 + t239 + t242*t291 + t249*t309 + t41 + t48 + t77 + t83 + t272*t90 + 0.01889*(t242*t319 + t249*t323 + t315*t90) - 0.617968*(t242*t334 + t249*t336 + t330*t90) - 0.126739*(t242*t343 + t249*t346 + t341*t90)) + 12.915924480000001*(t41 + t48 - 0.0343*t58 + t77 + t83 - 0.135*t90 - 0.049*t98);
  p_output1[4]=101.3373*(-0.05066*t10*t17*t21 - 0.02841*t19*t21 + 0.000346*t10*t21*t22) + 19.28261448*(t764 + t765 + t769 - 0.1351*t772 + 0.01793*t778) + 12.915924480000001*(t765 + t769 - 0.0343*t778 + t784 + t787 - 0.135*t794 - 0.049*t799) + 56.8222668*(t765 + t769 + t784 + t787 - 0.17081*t794 + t808 + t813 - 0.04895*t817 - 0.14946*t824) + 10.105084800000002*(t765 + t769 + t784 + t787 - 0.132168*t794 + t808 + t813 + t834 + t838 - 0.255862*t843 - 0.007761*t851) + 7.48503*(t765 + t769 + t784 + t787 - 0.130288*t794 + t808 + t813 + t834 + t838 + t862 + t864 - 0.000421*t868 - 0.45406*t880) + 10.1043*(t765 + t769 + t784 + t787 - 0.127241*t794 + t808 + t813 + t834 + t838 + t862 + t864 + t891 + t894 - 0.826587*t897 - 0.004179*t903) + 1.2360600000000002*(t765 + t769 + t784 + t787 + t272*t794 + t808 + t813 + t834 + t838 + t862 + t864 + t891 + t894 + t291*t897 + t309*t903 + 0.01889*(t315*t794 + t319*t897 + t323*t903) - 0.617968*(t330*t794 + t334*t897 + t336*t903) - 0.126739*(t341*t794 + t343*t897 + t346*t903)) + 1.469538*(t765 + t769 + t784 + t787 - 0.13064*t794 + t808 + t813 + t834 + t838 + t862 + t864 + t891 + t894 + t367*t897 + t376*t903 + 0.00589*(t365*t897 + t357*t903) - 1.11818*(t357*t897 - 1.*t365*t903)) + 19.28261448*(t764 + t972 + t974 + 0.1351*t977 + 0.01793*t984) + 56.8222668*(0.17081*t1007 + t1023 + t1024 - 0.04895*t1029 - 0.14946*t1036 + t972 + t974 + t996 + t998) + 10.105084800000002*(0.132168*t1007 + t1023 + t1024 + t1046 + t1048 - 0.255862*t1054 - 0.007761*t1058 + t972 + t974 + t996 + t998) + 7.48503*(0.130288*t1007 + t1023 + t1024 + t1046 + t1048 + t1066 + t1069 - 0.000421*t1074 - 0.45406*t1080 + t972 + t974 + t996 + t998) + 10.1043*(0.127241*t1007 + t1023 + t1024 + t1046 + t1048 + t1066 + t1069 + t1088 + t1089 - 0.826587*t1093 - 0.004179*t1100 + t972 + t974 + t996 + t998) + 1.2360600000000002*(t1023 + t1024 + t1046 + t1048 + t1066 + t1069 + t1088 + t1089 + t1007*t624 + t1093*t641 + t1100*t657 + 0.01889*(t1007*t661 + t1093*t665 + t1100*t670) - 0.617968*(t1007*t679 + t1093*t684 + t1100*t688) + 0.126739*(t1007*t699 + t1093*t701 + t1100*t704) + t972 + t974 + t996 + t998) + 1.469538*(0.13064*t1007 + t1023 + t1024 + t1046 + t1048 + t1066 + t1069 + t1088 + t1089 + 0.00589*(t1100*t713 + t1093*t722) - 1.11818*(t1093*t713 - 1.*t1100*t722) + t1093*t724 + t1100*t732 + t972 + t974 + t996 + t998) + 12.915924480000001*(0.135*t1007 - 0.049*t1015 + t972 + t974 - 0.0343*t984 + t996 + t998);
  p_output1[5]=101.3373*(0.000346*t1169 + 0.05066*t1180) + 56.8222668*(t1170 + t1193 + t1196 - 0.17081*t1206 + t1213 + t1214 - 0.04895*t1220 - 0.14946*t1229) + 10.105084800000002*(t1170 + t1193 + t1196 - 0.132168*t1206 + t1213 + t1214 + t1239 + t1240 - 0.255862*t1250 - 0.007761*t1256) + 7.48503*(t1170 + t1193 + t1196 - 0.130288*t1206 + t1213 + t1214 + t1239 + t1240 + t1270 + t1271 - 0.000421*t1277 - 0.45406*t1283) + 10.1043*(t1170 + t1193 + t1196 - 0.127241*t1206 + t1213 + t1214 + t1239 + t1240 + t1270 + t1271 + t1290 + t1291 - 0.826587*t1295 - 0.004179*t1302) + 56.8222668*(t1369 + t1379 + t1380 + 0.17081*t1389 + t1396 + t1397 - 0.04895*t1401 - 0.14946*t1408) + 10.105084800000002*(t1369 + t1379 + t1380 + 0.132168*t1389 + t1396 + t1397 + t1416 + t1417 - 0.255862*t1424 - 0.007761*t1432) + 7.48503*(t1369 + t1379 + t1380 + 0.130288*t1389 + t1396 + t1397 + t1416 + t1417 + t1443 + t1444 - 0.000421*t1449 - 0.45406*t1457) + 10.1043*(t1369 + t1379 + t1380 + 0.127241*t1389 + t1396 + t1397 + t1416 + t1417 + t1443 + t1444 + t1468 + t1469 - 0.826587*t1473 - 0.004179*t1479) + 1.2360600000000002*(t1170 + t1193 + t1196 + t1213 + t1214 + t1239 + t1240 + t1270 + t1271 + t1290 + t1291 + t1206*t272 + t1295*t291 + t1302*t309 + 0.01889*(t1206*t315 + t1295*t319 + t1302*t323) - 0.617968*(t1206*t330 + t1295*t334 + t1302*t336) - 0.126739*(t1206*t341 + t1295*t343 + t1302*t346)) + 1.469538*(t1170 + t1193 + t1196 - 0.13064*t1206 + t1213 + t1214 + t1239 + t1240 + t1270 + t1271 + t1290 + t1291 + 0.00589*(t1302*t357 + t1295*t365) - 1.11818*(t1295*t357 - 1.*t1302*t365) + t1295*t367 + t1302*t376) + 19.28261448*(t1182 + t1369 + 0.1351*t1169*t392 - 0.01793*t1169*t399) + 12.915924480000001*(t1369 + t1379 + t1380 - 0.049*t1384 + 0.135*t1389 + 0.0343*t1169*t399) + 12.915924480000001*(t1170 + t1193 + t1196 - 0.049*t1200 - 0.135*t1206 + 0.0343*t1169*t40) + 19.28261448*(t1170 + t1182 - 0.01793*t1169*t40 - 0.1351*t1169*t43) + 1.2360600000000002*(t1369 + t1379 + t1380 + t1396 + t1397 + t1416 + t1417 + t1443 + t1444 + t1468 + t1469 + t1389*t624 + t1473*t641 + t1479*t657 + 0.01889*(t1389*t661 + t1473*t665 + t1479*t670) - 0.617968*(t1389*t679 + t1473*t684 + t1479*t688) + 0.126739*(t1389*t699 + t1473*t701 + t1479*t704)) + 1.469538*(t1369 + t1379 + t1380 + 0.13064*t1389 + t1396 + t1397 + t1416 + t1417 + t1443 + t1444 + t1468 + t1469 + 0.00589*(t1479*t713 + t1473*t722) - 1.11818*(t1473*t713 - 1.*t1479*t722) + t1473*t724 + t1479*t732);
  p_output1[6]=19.28261448*(t1540 + t1541 + 0.01793*t1546 + 0.1351*t1550) + 10.1043*(t1540 + t1541 + t1558 + t1565 + t1567 + t1583 + t1588 + t1604 + t1605 + t1620 + t1621 - 0.826587*t1627 - 0.004179*t1632 + 0.127241*t1550*t418) + 7.48503*(t1540 + t1541 + t1558 + t1565 + t1567 + t1583 + t1588 + t1604 + t1605 - 0.000421*t1609 - 0.45406*t1614 + 0.130288*t1550*t418) + 10.105084800000002*(t1540 + t1541 + t1558 + t1565 + t1567 + t1583 + t1588 - 0.255862*t1591 - 0.007761*t1596 + 0.132168*t1550*t418) + 56.8222668*(t1540 + t1541 + t1558 + t1565 + t1567 - 0.04895*t1571 - 0.14946*t1575 + 0.17081*t1550*t418) + 12.915924480000001*(t1540 + t1541 - 0.0343*t1546 + t1558 + 0.135*t1550*t418 - 0.049*t1550*t427) + 1.2360600000000002*(t1540 + t1541 + t1558 + t1565 + t1567 + t1583 + t1588 + t1604 + t1605 + t1620 + t1621 + t1550*t418*t624 + t1627*t641 + t1632*t657 + 0.01889*(t1550*t418*t661 + t1627*t665 + t1632*t670) - 0.617968*(t1550*t418*t679 + t1627*t684 + t1632*t688) + 0.126739*(t1550*t418*t699 + t1627*t701 + t1632*t704)) + 1.469538*(t1540 + t1541 + t1558 + t1565 + t1567 + t1583 + t1588 + t1604 + t1605 + t1620 + t1621 + 0.13064*t1550*t418 + 0.00589*(t1632*t713 + t1627*t722) - 1.11818*(t1627*t713 - 1.*t1632*t722) + t1627*t724 + t1632*t732);
  p_output1[7]=12.915924480000001*(t1695 + t1703 - 0.049*t1707 + 0.135*t1712) + 10.105084800000002*(t1695 + t1703 + 0.132168*t1712 + t1721 + t1727 + t1730 - 0.255862*t1736 - 0.007761*t1741) + 7.48503*(t1695 + t1703 + 0.130288*t1712 + t1721 + t1727 + t1730 + t1747 + t1748 - 0.000421*t1751 - 0.45406*t1757) + 10.1043*(t1695 + t1703 + 0.127241*t1712 + t1721 + t1727 + t1730 + t1747 + t1748 + t1762 + t1763 - 0.826587*t1767 - 0.004179*t1776) + 56.8222668*(t1695 + t1703 + 0.17081*t1712 + t1721 - 0.04895*t1707*t455 + 0.14946*t1707*t461) + 1.2360600000000002*(t1695 + t1703 + t1721 + t1727 + t1730 + t1747 + t1748 + t1762 + t1763 + t1712*t624 + t1767*t641 + t1776*t657 + 0.01889*(t1712*t661 + t1767*t665 + t1776*t670) - 0.617968*(t1712*t679 + t1767*t684 + t1776*t688) + 0.126739*(t1712*t699 + t1767*t701 + t1776*t704)) + 1.469538*(t1695 + t1703 + 0.13064*t1712 + t1721 + t1727 + t1730 + t1747 + t1748 + t1762 + t1763 + 0.00589*(t1776*t713 + t1767*t722) - 1.11818*(t1767*t713 - 1.*t1776*t722) + t1767*t724 + t1776*t732);
  p_output1[8]=56.8222668*(t1836 + t1844 - 0.14946*t1848 - 0.04895*t1856) + 10.105084800000002*(t1836 + t1844 + t1862 + t1863 - 0.007761*t1870 - 0.255862*t1876) + 7.48503*(t1836 + t1844 + t1862 + t1863 + t1881 + t1884 - 0.45406*t1888 - 0.000421*t1894) + 10.1043*(t1836 + t1844 + t1862 + t1863 + t1881 + t1884 + t1899 + t1902 - 0.004179*t1905 - 0.826587*t1910) + 1.2360600000000002*(t1836 + t1844 + t1862 + t1863 + t1881 + t1884 + t1899 + t1902 + t1910*t641 + t1905*t657 + 0.01889*(t1910*t665 + t1905*t670) - 0.617968*(t1910*t684 + t1905*t688) + 0.126739*(t1910*t701 + t1905*t704)) + 1.469538*(t1836 + t1844 + t1862 + t1863 + t1881 + t1884 + t1899 + t1902 - 1.11818*(t1910*t713 - 1.*t1905*t722) + 0.00589*(t1905*t713 + t1910*t722) + t1910*t724 + t1905*t732);
  p_output1[9]=10.105084800000002*(t1969 + t1972 - 0.007761*t1975 - 0.255862*t1978) + 7.48503*(t1969 + t1972 + t1983 + t1984 - 0.45406*t1988 - 0.000421*t1993) + 10.1043*(t1969 + t1972 + t1983 + t1984 + t2000 + t2001 - 0.004179*t2004 - 0.826587*t2009) + 1.2360600000000002*(t1969 + t1972 + t1983 + t1984 + t2000 + t2001 + t2009*t641 + t2004*t657 + 0.01889*(t2009*t665 + t2004*t670) - 0.617968*(t2009*t684 + t2004*t688) + 0.126739*(t2009*t701 + t2004*t704)) + 1.469538*(t1969 + t1972 + t1983 + t1984 + t2000 + t2001 - 1.11818*(t2009*t713 - 1.*t2004*t722) + 0.00589*(t2004*t713 + t2009*t722) + t2009*t724 + t2004*t732);
  p_output1[10]=7.48503*(t2059 + t2074 - 0.45406*t2076 - 0.000421*t2079) + 10.1043*(t2059 + t2074 + t2083 + t2087 - 0.004179*t2090 - 0.826587*t2096) + 1.2360600000000002*(t2059 + t2074 + t2083 + t2087 + t2096*t641 + t2090*t657 + 0.01889*(t2096*t665 + t2090*t670) - 0.617968*(t2096*t684 + t2090*t688) + 0.126739*(t2096*t701 + t2090*t704)) + 1.469538*(t2059 + t2074 + t2083 + t2087 - 1.11818*(t2096*t713 - 1.*t2090*t722) + 0.00589*(t2090*t713 + t2096*t722) + t2096*t724 + t2090*t732);
  p_output1[11]=10.1043*(t2148 + t2151 - 0.004179*t2153 - 0.826587*t2160) + 1.2360600000000002*(t2148 + t2151 + t2160*t641 + t2153*t657 + 0.01889*(t2160*t665 + t2153*t670) - 0.617968*(t2160*t684 + t2153*t688) + 0.126739*(t2160*t701 + t2153*t704)) + 1.469538*(t2148 + t2151 - 1.11818*(t2190 + t2160*t713) + 0.00589*(t2195 + t2160*t722) + t2160*t724 + t2153*t732);
  p_output1[12]=1.2360600000000002*(t2153*(-1.2096424700126054e-9 + 0.005534467322*(t2216 + t2227) - 0.021877537552*(t2231 + t2232) - 0.6934128581485427*t611) + t2255*(-1.7147089040178687e-8 + 0.005534467322*(t2211 + t2239) - 0.6934341012630001*(t2232 + t2242) - 0.021744644052735636*t611) + t1707*(-2.1934241414728571e-7 - 0.021877537552*(t2210 + t2211) - 0.6934341012630001*(t2215 + t2216) + 0.000033783761634830594*t611) + 0.126739*(t2153*(t2215 + t2257) + t2255*(t2210 + t2273) - 0.006104248100000001*t1707*t611) - 0.617968*(t1707*(t2227 + t2257) + t2255*(t2231 + t2263) - 0.999969365345*t2153*t611) + 0.01889*(t2153*(t2242 + t2263) + t1707*(t2239 + t2273) - 0.993925573253*t2255*t611));
  p_output1[13]=1.469538*(-1.11818*(t2190 - 1.*t2255*t713) + t2255*(-1.11344*t713 - 0.02159*t722) + 0.00589*(t2195 - 1.*t2255*t722) + t2153*(0.02159*t713 + t728));
  p_output1[14]=19.28261448*(t2313 + t2314 + 0.01793*t2322 - 0.1351*t2328) + 56.8222668*(t2313 + t2314 + t2338 + t2343 + t2345 - 0.04895*t2349 - 0.14946*t2356 - 0.17081*t2328*t64) + 10.105084800000002*(t2313 + t2314 + t2338 + t2343 + t2345 + t2364 + t2366 - 0.255862*t2369 - 0.007761*t2375 - 0.132168*t2328*t64) + 1.469538*(t2313 + t2314 + t2338 + t2343 + t2345 + t2364 + t2366 + t2382 + t2383 + t2399 + t2402 + 0.00589*(t2410*t357 + t2405*t365) - 1.11818*(t2405*t357 - 1.*t2410*t365) + t2405*t367 + t2410*t376 - 0.13064*t2328*t64) + 7.48503*(t2313 + t2314 + t2338 + t2343 + t2345 + t2364 + t2366 + t2382 + t2383 - 0.000421*t2386 - 0.45406*t2391 - 0.130288*t2328*t64) + 10.1043*(t2313 + t2314 + t2338 + t2343 + t2345 + t2364 + t2366 + t2382 + t2383 + t2399 + t2402 - 0.826587*t2405 - 0.004179*t2410 - 0.127241*t2328*t64) + 1.2360600000000002*(t2313 + t2314 + t2338 + t2343 + t2345 + t2364 + t2366 + t2382 + t2383 + t2399 + t2402 + t2405*t291 + t2410*t309 + t2328*t272*t64 + 0.01889*(t2405*t319 + t2410*t323 + t2328*t315*t64) - 0.617968*(t2405*t334 + t2410*t336 + t2328*t330*t64) - 0.126739*(t2405*t343 + t2410*t346 + t2328*t341*t64)) + 12.915924480000001*(t2313 + t2314 - 0.0343*t2322 + t2338 - 0.135*t2328*t64 - 0.049*t2328*t73);
  p_output1[15]=56.8222668*(t2481 + t2487 - 0.04895*t103*t2497 + 0.14946*t113*t2497 + t2499 - 0.17081*t2505) + 12.915924480000001*(t2481 + t2487 - 0.049*t2497 - 0.135*t2505) + 10.105084800000002*(t2481 + t2487 + t2499 - 0.132168*t2505 + t2514 + t2516 - 0.255862*t2521 - 0.007761*t2525) + 7.48503*(t2481 + t2487 + t2499 - 0.130288*t2505 + t2514 + t2516 + t2531 + t2532 - 0.000421*t2536 - 0.45406*t2543) + 10.1043*(t2481 + t2487 + t2499 - 0.127241*t2505 + t2514 + t2516 + t2531 + t2532 + t2549 + t2550 - 0.826587*t2555 - 0.004179*t2559) + 1.2360600000000002*(t2481 + t2487 + t2499 + t2514 + t2516 + t2531 + t2532 + t2549 + t2550 + t2505*t272 + t2555*t291 + t2559*t309 + 0.01889*(t2505*t315 + t2555*t319 + t2559*t323) - 0.617968*(t2505*t330 + t2555*t334 + t2559*t336) - 0.126739*(t2505*t341 + t2555*t343 + t2559*t346)) + 1.469538*(t2481 + t2487 + t2499 - 0.13064*t2505 + t2514 + t2516 + t2531 + t2532 + t2549 + t2550 + 0.00589*(t2559*t357 + t2555*t365) - 1.11818*(t2555*t357 - 1.*t2559*t365) + t2555*t367 + t2559*t376);
  p_output1[16]=56.8222668*(t2625 + t2638 - 0.14946*t2644 - 0.04895*t2649) + 10.105084800000002*(t2625 + t2638 + t2654 + t2656 - 0.007761*t2661 - 0.255862*t2668) + 7.48503*(t2625 + t2638 + t2654 + t2656 + t2674 + t2675 - 0.45406*t2678 - 0.000421*t2684) + 10.1043*(t2625 + t2638 + t2654 + t2656 + t2674 + t2675 + t2689 + t2691 - 0.004179*t2697 - 0.826587*t2701) + 1.2360600000000002*(t2625 + t2638 + t2654 + t2656 + t2674 + t2675 + t2689 + t2691 + t2701*t291 + t2697*t309 + 0.01889*(t2701*t319 + t2697*t323) - 0.617968*(t2701*t334 + t2697*t336) - 0.126739*(t2701*t343 + t2697*t346)) + 1.469538*(t2625 + t2638 + t2654 + t2656 + t2674 + t2675 + t2689 + t2691 - 1.11818*(t2701*t357 - 1.*t2697*t365) + 0.00589*(t2697*t357 + t2701*t365) + t2701*t367 + t2697*t376);
  p_output1[17]=10.105084800000002*(t2757 + t2763 - 0.007761*t2765 - 0.255862*t2771) + 7.48503*(t2757 + t2763 + t2777 + t2778 - 0.45406*t2781 - 0.000421*t2788) + 10.1043*(t2757 + t2763 + t2777 + t2778 + t2797 + t2798 - 0.004179*t2805 - 0.826587*t2809) + 1.2360600000000002*(t2757 + t2763 + t2777 + t2778 + t2797 + t2798 + t2809*t291 + t2805*t309 + 0.01889*(t2809*t319 + t2805*t323) - 0.617968*(t2809*t334 + t2805*t336) - 0.126739*(t2809*t343 + t2805*t346)) + 1.469538*(t2757 + t2763 + t2777 + t2778 + t2797 + t2798 - 1.11818*(t2809*t357 - 1.*t2805*t365) + 0.00589*(t2805*t357 + t2809*t365) + t2809*t367 + t2805*t376);
  p_output1[18]=7.48503*(t2860 + t2868 - 0.45406*t2871 - 0.000421*t2875) + 10.1043*(t2860 + t2868 + t2879 + t2880 - 0.004179*t2885 - 0.826587*t2890) + 1.2360600000000002*(t2860 + t2868 + t2879 + t2880 + t2890*t291 + t2885*t309 + 0.01889*(t2890*t319 + t2885*t323) - 0.617968*(t2890*t334 + t2885*t336) - 0.126739*(t2890*t343 + t2885*t346)) + 1.469538*(t2860 + t2868 + t2879 + t2880 - 1.11818*(t2890*t357 - 1.*t2885*t365) + 0.00589*(t2885*t357 + t2890*t365) + t2890*t367 + t2885*t376);
  p_output1[19]=10.1043*(t2940 + t2944 - 0.004179*t2946 - 0.826587*t2949) + 1.2360600000000002*(t2940 + t2944 + t291*t2949 + t2946*t309 + 0.01889*(t2949*t319 + t2946*t323) - 0.617968*(t2949*t334 + t2946*t336) - 0.126739*(t2949*t343 + t2946*t346)) + 1.469538*(t2940 + t2944 - 1.11818*(t2979 + t2949*t357) + 0.00589*(t2986 + t2949*t365) + t2949*t367 + t2946*t376);
  p_output1[20]=1.2360600000000002*(t2497*(2.1934241414728571e-7 - 0.000033783761634830594*t261 - 0.6934341012630001*(t2998 + t2999) - 0.021877537552*(t3004 + t3005)) + t2946*(-1.2096424700126054e-9 - 0.6934128581485427*t261 - 0.021877537552*(t3011 + t3013) - 0.005534467322*(t2999 + t3016)) + (-1.7147089040178687e-8 - 0.021744644052735636*t261 - 0.6934341012630001*(t3013 + t3023) - 0.005534467322*(t3005 + t3026))*t3034 - 0.126739*(-0.006104248100000001*t2497*t261 + t2946*(t2998 + t3037) + t3034*(t3004 + t3041)) - 0.617968*(-0.999969365345*t261*t2946 + t2497*(t3016 + t3037) + t3034*(t3011 + t3053)) + 0.01889*(-0.993925573253*t261*t3034 + t2497*(t3026 + t3041) + t2946*(t3023 + t3053)));
  p_output1[21]=1.469538*(-1.11818*(t2979 - 1.*t3034*t357) + t3034*(-1.11344*t357 - 0.02159*t365) + 0.00589*(t2986 - 1.*t3034*t365) + t2946*(0.02159*t357 + t375));
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 22, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#endif // MATLAB_MEX_FILE

namespace SymFunction
{

void Ge_cassie_v4_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}




