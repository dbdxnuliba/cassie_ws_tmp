/*
 * Automatically Generated from Mathematica.
 * Mon 22 Nov 2021 20:32:13 GMT-08:00
 */

#ifdef MATLAB_MEX_FILE
// No need to include header
#else
#include "J_yaLeftStance_SLIP.hh"
#endif

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t9;
  double t15;
  double t16;
  double t27;
  double t33;
  double t36;
  double t47;
  double t56;
  double t63;
  double t64;
  double t71;
  double t96;
  double t102;
  double t123;
  double t78;
  double t164;
  double t186;
  double t191;
  double t200;
  double t202;
  double t213;
  double t216;
  double t221;
  double t295;
  double t307;
  double t315;
  double t326;
  double t512;
  double t514;
  double t357;
  double t370;
  double t374;
  double t407;
  double t411;
  double t417;
  double t531;
  double t542;
  double t550;
  double t591;
  double t619;
  double t622;
  double t638;
  double t710;
  double t711;
  double t712;
  double t737;
  double t743;
  double t745;
  double t755;
  double t783;
  double t803;
  double t810;
  double t882;
  double t889;
  double t898;
  double t997;
  double t1001;
  double t152;
  double t155;
  double t163;
  double t166;
  double t178;
  double t1146;
  double t201;
  double t203;
  double t206;
  double t230;
  double t251;
  double t259;
  double t1190;
  double t1195;
  double t322;
  double t330;
  double t335;
  double t387;
  double t389;
  double t393;
  double t1232;
  double t1233;
  double t578;
  double t595;
  double t610;
  double t675;
  double t682;
  double t689;
  double t1450;
  double t1500;
  double t1502;
  double t1526;
  double t1365;
  double t1373;
  double t1585;
  double t1638;
  double t1511;
  double t1705;
  double t1692;
  double t1597;
  double t1729;
  double t1540;
  double t1777;
  double t1624;
  double t1746;
  double t1639;
  double t750;
  double t756;
  double t766;
  double t863;
  double t866;
  double t868;
  double t956;
  double t960;
  double t965;
  double t987;
  double t990;
  double t991;
  double t23;
  double t1895;
  double t1896;
  double t1908;
  double t1913;
  double t1951;
  double t1957;
  double t1959;
  double t1970;
  double t1971;
  double t1990;
  double t1998;
  double t2002;
  double t2003;
  double t2009;
  double t2015;
  double t2019;
  double t2037;
  double t2038;
  double t2061;
  double t2064;
  double t2076;
  double t2088;
  double t2231;
  double t2232;
  double t2238;
  double t2254;
  double t2266;
  double t2270;
  double t2286;
  double t2294;
  double t2300;
  double t2315;
  double t2317;
  double t2318;
  double t2330;
  double t2342;
  double t2344;
  double t2374;
  double t2377;
  double t2379;
  double t2441;
  double t2443;
  double t2447;
  double t2454;
  double t2456;
  double t2461;
  double t2464;
  double t2465;
  double t2469;
  double t2477;
  double t2479;
  double t2481;
  double t2486;
  double t2496;
  double t2498;
  double t2503;
  double t2508;
  double t2510;
  double t2516;
  double t2518;
  double t2521;
  double t2541;
  double t2547;
  double t2551;
  double t2648;
  double t2667;
  double t2671;
  double t2599;
  double t2604;
  double t2607;
  double t2696;
  double t2699;
  double t2700;
  double t2728;
  double t2746;
  double t2748;
  double t2753;
  double t2759;
  double t2766;
  double t2787;
  double t2789;
  double t2793;
  double t2802;
  double t2824;
  double t2836;
  double t2621;
  double t2627;
  double t2641;
  double t2674;
  double t2677;
  double t2685;
  double t2706;
  double t2710;
  double t2713;
  double t2898;
  double t2908;
  double t2934;
  double t2948;
  double t2953;
  double t1448;
  double t1504;
  double t1546;
  double t1564;
  double t1602;
  double t1609;
  double t1614;
  double t3005;
  double t3011;
  double t1619;
  double t1623;
  double t1626;
  double t1636;
  double t1640;
  double t1667;
  double t1668;
  double t1680;
  double t1687;
  double t1693;
  double t1695;
  double t1715;
  double t1723;
  double t1724;
  double t1741;
  double t1751;
  double t1756;
  double t1757;
  double t1765;
  double t1767;
  double t1792;
  double t1806;
  double t1815;
  double t1825;
  double t1826;
  double t1835;
  double t2846;
  double t2860;
  double t2866;
  double t2872;
  double t2873;
  double t2876;
  double t3197;
  double t3198;
  double t3201;
  double t3203;
  double t3205;
  double t3245;
  double t3249;
  double t3252;
  double t3258;
  double t3259;
  double t3263;
  double t3270;
  double t3272;
  double t3274;
  double t3278;
  double t3280;
  double t3281;
  double t3315;
  double t3319;
  double t3321;
  double t3368;
  double t3381;
  double t3386;
  double t3388;
  double t3390;
  double t3391;
  double t3399;
  double t3405;
  double t3406;
  double t3436;
  double t3443;
  double t3446;
  double t3470;
  double t3471;
  double t3475;
  double t3477;
  double t3478;
  double t3479;
  double t3533;
  double t3542;
  double t3552;
  double t3568;
  double t3571;
  double t3576;
  double t3581;
  double t3584;
  double t3585;
  double t3589;
  double t3592;
  double t3595;
  double t3648;
  double t3653;
  double t3656;
  double t3669;
  double t3670;
  double t3671;
  double t3674;
  double t3675;
  double t3678;
  double t3683;
  double t3684;
  double t3685;
  double t3687;
  double t3694;
  double t3695;
  double t3698;
  double t3702;
  double t3707;
  double t3710;
  double t3711;
  double t3712;
  double t3645;
  double t3646;
  double t3660;
  double t3662;
  double t3663;
  double t3820;
  double t3822;
  double t3843;
  double t3845;
  double t3877;
  double t3884;
  double t3719;
  double t3744;
  double t3761;
  double t3769;
  double t3789;
  double t3799;
  double t3976;
  double t3980;
  double t3986;
  double t3988;
  double t3989;
  double t3991;
  double t3997;
  double t4011;
  double t4013;
  double t4020;
  double t4026;
  double t4041;
  double t4055;
  double t4066;
  double t4070;
  double t4080;
  double t4082;
  double t4085;
  double t4092;
  double t4105;
  double t4107;
  double t4212;
  double t4213;
  double t4218;
  double t4222;
  double t4223;
  double t4224;
  double t4230;
  double t4233;
  double t4241;
  double t4246;
  double t4260;
  double t4261;
  double t4289;
  double t4295;
  double t4298;
  double t4306;
  double t4309;
  double t4310;
  double t4318;
  double t4323;
  double t4324;
  double t4356;
  double t4358;
  double t4360;
  double t4369;
  double t4372;
  double t4374;
  double t4378;
  double t4379;
  double t4381;
  double t4389;
  double t4390;
  double t4400;
  double t4403;
  double t4407;
  double t4411;
  double t4416;
  double t4417;
  double t4420;
  double t4423;
  double t4424;
  double t4425;
  double t4513;
  double t4517;
  double t4519;
  double t4536;
  double t4540;
  double t4562;
  double t4563;
  double t4571;
  double t4572;
  double t4577;
  double t4584;
  double t4588;
  double t4592;
  double t4595;
  double t4597;
  double t4598;
  double t4503;
  double t4507;
  double t4510;
  double t4524;
  double t4533;
  double t4643;
  double t4647;
  double t4543;
  double t4546;
  double t4557;
  double t4566;
  double t4570;
  double t4669;
  double t4670;
  double t4671;
  double t4672;
  double t4607;
  double t4617;
  double t4621;
  double t4632;
  double t4633;
  double t4634;
  double t4754;
  double t4758;
  double t4762;
  double t4772;
  double t4774;
  double t4794;
  double t4795;
  double t4798;
  double t4799;
  double t4810;
  double t4814;
  double t4817;
  double t4822;
  double t4830;
  double t4834;
  double t4835;
  double t4875;
  double t4884;
  double t4885;
  double t4901;
  double t4907;
  double t4927;
  double t4938;
  double t4943;
  double t4951;
  double t4952;
  double t4957;
  double t4960;
  double t4962;
  double t4974;
  double t4980;
  double t4982;
  double t5002;
  double t5003;
  double t5004;
  double t5009;
  double t5010;
  double t5020;
  double t5024;
  double t5026;
  double t5028;
  double t5030;
  double t5035;
  double t5037;
  double t5042;
  double t5045;
  double t5046;
  double t5049;
  double t5114;
  double t5117;
  double t5128;
  double t5132;
  double t5134;
  double t5104;
  double t5105;
  double t5106;
  double t5124;
  double t5127;
  double t5138;
  double t5141;
  double t5144;
  double t5148;
  double t5149;
  double t5154;
  double t5191;
  double t5192;
  double t5194;
  double t5195;
  double t5197;
  double t5216;
  double t5218;
  double t5221;
  double t5222;
  double t5226;
  double t5276;
  double t5284;
  double t5298;
  double t5299;
  double t5301;
  double t5366;
  double t5362;
  double t5365;
  double t5367;
  double t5368;
  double t5370;
  double t5374;
  double t5377;
  double t5378;
  double t5379;
  double t5403;
  double t5414;
  double t5405;
  double t5409;
  double t5412;
  double t5416;
  double t5417;
  double t5423;
  double t5433;
  double t5438;
  double t5439;
  double t5449;
  double t5448;
  double t5451;
  double t5452;
  double t5456;
  double t5459;
  double t5460;
  double t5464;
  double t5465;
  double t5472;
  double t5474;
  double t5477;
  double t5512;
  double t5513;
  double t5518;
  double t5534;
  double t5488;
  double t5495;
  double t5499;
  double t5533;
  double t5536;
  double t5539;
  double t5542;
  double t5545;
  double t5552;
  double t5553;
  double t5554;
  double t5555;
  double t5559;
  double t5564;
  double t5580;
  double t5587;
  double t5590;
  double t5624;
  double t5629;
  double t5635;
  double t5636;
  double t5638;
  double t5646;
  double t5693;
  double t5694;
  double t5696;
  double t5700;
  double t5640;
  double t5647;
  double t5651;
  double t5655;
  double t5661;
  double t5664;
  double t5665;
  double t5671;
  double t5698;
  double t5673;
  double t5674;
  double t5675;
  double t5722;
  double t5705;
  double t5677;
  double t5679;
  double t5681;
  double t5744;
  double t5739;
  double t5701;
  double t5760;
  double t5709;
  double t5820;
  double t5719;
  double t5764;
  double t5723;
  double t5931;
  double t5937;
  double t5939;
  double t5954;
  double t6030;
  double t6031;
  double t6022;
  double t6027;
  double t6035;
  double t6036;
  double t6037;
  double t6045;
  double t6048;
  double t6049;
  double t5941;
  double t5958;
  double t5960;
  double t6053;
  double t6056;
  double t6057;
  double t6061;
  double t6062;
  double t6063;
  double t5968;
  double t5975;
  double t5979;
  double t6067;
  double t6068;
  double t6071;
  double t6080;
  double t6084;
  double t6086;
  double t6144;
  double t6145;
  double t6148;
  double t6150;
  double t6151;
  double t6155;
  double t6163;
  double t6164;
  double t6166;
  double t6177;
  double t6180;
  double t6183;
  double t6186;
  double t6187;
  double t6188;
  double t6193;
  double t6194;
  double t6196;
  double t6221;
  double t6222;
  double t6227;
  double t6235;
  double t6241;
  double t6245;
  double t6252;
  double t6256;
  double t6257;
  double t6262;
  double t6263;
  double t6267;
  double t6274;
  double t6281;
  double t6282;
  double t6284;
  double t6287;
  double t6288;
  double t6290;
  double t6294;
  double t6296;
  double t6308;
  double t6311;
  double t6312;
  double t5987;
  double t5988;
  double t5992;
  double t5994;
  double t5995;
  double t6004;
  double t6355;
  double t6356;
  double t6357;
  double t6360;
  double t6362;
  double t6363;
  double t6342;
  double t6346;
  double t6349;
  double t6350;
  double t6351;
  double t6353;
  double t6354;
  double t6358;
  double t6372;
  double t6379;
  double t6389;
  double t6367;
  double t6411;
  double t6412;
  double t6415;
  double t6420;
  double t6421;
  double t6431;
  double t6441;
  double t6442;
  double t5692;
  double t5697;
  double t5702;
  double t5704;
  double t5710;
  double t5711;
  double t5712;
  double t6479;
  double t6480;
  double t5716;
  double t5718;
  double t5720;
  double t5721;
  double t5724;
  double t5726;
  double t5728;
  double t6481;
  double t6482;
  double t6483;
  double t5735;
  double t5736;
  double t5741;
  double t5742;
  double t5745;
  double t5747;
  double t5749;
  double t6487;
  double t6495;
  double t6501;
  double t5761;
  double t5770;
  double t5780;
  double t5788;
  double t5813;
  double t5817;
  double t5831;
  double t5857;
  double t5861;
  double t5886;
  double t5894;
  double t5903;
  double t6629;
  double t6630;
  double t6647;
  double t6658;
  double t6669;
  double t6692;
  double t6697;
  double t6703;
  double t6713;
  double t6718;
  double t6727;
  double t6737;
  double t6739;
  double t6748;
  double t6753;
  double t6755;
  double t6759;
  double t6808;
  double t6811;
  double t6812;
  double t6824;
  double t6825;
  double t6826;
  double t6835;
  double t6836;
  double t6839;
  double t6843;
  double t6844;
  double t6846;
  double t6854;
  double t6856;
  double t6859;
  double t6881;
  double t6883;
  double t6884;
  double t6923;
  double t6928;
  double t6932;
  double t6948;
  double t6951;
  double t6952;
  double t6961;
  double t6969;
  double t6974;
  double t6980;
  double t6982;
  double t6983;
  double t6989;
  double t6991;
  double t6993;
  double t6585;
  double t6589;
  double t6596;
  double t6598;
  double t6600;
  double t6612;
  double t7078;
  double t7079;
  double t7081;
  double t7061;
  double t7069;
  double t7070;
  double t7071;
  double t7074;
  double t7075;
  double t7084;
  double t7086;
  double t7087;
  double t7089;
  double t7094;
  double t7095;
  double t7102;
  double t7112;
  double t7115;
  double t7116;
  double t7117;
  double t7118;
  double t7125;
  double t7127;
  double t7128;
  double t7145;
  double t7146;
  double t7148;
  double t7151;
  double t7152;
  double t7154;
  double t7158;
  double t7159;
  double t7247;
  double t7257;
  double t7258;
  double t7263;
  double t7267;
  double t7268;
  double t7275;
  double t7277;
  double t7278;
  double t7282;
  double t7283;
  double t7284;
  double t7287;
  double t7292;
  double t7295;
  double t7299;
  double t7300;
  double t7301;
  double t7308;
  double t7309;
  double t7314;
  double t7343;
  double t7345;
  double t7350;
  double t7354;
  double t7357;
  double t7359;
  double t7366;
  double t7367;
  double t7368;
  double t7370;
  double t7373;
  double t7376;
  double t7380;
  double t7382;
  double t7383;
  double t7385;
  double t7390;
  double t7391;
  double t7398;
  double t7399;
  double t7403;
  double t7432;
  double t7437;
  double t7438;
  double t7453;
  double t7454;
  double t7457;
  double t7461;
  double t7464;
  double t7466;
  double t7469;
  double t7472;
  double t7474;
  double t7481;
  double t7482;
  double t7483;
  double t7487;
  double t7488;
  double t7489;
  double t7494;
  double t7499;
  double t7509;
  double t7216;
  double t7217;
  double t7220;
  double t7228;
  double t7229;
  double t7232;
  double t7578;
  double t7583;
  double t7584;
  double t7567;
  double t7571;
  double t7572;
  double t7586;
  double t7588;
  double t7589;
  double t7591;
  double t7594;
  double t7595;
  double t7604;
  double t7606;
  double t7635;
  double t7637;
  double t7639;
  double t7625;
  double t7628;
  double t7629;
  double t7630;
  double t7631;
  double t7632;
  double t7633;
  double t7634;
  double t7640;
  double t7641;
  double t7642;
  double t7643;
  double t7646;
  double t7647;
  double t7649;
  double t7720;
  double t7722;
  double t7725;
  double t7731;
  double t7732;
  double t7740;
  double t7742;
  double t7749;
  double t7750;
  double t7752;
  double t7761;
  double t7766;
  double t7768;
  double t7772;
  double t7778;
  double t7779;
  double t7811;
  double t7815;
  double t7817;
  double t7821;
  double t7823;
  double t7831;
  double t7834;
  double t7842;
  double t7843;
  double t7845;
  double t7850;
  double t7855;
  double t7856;
  double t7863;
  double t7867;
  double t7868;
  double t7885;
  double t7886;
  double t7887;
  double t7891;
  double t7892;
  double t7900;
  double t7901;
  double t7914;
  double t7922;
  double t7929;
  double t7936;
  double t7938;
  double t7943;
  double t7947;
  double t7948;
  double t7950;
  double t7691;
  double t7692;
  double t7694;
  double t7698;
  double t7703;
  double t7704;
  double t8001;
  double t8003;
  double t8029;
  double t8031;
  double t8032;
  double t7981;
  double t7985;
  double t7999;
  double t8018;
  double t8025;
  double t8071;
  double t8073;
  double t8080;
  double t8083;
  double t8086;
  double t8105;
  double t8115;
  double t8123;
  double t8124;
  double t8125;
  double t8153;
  double t8156;
  double t8158;
  double t8159;
  double t8160;
  double t8041;
  double t8042;
  double t8044;
  double t8057;
  double t8063;
  double t8064;
  t9 = Cos(var1[3]);
  t15 = Cos(var1[4]);
  t16 = Cos(var1[6]);
  t27 = Cos(var1[5]);
  t33 = Sin(var1[3]);
  t36 = t27*t33;
  t47 = Sin(var1[4]);
  t56 = Sin(var1[5]);
  t63 = t9*t47*t56;
  t64 = t36 + t63;
  t71 = Sin(var1[6]);
  t96 = t9*t15*t16;
  t102 = -1.*t64*t71;
  t123 = t96 + t102;
  t78 = Cos(var1[7]);
  t164 = Sin(var1[7]);
  t186 = Cos(var1[8]);
  t191 = -1.*t186;
  t200 = 1. + t191;
  t202 = Sin(var1[8]);
  t213 = -1.*t16*t64;
  t216 = -1.*t9*t15*t71;
  t221 = t213 + t216;
  t295 = Cos(var1[9]);
  t307 = -1.*t295;
  t315 = 1. + t307;
  t326 = Sin(var1[9]);
  t512 = -1.*var1[9];
  t514 = 0.226893 + t512;
  t357 = t186*t123*t164;
  t370 = t221*t202;
  t374 = t357 + t370;
  t407 = t186*t221;
  t411 = -1.*t123*t164*t202;
  t417 = t407 + t411;
  t531 = Cos(t514);
  t542 = -1.*t531;
  t550 = 1. + t542;
  t591 = Sin(t514);
  t619 = -1.*t326*t374;
  t622 = t295*t417;
  t638 = t619 + t622;
  t710 = t295*t374;
  t711 = t326*t417;
  t712 = t710 + t711;
  t737 = Cos(var1[13]);
  t743 = -1.*t737;
  t745 = 1. + t743;
  t755 = Sin(var1[13]);
  t783 = t591*t638;
  t803 = t531*t712;
  t810 = t783 + t803;
  t882 = t531*t638;
  t889 = -1.*t591*t712;
  t898 = t882 + t889;
  t997 = -0.135*t9*t15*t16;
  t1001 = 0.135*t64*t71;
  t152 = -1.*t78;
  t155 = 1. + t152;
  t163 = 0.135*t155;
  t166 = 0.049*t164;
  t178 = t163 + t166;
  t1146 = t123*t178;
  t201 = -0.049*t200;
  t203 = -0.09*t202;
  t206 = t201 + t203;
  t230 = -0.09*t200;
  t251 = 0.049*t202;
  t259 = t230 + t251;
  t1190 = t123*t164*t206;
  t1195 = t221*t259;
  t322 = -0.049*t315;
  t330 = -0.21*t326;
  t335 = t322 + t330;
  t387 = -0.21*t315;
  t389 = 0.049*t326;
  t393 = t387 + t389;
  t1232 = t335*t374;
  t1233 = t393*t417;
  t578 = -0.70544*t550;
  t595 = -0.01841*t591;
  t610 = t578 + t595;
  t675 = 0.01841*t550;
  t682 = -0.70544*t591;
  t689 = t675 + t682;
  t1450 = Cos(var1[12]);
  t1500 = -1.*t1450;
  t1502 = 1. + t1500;
  t1526 = Sin(var1[12]);
  t1365 = t610*t638;
  t1373 = t689*t712;
  t1585 = -0.07769774964800001*t1502;
  t1638 = -0.0004284921280000001*t1502;
  t1511 = -0.005481192614*t1502;
  t1705 = 0.077936*t1526;
  t1692 = -0.996943*t1526;
  t1597 = 0.005498*t1526;
  t1729 = 0.005481192614*t1502;
  t1540 = -0.077936*t1526;
  t1777 = 0.07769774964800001*t1502;
  t1624 = -0.005498*t1526;
  t1746 = 0.0004284921280000001*t1502;
  t1639 = 0.996943*t1526;
  t750 = -0.02159*t745;
  t756 = -1.11344*t755;
  t766 = t750 + t756;
  t863 = -1.11344*t745;
  t866 = 0.02159*t755;
  t868 = t863 + t866;
  t956 = -1.*t755*t810;
  t960 = t737*t898;
  t965 = t956 + t960;
  t987 = t737*t810;
  t990 = t755*t898;
  t991 = t987 + t990;
  t23 = 0.135*t9*t15*t16;
  t1895 = -1.*t33*t71;
  t1896 = t96 + t1895;
  t1908 = -1.*t16*t33;
  t1913 = t1908 + t216;
  t1951 = t186*t1896*t164;
  t1957 = t1913*t202;
  t1959 = t1951 + t1957;
  t1970 = t186*t1913;
  t1971 = -1.*t1896*t164*t202;
  t1990 = t1970 + t1971;
  t1998 = -1.*t326*t1959;
  t2002 = t295*t1990;
  t2003 = t1998 + t2002;
  t2009 = t295*t1959;
  t2015 = t326*t1990;
  t2019 = t2009 + t2015;
  t2037 = t591*t2003;
  t2038 = t531*t2019;
  t2061 = t2037 + t2038;
  t2064 = t531*t2003;
  t2076 = -1.*t591*t2019;
  t2088 = t2064 + t2076;
  t2231 = t16*t186*t47*t164;
  t2232 = -1.*t47*t71*t202;
  t2238 = t2231 + t2232;
  t2254 = -1.*t186*t47*t71;
  t2266 = -1.*t16*t47*t164*t202;
  t2270 = t2254 + t2266;
  t2286 = -1.*t326*t2238;
  t2294 = t295*t2270;
  t2300 = t2286 + t2294;
  t2315 = t295*t2238;
  t2317 = t326*t2270;
  t2318 = t2315 + t2317;
  t2330 = t591*t2300;
  t2342 = t531*t2318;
  t2344 = t2330 + t2342;
  t2374 = t531*t2300;
  t2377 = -1.*t591*t2318;
  t2379 = t2374 + t2377;
  t2441 = -1.*t15*t16*t33;
  t2443 = -1.*t9*t71;
  t2447 = t2441 + t2443;
  t2454 = -1.*t9*t16;
  t2456 = t15*t33*t71;
  t2461 = t2454 + t2456;
  t2464 = t186*t2447*t164;
  t2465 = t2461*t202;
  t2469 = t2464 + t2465;
  t2477 = t186*t2461;
  t2479 = -1.*t2447*t164*t202;
  t2481 = t2477 + t2479;
  t2486 = -1.*t326*t2469;
  t2496 = t295*t2481;
  t2498 = t2486 + t2496;
  t2503 = t295*t2469;
  t2508 = t326*t2481;
  t2510 = t2503 + t2508;
  t2516 = t591*t2498;
  t2518 = t531*t2510;
  t2521 = t2516 + t2518;
  t2541 = t531*t2498;
  t2547 = -1.*t591*t2510;
  t2551 = t2541 + t2547;
  t2648 = t16*t64;
  t2667 = t9*t15*t71;
  t2671 = t2648 + t2667;
  t2599 = -1.*t9*t27*t47;
  t2604 = t33*t56;
  t2607 = t2599 + t2604;
  t2696 = t78*t2671;
  t2699 = -1.*t2607*t164;
  t2700 = t2696 + t2699;
  t2728 = -1.*t186*t326*t2700;
  t2746 = -1.*t295*t2700*t202;
  t2748 = t2728 + t2746;
  t2753 = t295*t186*t2700;
  t2759 = -1.*t326*t2700*t202;
  t2766 = t2753 + t2759;
  t2787 = t591*t2748;
  t2789 = t531*t2766;
  t2793 = t2787 + t2789;
  t2802 = t531*t2748;
  t2824 = -1.*t591*t2766;
  t2836 = t2802 + t2824;
  t2621 = 0.135*t78;
  t2627 = -0.049*t164;
  t2641 = t2621 + t2627;
  t2674 = 0.049*t78;
  t2677 = 0.135*t164;
  t2685 = t2674 + t2677;
  t2706 = -1.*t78*t2607;
  t2710 = -1.*t2671*t164;
  t2713 = t2706 + t2710;
  t2898 = t2607*t2641;
  t2908 = t2671*t2685;
  t2934 = t2700*t206;
  t2948 = t186*t335*t2700;
  t2953 = -1.*t393*t2700*t202;
  t1448 = -2.1934241414728571e-7*var1[12];
  t1504 = 0.000033783761634830594*t1502;
  t1546 = t1511 + t1540;
  t1564 = -0.6934341012630001*t1546;
  t1602 = t1585 + t1597;
  t1609 = -0.021877537552*t1602;
  t1614 = t1448 + t1504 + t1564 + t1609;
  t3005 = t610*t2748;
  t3011 = t689*t2766;
  t1619 = -1.7147089040178687e-8*var1[12];
  t1623 = -0.021744644052735636*t1502;
  t1626 = t1585 + t1624;
  t1636 = 0.005534467322*t1626;
  t1640 = t1638 + t1639;
  t1667 = -0.6934341012630001*t1640;
  t1668 = t1619 + t1623 + t1636 + t1667;
  t1680 = -1.2096424700126054e-9*var1[12];
  t1687 = -0.6934128581485427*t1502;
  t1693 = t1638 + t1692;
  t1695 = -0.021877537552*t1693;
  t1715 = t1511 + t1705;
  t1723 = 0.005534467322*t1715;
  t1724 = t1680 + t1687 + t1695 + t1723;
  t1741 = t1729 + t1705;
  t1751 = t1746 + t1692;
  t1756 = -0.999969365345*t1502;
  t1757 = 1. + t1756;
  t1765 = -0.006104248100000001*t1502;
  t1767 = 1. + t1765;
  t1792 = t1777 + t1597;
  t1806 = t1729 + t1540;
  t1815 = t1777 + t1624;
  t1825 = -0.993925573253*t1502;
  t1826 = 1. + t1825;
  t1835 = t1746 + t1639;
  t2846 = -1.*t755*t2793;
  t2860 = t737*t2836;
  t2866 = t2846 + t2860;
  t2872 = t737*t2793;
  t2873 = t755*t2836;
  t2876 = t2872 + t2873;
  t3197 = t16*t33;
  t3198 = t3197 + t2667;
  t3201 = t78*t3198;
  t3203 = t9*t47*t164;
  t3205 = t3201 + t3203;
  t3245 = -1.*t186*t326*t3205;
  t3249 = -1.*t295*t3205*t202;
  t3252 = t3245 + t3249;
  t3258 = t295*t186*t3205;
  t3259 = -1.*t326*t3205*t202;
  t3263 = t3258 + t3259;
  t3270 = t591*t3252;
  t3272 = t531*t3263;
  t3274 = t3270 + t3272;
  t3278 = t531*t3252;
  t3280 = -1.*t591*t3263;
  t3281 = t3278 + t3280;
  t3315 = t78*t47*t71;
  t3319 = -1.*t15*t164;
  t3321 = t3315 + t3319;
  t3368 = -1.*t186*t326*t3321;
  t3381 = -1.*t295*t3321*t202;
  t3386 = t3368 + t3381;
  t3388 = t295*t186*t3321;
  t3390 = -1.*t326*t3321*t202;
  t3391 = t3388 + t3390;
  t3399 = t591*t3386;
  t3405 = t531*t3391;
  t3406 = t3399 + t3405;
  t3436 = t531*t3386;
  t3443 = -1.*t591*t3391;
  t3446 = t3436 + t3443;
  t3470 = t9*t16;
  t3471 = -1.*t15*t33*t71;
  t3475 = t3470 + t3471;
  t3477 = t78*t3475;
  t3478 = -1.*t33*t47*t164;
  t3479 = t3477 + t3478;
  t3533 = -1.*t186*t326*t3479;
  t3542 = -1.*t295*t3479*t202;
  t3552 = t3533 + t3542;
  t3568 = t295*t186*t3479;
  t3571 = -1.*t326*t3479*t202;
  t3576 = t3568 + t3571;
  t3581 = t591*t3552;
  t3584 = t531*t3576;
  t3585 = t3581 + t3584;
  t3589 = t531*t3552;
  t3592 = -1.*t591*t3576;
  t3595 = t3589 + t3592;
  t3648 = t78*t2607;
  t3653 = t2671*t164;
  t3656 = t3648 + t3653;
  t3669 = -1.*t186*t3656;
  t3670 = -1.*t123*t202;
  t3671 = t3669 + t3670;
  t3674 = t186*t123;
  t3675 = -1.*t3656*t202;
  t3678 = t3674 + t3675;
  t3683 = t326*t3671;
  t3684 = t295*t3678;
  t3685 = t3683 + t3684;
  t3687 = t295*t3671;
  t3694 = -1.*t326*t3678;
  t3695 = t3687 + t3694;
  t3698 = -1.*t591*t3685;
  t3702 = t531*t3695;
  t3707 = t3698 + t3702;
  t3710 = t531*t3685;
  t3711 = t591*t3695;
  t3712 = t3710 + t3711;
  t3645 = 0.049*t186;
  t3646 = t3645 + t203;
  t3660 = -0.09*t186;
  t3662 = -0.049*t202;
  t3663 = t3660 + t3662;
  t3820 = t123*t3646;
  t3822 = t3656*t3663;
  t3843 = t393*t3671;
  t3845 = t335*t3678;
  t3877 = t689*t3685;
  t3884 = t610*t3695;
  t3719 = t755*t3707;
  t3744 = t737*t3712;
  t3761 = t3719 + t3744;
  t3769 = t737*t3707;
  t3789 = -1.*t755*t3712;
  t3799 = t3769 + t3789;
  t3976 = -1.*t9*t78*t47;
  t3980 = t3198*t164;
  t3986 = t3976 + t3980;
  t3988 = -1.*t186*t3986;
  t3989 = -1.*t1896*t202;
  t3991 = t3988 + t3989;
  t3997 = t186*t1896;
  t4011 = -1.*t3986*t202;
  t4013 = t3997 + t4011;
  t4020 = t326*t3991;
  t4026 = t295*t4013;
  t4041 = t4020 + t4026;
  t4055 = t295*t3991;
  t4066 = -1.*t326*t4013;
  t4070 = t4055 + t4066;
  t4080 = -1.*t591*t4041;
  t4082 = t531*t4070;
  t4085 = t4080 + t4082;
  t4092 = t531*t4041;
  t4105 = t591*t4070;
  t4107 = t4092 + t4105;
  t4212 = t15*t78;
  t4213 = t47*t71*t164;
  t4218 = t4212 + t4213;
  t4222 = -1.*t186*t4218;
  t4223 = -1.*t16*t47*t202;
  t4224 = t4222 + t4223;
  t4230 = t16*t186*t47;
  t4233 = -1.*t4218*t202;
  t4241 = t4230 + t4233;
  t4246 = t326*t4224;
  t4260 = t295*t4241;
  t4261 = t4246 + t4260;
  t4289 = t295*t4224;
  t4295 = -1.*t326*t4241;
  t4298 = t4289 + t4295;
  t4306 = -1.*t591*t4261;
  t4309 = t531*t4298;
  t4310 = t4306 + t4309;
  t4318 = t531*t4261;
  t4323 = t591*t4298;
  t4324 = t4318 + t4323;
  t4356 = t78*t33*t47;
  t4358 = t3475*t164;
  t4360 = t4356 + t4358;
  t4369 = -1.*t186*t4360;
  t4372 = -1.*t2447*t202;
  t4374 = t4369 + t4372;
  t4378 = t186*t2447;
  t4379 = -1.*t4360*t202;
  t4381 = t4378 + t4379;
  t4389 = t326*t4374;
  t4390 = t295*t4381;
  t4400 = t4389 + t4390;
  t4403 = t295*t4374;
  t4407 = -1.*t326*t4381;
  t4411 = t4403 + t4407;
  t4416 = -1.*t591*t4400;
  t4417 = t531*t4411;
  t4420 = t4416 + t4417;
  t4423 = t531*t4400;
  t4424 = t591*t4411;
  t4425 = t4423 + t4424;
  t4513 = t186*t3656;
  t4517 = t123*t202;
  t4519 = t4513 + t4517;
  t4536 = -1.*t326*t4519;
  t4540 = t4536 + t3684;
  t4562 = -1.*t295*t4519;
  t4563 = t4562 + t3694;
  t4571 = t295*t4519;
  t4572 = t326*t3678;
  t4577 = t4571 + t4572;
  t4584 = t531*t4563;
  t4588 = t531*t4577;
  t4592 = t4584 + t4588;
  t4595 = t591*t4563;
  t4597 = t591*t4577;
  t4598 = t4595 + t4597;
  t4503 = -0.21*t295;
  t4507 = -0.049*t326;
  t4510 = t4503 + t4507;
  t4524 = 0.049*t295;
  t4533 = t4524 + t330;
  t4643 = t4510*t4519;
  t4647 = t4533*t3678;
  t4543 = 0.01841*t531;
  t4546 = 0.70544*t591;
  t4557 = t4543 + t4546;
  t4566 = 0.70544*t531;
  t4570 = t4566 + t595;
  t4669 = t689*t4540;
  t4670 = t4557*t4540;
  t4671 = t610*t4563;
  t4672 = t4570*t4577;
  t4607 = t755*t4592;
  t4617 = t737*t4598;
  t4621 = t4607 + t4617;
  t4632 = t737*t4592;
  t4633 = -1.*t755*t4598;
  t4634 = t4632 + t4633;
  t4754 = t186*t3986;
  t4758 = t1896*t202;
  t4762 = t4754 + t4758;
  t4772 = -1.*t326*t4762;
  t4774 = t4772 + t4026;
  t4794 = -1.*t295*t4762;
  t4795 = t4794 + t4066;
  t4798 = t295*t4762;
  t4799 = t326*t4013;
  t4810 = t4798 + t4799;
  t4814 = t531*t4795;
  t4817 = t531*t4810;
  t4822 = t4814 + t4817;
  t4830 = t591*t4795;
  t4834 = t591*t4810;
  t4835 = t4830 + t4834;
  t4875 = t186*t4218;
  t4884 = t16*t47*t202;
  t4885 = t4875 + t4884;
  t4901 = -1.*t326*t4885;
  t4907 = t4901 + t4260;
  t4927 = -1.*t295*t4885;
  t4938 = t4927 + t4295;
  t4943 = t295*t4885;
  t4951 = t326*t4241;
  t4952 = t4943 + t4951;
  t4957 = t531*t4938;
  t4960 = t531*t4952;
  t4962 = t4957 + t4960;
  t4974 = t591*t4938;
  t4980 = t591*t4952;
  t4982 = t4974 + t4980;
  t5002 = t186*t4360;
  t5003 = t2447*t202;
  t5004 = t5002 + t5003;
  t5009 = -1.*t326*t5004;
  t5010 = t5009 + t4390;
  t5020 = -1.*t295*t5004;
  t5024 = t5020 + t4407;
  t5026 = t295*t5004;
  t5028 = t326*t4381;
  t5030 = t5026 + t5028;
  t5035 = t531*t5024;
  t5037 = t531*t5030;
  t5042 = t5035 + t5037;
  t5045 = t591*t5024;
  t5046 = t591*t5030;
  t5049 = t5045 + t5046;
  t5114 = t591*t4540;
  t5117 = t5114 + t4588;
  t5128 = t531*t4540;
  t5132 = -1.*t591*t4577;
  t5134 = t5128 + t5132;
  t5104 = -1.11344*t737;
  t5105 = -0.02159*t755;
  t5106 = t5104 + t5105;
  t5124 = 0.02159*t737;
  t5127 = t5124 + t756;
  t5138 = -1.*t755*t5117;
  t5141 = t737*t5134;
  t5144 = t5138 + t5141;
  t5148 = -1.*t737*t5117;
  t5149 = -1.*t755*t5134;
  t5154 = t5148 + t5149;
  t5191 = t591*t4774;
  t5192 = t5191 + t4817;
  t5194 = t531*t4774;
  t5195 = -1.*t591*t4810;
  t5197 = t5194 + t5195;
  t5216 = t591*t4907;
  t5218 = t5216 + t4960;
  t5221 = t531*t4907;
  t5222 = -1.*t591*t4952;
  t5226 = t5221 + t5222;
  t5276 = t591*t5010;
  t5284 = t5276 + t5037;
  t5298 = t531*t5010;
  t5299 = -1.*t591*t5030;
  t5301 = t5298 + t5299;
  t5366 = Sin(var1[14]);
  t5362 = Cos(var1[14]);
  t5365 = 0.135*t5362*t9*t15;
  t5367 = -0.135*t5366*t64;
  t5368 = -1.*t9*t15*t5366;
  t5370 = -1.*t5362*t64;
  t5374 = t5368 + t5370;
  t5377 = t5362*t9*t15;
  t5378 = -1.*t5366*t64;
  t5379 = t5377 + t5378;
  t5403 = Cos(var1[15]);
  t5414 = Sin(var1[15]);
  t5405 = -1.*t5403;
  t5409 = 1. + t5405;
  t5412 = -0.135*t5409;
  t5416 = 0.049*t5414;
  t5417 = t5412 + t5416;
  t5423 = t5417*t5379;
  t5433 = Cos(var1[16]);
  t5438 = -1.*t5433;
  t5439 = 1. + t5438;
  t5449 = Sin(var1[16]);
  t5448 = -0.09*t5439;
  t5451 = 0.049*t5449;
  t5452 = t5448 + t5451;
  t5456 = t5452*t5374;
  t5459 = -0.049*t5439;
  t5460 = -0.09*t5449;
  t5464 = t5459 + t5460;
  t5465 = t5414*t5464*t5379;
  t5472 = t5449*t5374;
  t5474 = t5433*t5414*t5379;
  t5477 = t5472 + t5474;
  t5512 = Cos(var1[17]);
  t5513 = -1.*t5512;
  t5518 = 1. + t5513;
  t5534 = Sin(var1[17]);
  t5488 = t5433*t5374;
  t5495 = -1.*t5414*t5449*t5379;
  t5499 = t5488 + t5495;
  t5533 = -0.049*t5518;
  t5536 = -0.21*t5534;
  t5539 = t5533 + t5536;
  t5542 = t5539*t5477;
  t5545 = -0.21*t5518;
  t5552 = 0.049*t5534;
  t5553 = t5545 + t5552;
  t5554 = t5553*t5499;
  t5555 = -1.*t5534*t5477;
  t5559 = t5512*t5499;
  t5564 = t5555 + t5559;
  t5580 = t5512*t5477;
  t5587 = t5534*t5499;
  t5590 = t5580 + t5587;
  t5624 = -1.*var1[17];
  t5629 = 0.226893 + t5624;
  t5635 = Cos(t5629);
  t5636 = -1.*t5635;
  t5638 = 1. + t5636;
  t5646 = Sin(t5629);
  t5693 = Cos(var1[20]);
  t5694 = -1.*t5693;
  t5696 = 1. + t5694;
  t5700 = Sin(var1[20]);
  t5640 = -0.70544*t5638;
  t5647 = -0.01841*t5646;
  t5651 = t5640 + t5647;
  t5655 = t5651*t5564;
  t5661 = 0.01841*t5638;
  t5664 = -0.70544*t5646;
  t5665 = t5661 + t5664;
  t5671 = t5665*t5590;
  t5698 = 0.07769774964800001*t5696;
  t5673 = t5646*t5564;
  t5674 = t5635*t5590;
  t5675 = t5673 + t5674;
  t5722 = -0.0004284921280000001*t5696;
  t5705 = 0.005481192614*t5696;
  t5677 = t5635*t5564;
  t5679 = -1.*t5646*t5590;
  t5681 = t5677 + t5679;
  t5744 = -0.077936*t5700;
  t5739 = -0.996943*t5700;
  t5701 = -0.005498*t5700;
  t5760 = -0.005481192614*t5696;
  t5709 = 0.077936*t5700;
  t5820 = -0.07769774964800001*t5696;
  t5719 = 0.005498*t5700;
  t5764 = 0.0004284921280000001*t5696;
  t5723 = 0.996943*t5700;
  t5931 = Cos(var1[21]);
  t5937 = -1.*t5931;
  t5939 = 1. + t5937;
  t5954 = Sin(var1[21]);
  t6030 = -1.*t5366*t33;
  t6031 = t5377 + t6030;
  t6022 = -1.*t5362*t33;
  t6027 = t5368 + t6022;
  t6035 = t5449*t6027;
  t6036 = t5433*t5414*t6031;
  t6037 = t6035 + t6036;
  t6045 = t5433*t6027;
  t6048 = -1.*t5414*t5449*t6031;
  t6049 = t6045 + t6048;
  t5941 = -0.02159*t5939;
  t5958 = -1.11344*t5954;
  t5960 = t5941 + t5958;
  t6053 = -1.*t5534*t6037;
  t6056 = t5512*t6049;
  t6057 = t6053 + t6056;
  t6061 = t5512*t6037;
  t6062 = t5534*t6049;
  t6063 = t6061 + t6062;
  t5968 = -1.11344*t5939;
  t5975 = 0.02159*t5954;
  t5979 = t5968 + t5975;
  t6067 = t5646*t6057;
  t6068 = t5635*t6063;
  t6071 = t6067 + t6068;
  t6080 = t5635*t6057;
  t6084 = -1.*t5646*t6063;
  t6086 = t6080 + t6084;
  t6144 = t5362*t5433*t5414*t47;
  t6145 = -1.*t5366*t5449*t47;
  t6148 = t6144 + t6145;
  t6150 = -1.*t5433*t5366*t47;
  t6151 = -1.*t5362*t5414*t5449*t47;
  t6155 = t6150 + t6151;
  t6163 = -1.*t5534*t6148;
  t6164 = t5512*t6155;
  t6166 = t6163 + t6164;
  t6177 = t5512*t6148;
  t6180 = t5534*t6155;
  t6183 = t6177 + t6180;
  t6186 = t5646*t6166;
  t6187 = t5635*t6183;
  t6188 = t6186 + t6187;
  t6193 = t5635*t6166;
  t6194 = -1.*t5646*t6183;
  t6196 = t6193 + t6194;
  t6221 = -1.*t9*t5366;
  t6222 = -1.*t5362*t15*t33;
  t6227 = t6221 + t6222;
  t6235 = -1.*t5362*t9;
  t6241 = t15*t5366*t33;
  t6245 = t6235 + t6241;
  t6252 = -1.*t5414*t5449*t6227;
  t6256 = t5433*t6245;
  t6257 = t6252 + t6256;
  t6262 = t5433*t5414*t6227;
  t6263 = t5449*t6245;
  t6267 = t6262 + t6263;
  t6274 = t5534*t6257;
  t6281 = t5512*t6267;
  t6282 = t6274 + t6281;
  t6284 = t5512*t6257;
  t6287 = -1.*t5534*t6267;
  t6288 = t6284 + t6287;
  t6290 = -1.*t5646*t6282;
  t6294 = t5635*t6288;
  t6296 = t6290 + t6294;
  t6308 = t5635*t6282;
  t6311 = t5646*t6288;
  t6312 = t6308 + t6311;
  t5987 = -1.*t5954*t5675;
  t5988 = t5931*t5681;
  t5992 = t5987 + t5988;
  t5994 = t5931*t5675;
  t5995 = t5954*t5681;
  t6004 = t5994 + t5995;
  t6355 = t9*t15*t5366;
  t6356 = t5362*t64;
  t6357 = t6355 + t6356;
  t6360 = -1.*t5414*t2607;
  t6362 = t5403*t6357;
  t6363 = t6360 + t6362;
  t6342 = -0.135*t5403;
  t6346 = -0.049*t5414;
  t6349 = t6342 + t6346;
  t6350 = t6349*t2607;
  t6351 = 0.049*t5403;
  t6353 = -0.135*t5414;
  t6354 = t6351 + t6353;
  t6358 = t6354*t6357;
  t6372 = -1.*t5403*t2607;
  t6379 = -1.*t5414*t6357;
  t6389 = t6372 + t6379;
  t6367 = t5464*t6363;
  t6411 = t5433*t5539*t6363;
  t6412 = -1.*t5449*t5553*t6363;
  t6415 = -1.*t5512*t5449*t6363;
  t6420 = -1.*t5433*t5534*t6363;
  t6421 = t6415 + t6420;
  t6431 = t5433*t5512*t6363;
  t6441 = -1.*t5449*t5534*t6363;
  t6442 = t6431 + t6441;
  t5692 = 2.1934241414728571e-7*var1[20];
  t5697 = -0.000033783761634830594*t5696;
  t5702 = t5698 + t5701;
  t5704 = -0.021877537552*t5702;
  t5710 = t5705 + t5709;
  t5711 = -0.6934341012630001*t5710;
  t5712 = t5692 + t5697 + t5704 + t5711;
  t6479 = t5651*t6421;
  t6480 = t5665*t6442;
  t5716 = -1.7147089040178687e-8*var1[20];
  t5718 = -0.021744644052735636*t5696;
  t5720 = t5698 + t5719;
  t5721 = -0.005534467322*t5720;
  t5724 = t5722 + t5723;
  t5726 = -0.6934341012630001*t5724;
  t5728 = t5716 + t5718 + t5721 + t5726;
  t6481 = t5646*t6421;
  t6482 = t5635*t6442;
  t6483 = t6481 + t6482;
  t5735 = -1.2096424700126054e-9*var1[20];
  t5736 = -0.6934128581485427*t5696;
  t5741 = t5722 + t5739;
  t5742 = -0.021877537552*t5741;
  t5745 = t5705 + t5744;
  t5747 = -0.005534467322*t5745;
  t5749 = t5735 + t5736 + t5742 + t5747;
  t6487 = t5635*t6421;
  t6495 = -1.*t5646*t6442;
  t6501 = t6487 + t6495;
  t5761 = t5760 + t5744;
  t5770 = t5764 + t5739;
  t5780 = -0.999969365345*t5696;
  t5788 = 1. + t5780;
  t5813 = -0.006104248100000001*t5696;
  t5817 = 1. + t5813;
  t5831 = t5820 + t5701;
  t5857 = t5760 + t5709;
  t5861 = t5820 + t5719;
  t5886 = -0.993925573253*t5696;
  t5894 = 1. + t5886;
  t5903 = t5764 + t5723;
  t6629 = t5362*t33;
  t6630 = t6355 + t6629;
  t6647 = t5403*t6630;
  t6658 = t9*t5414*t47;
  t6669 = t6647 + t6658;
  t6692 = -1.*t5512*t5449*t6669;
  t6697 = -1.*t5433*t5534*t6669;
  t6703 = t6692 + t6697;
  t6713 = t5433*t5512*t6669;
  t6718 = -1.*t5449*t5534*t6669;
  t6727 = t6713 + t6718;
  t6737 = t5646*t6703;
  t6739 = t5635*t6727;
  t6748 = t6737 + t6739;
  t6753 = t5635*t6703;
  t6755 = -1.*t5646*t6727;
  t6759 = t6753 + t6755;
  t6808 = -1.*t15*t5414;
  t6811 = t5403*t5366*t47;
  t6812 = t6808 + t6811;
  t6824 = -1.*t5512*t5449*t6812;
  t6825 = -1.*t5433*t5534*t6812;
  t6826 = t6824 + t6825;
  t6835 = t5433*t5512*t6812;
  t6836 = -1.*t5449*t5534*t6812;
  t6839 = t6835 + t6836;
  t6843 = t5646*t6826;
  t6844 = t5635*t6839;
  t6846 = t6843 + t6844;
  t6854 = t5635*t6826;
  t6856 = -1.*t5646*t6839;
  t6859 = t6854 + t6856;
  t6881 = t5362*t9;
  t6883 = -1.*t15*t5366*t33;
  t6884 = t6881 + t6883;
  t6923 = t5403*t6884;
  t6928 = -1.*t5414*t33*t47;
  t6932 = t6923 + t6928;
  t6948 = -1.*t5512*t5449*t6932;
  t6951 = -1.*t5433*t5534*t6932;
  t6952 = t6948 + t6951;
  t6961 = t5433*t5512*t6932;
  t6969 = -1.*t5449*t5534*t6932;
  t6974 = t6961 + t6969;
  t6980 = t5646*t6952;
  t6982 = t5635*t6974;
  t6983 = t6980 + t6982;
  t6989 = t5635*t6952;
  t6991 = -1.*t5646*t6974;
  t6993 = t6989 + t6991;
  t6585 = -1.*t5954*t6483;
  t6589 = t5931*t6501;
  t6596 = t6585 + t6589;
  t6598 = t5931*t6483;
  t6600 = t5954*t6501;
  t6612 = t6598 + t6600;
  t7078 = t5403*t2607;
  t7079 = t5414*t6357;
  t7081 = t7078 + t7079;
  t7061 = 0.049*t5433;
  t7069 = t7061 + t5460;
  t7070 = t7069*t5379;
  t7071 = -0.09*t5433;
  t7074 = -0.049*t5449;
  t7075 = t7071 + t7074;
  t7084 = t7075*t7081;
  t7086 = -1.*t5449*t5379;
  t7087 = -1.*t5433*t7081;
  t7089 = t7086 + t7087;
  t7094 = t5433*t5379;
  t7095 = -1.*t5449*t7081;
  t7102 = t7094 + t7095;
  t7112 = t5553*t7089;
  t7115 = t5539*t7102;
  t7116 = t5534*t7089;
  t7117 = t5512*t7102;
  t7118 = t7116 + t7117;
  t7125 = t5512*t7089;
  t7127 = -1.*t5534*t7102;
  t7128 = t7125 + t7127;
  t7145 = t5665*t7118;
  t7146 = t5651*t7128;
  t7148 = -1.*t5646*t7118;
  t7151 = t5635*t7128;
  t7152 = t7148 + t7151;
  t7154 = t5635*t7118;
  t7158 = t5646*t7128;
  t7159 = t7154 + t7158;
  t7247 = t5414*t6630;
  t7257 = -1.*t5403*t9*t47;
  t7258 = t7247 + t7257;
  t7263 = -1.*t5449*t6031;
  t7267 = -1.*t5433*t7258;
  t7268 = t7263 + t7267;
  t7275 = t5433*t6031;
  t7277 = -1.*t5449*t7258;
  t7278 = t7275 + t7277;
  t7282 = t5534*t7268;
  t7283 = t5512*t7278;
  t7284 = t7282 + t7283;
  t7287 = t5512*t7268;
  t7292 = -1.*t5534*t7278;
  t7295 = t7287 + t7292;
  t7299 = -1.*t5646*t7284;
  t7300 = t5635*t7295;
  t7301 = t7299 + t7300;
  t7308 = t5635*t7284;
  t7309 = t5646*t7295;
  t7314 = t7308 + t7309;
  t7343 = t5403*t15;
  t7345 = t5366*t5414*t47;
  t7350 = t7343 + t7345;
  t7354 = -1.*t5362*t5449*t47;
  t7357 = -1.*t5433*t7350;
  t7359 = t7354 + t7357;
  t7366 = t5362*t5433*t47;
  t7367 = -1.*t5449*t7350;
  t7368 = t7366 + t7367;
  t7370 = t5534*t7359;
  t7373 = t5512*t7368;
  t7376 = t7370 + t7373;
  t7380 = t5512*t7359;
  t7382 = -1.*t5534*t7368;
  t7383 = t7380 + t7382;
  t7385 = -1.*t5646*t7376;
  t7390 = t5635*t7383;
  t7391 = t7385 + t7390;
  t7398 = t5635*t7376;
  t7399 = t5646*t7383;
  t7403 = t7398 + t7399;
  t7432 = t5414*t6884;
  t7437 = t5403*t33*t47;
  t7438 = t7432 + t7437;
  t7453 = -1.*t5449*t6227;
  t7454 = -1.*t5433*t7438;
  t7457 = t7453 + t7454;
  t7461 = t5433*t6227;
  t7464 = -1.*t5449*t7438;
  t7466 = t7461 + t7464;
  t7469 = t5534*t7457;
  t7472 = t5512*t7466;
  t7474 = t7469 + t7472;
  t7481 = t5512*t7457;
  t7482 = -1.*t5534*t7466;
  t7483 = t7481 + t7482;
  t7487 = -1.*t5646*t7474;
  t7488 = t5635*t7483;
  t7489 = t7487 + t7488;
  t7494 = t5635*t7474;
  t7499 = t5646*t7483;
  t7509 = t7494 + t7499;
  t7216 = t5954*t7152;
  t7217 = t5931*t7159;
  t7220 = t7216 + t7217;
  t7228 = t5931*t7152;
  t7229 = -1.*t5954*t7159;
  t7232 = t7228 + t7229;
  t7578 = t5449*t5379;
  t7583 = t5433*t7081;
  t7584 = t7578 + t7583;
  t7567 = -0.21*t5512;
  t7571 = -0.049*t5534;
  t7572 = t7567 + t7571;
  t7586 = t7572*t7584;
  t7588 = 0.049*t5512;
  t7589 = t7588 + t5536;
  t7591 = t7589*t7102;
  t7594 = -1.*t5534*t7584;
  t7595 = t7594 + t7117;
  t7604 = -1.*t5512*t7584;
  t7606 = t7604 + t7127;
  t7635 = t5512*t7584;
  t7637 = t5534*t7102;
  t7639 = t7635 + t7637;
  t7625 = t5665*t7595;
  t7628 = 0.01841*t5635;
  t7629 = 0.70544*t5646;
  t7630 = t7628 + t7629;
  t7631 = t7630*t7595;
  t7632 = t5651*t7606;
  t7633 = 0.70544*t5635;
  t7634 = t7633 + t5647;
  t7640 = t7634*t7639;
  t7641 = t5635*t7606;
  t7642 = t5635*t7639;
  t7643 = t7641 + t7642;
  t7646 = t5646*t7606;
  t7647 = t5646*t7639;
  t7649 = t7646 + t7647;
  t7720 = t5449*t6031;
  t7722 = t5433*t7258;
  t7725 = t7720 + t7722;
  t7731 = -1.*t5534*t7725;
  t7732 = t7731 + t7283;
  t7740 = -1.*t5512*t7725;
  t7742 = t7740 + t7292;
  t7749 = t5512*t7725;
  t7750 = t5534*t7278;
  t7752 = t7749 + t7750;
  t7761 = t5635*t7742;
  t7766 = t5635*t7752;
  t7768 = t7761 + t7766;
  t7772 = t5646*t7742;
  t7778 = t5646*t7752;
  t7779 = t7772 + t7778;
  t7811 = t5362*t5449*t47;
  t7815 = t5433*t7350;
  t7817 = t7811 + t7815;
  t7821 = -1.*t5534*t7817;
  t7823 = t7821 + t7373;
  t7831 = -1.*t5512*t7817;
  t7834 = t7831 + t7382;
  t7842 = t5512*t7817;
  t7843 = t5534*t7368;
  t7845 = t7842 + t7843;
  t7850 = t5635*t7834;
  t7855 = t5635*t7845;
  t7856 = t7850 + t7855;
  t7863 = t5646*t7834;
  t7867 = t5646*t7845;
  t7868 = t7863 + t7867;
  t7885 = t5449*t6227;
  t7886 = t5433*t7438;
  t7887 = t7885 + t7886;
  t7891 = -1.*t5534*t7887;
  t7892 = t7891 + t7472;
  t7900 = -1.*t5512*t7887;
  t7901 = t7900 + t7482;
  t7914 = t5512*t7887;
  t7922 = t5534*t7466;
  t7929 = t7914 + t7922;
  t7936 = t5635*t7901;
  t7938 = t5635*t7929;
  t7943 = t7936 + t7938;
  t7947 = t5646*t7901;
  t7948 = t5646*t7929;
  t7950 = t7947 + t7948;
  t7691 = t5954*t7643;
  t7692 = t5931*t7649;
  t7694 = t7691 + t7692;
  t7698 = t5931*t7643;
  t7703 = -1.*t5954*t7649;
  t7704 = t7698 + t7703;
  t8001 = t5646*t7595;
  t8003 = t8001 + t7642;
  t8029 = t5635*t7595;
  t8031 = -1.*t5646*t7639;
  t8032 = t8029 + t8031;
  t7981 = -1.11344*t5931;
  t7985 = -0.02159*t5954;
  t7999 = t7981 + t7985;
  t8018 = 0.02159*t5931;
  t8025 = t8018 + t5958;
  t8071 = t5646*t7732;
  t8073 = t8071 + t7766;
  t8080 = t5635*t7732;
  t8083 = -1.*t5646*t7752;
  t8086 = t8080 + t8083;
  t8105 = t5646*t7823;
  t8115 = t8105 + t7855;
  t8123 = t5635*t7823;
  t8124 = -1.*t5646*t7845;
  t8125 = t8123 + t8124;
  t8153 = t5646*t7892;
  t8156 = t8153 + t7938;
  t8158 = t5635*t7892;
  t8159 = -1.*t5646*t7929;
  t8160 = t8158 + t8159;
  t8041 = -1.*t5954*t8003;
  t8042 = t5931*t8032;
  t8044 = t8041 + t8042;
  t8057 = -1.*t5931*t8003;
  t8063 = -1.*t5954*t8032;
  t8064 = t8057 + t8063;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=-1.*t123*t178 - 1.*t123*t164*t206 + t23 - 1.*t221*t259 - 1.*t335*t374 - 1.*t393*t417 - 1.*t610*t638 - 0.135*t64*t71 - 1.*t689*t712 - 0.1305*t123*t78 - 1.*t766*t810 - 1.*t868*t898 + 1.11344*t965 + 0.02159*t991 + 0.0288377642750394*(1.965608*(t1001 + 0.1351*t123 + 0.01793*t221 + t997) + 0.763*(t1001 + t1146 + t1190 + t1195 + t1232 + t1233 - 0.45406*t638 - 0.000421*t712 + 0.130288*t123*t78 + t997) + 1.03008*(t1001 + t1146 + t1190 + t1195 + t1232 + t1233 - 0.255862*t638 - 0.007761*t712 + 0.132168*t123*t78 + t997) + 1.316608*(t1001 + t1146 - 0.049*t123*t164 - 0.0343*t221 + 0.135*t123*t78 + t997) + 5.79228*(t1001 + t1146 + t1190 + t1195 - 0.04895*t374 - 0.14946*t417 + 0.17081*t123*t78 + t997) + 1.03*(t1001 + t1146 + t1190 + t1195 + t1232 + t1233 + t1365 + t1373 + 0.127241*t123*t78 - 0.004179*t810 - 0.826587*t898 + t997) + 0.126*(t1001 + t1146 + t1190 + t1195 + t1232 + t1233 + t1365 + t1373 + t123*t1614*t78 + t1668*t810 + t1724*t898 - 0.617968*(t123*t1741*t78 + t1751*t810 + t1757*t898) + 0.126739*(t123*t1767*t78 + t1792*t810 + t1806*t898) + 0.01889*(t123*t1815*t78 + t1826*t810 + t1835*t898) + t997) + 0.1498*(t1001 + t1146 + t1190 + t1195 + t1232 + t1233 + t1365 + t1373 + 0.13064*t123*t78 + t766*t810 + t868*t898 - 1.11818*t965 + 0.00589*t991 + t997));
  p_output1[4]=-1.*t178*t1896 - 1.*t164*t1896*t206 + t23 - 1.*t1913*t259 - 1.*t1959*t335 - 1.*t1990*t393 - 1.*t2003*t610 - 1.*t2019*t689 - 0.135*t33*t71 + 1.11344*(t2088*t737 - 1.*t2061*t755) + 0.02159*(t2061*t737 + t2088*t755) - 1.*t2061*t766 - 0.1305*t1896*t78 - 1.*t2088*t868;
  p_output1[5]=-1.*t2238*t335 - 1.*t2270*t393 + 0.135*t16*t47 - 1.*t16*t178*t47 - 1.*t16*t164*t206*t47 - 1.*t2300*t610 - 1.*t2318*t689 + t259*t47*t71 + 1.11344*(t2379*t737 - 1.*t2344*t755) + 0.02159*(t2344*t737 + t2379*t755) - 1.*t2344*t766 - 0.1305*t16*t47*t78 - 1.*t2379*t868;
  p_output1[6]=-1.*t178*t2447 - 1.*t164*t206*t2447 - 1.*t2461*t259 - 0.135*t15*t16*t33 - 1.*t2469*t335 - 1.*t2481*t393 - 1.*t2498*t610 - 1.*t2510*t689 + 1.11344*(t2551*t737 - 1.*t2521*t755) + 0.02159*(t2521*t737 + t2551*t755) - 1.*t2521*t766 - 0.1305*t2447*t78 - 1.*t2551*t868 - 0.135*t71*t9;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=1.;
  p_output1[12]=-1.*t2607*t2641 - 1.*t2671*t2685 - 1.*t206*t2700 - 0.1305*t2713 + 1.11344*t2866 + 0.02159*t2876 - 1.*t186*t2700*t335 + t202*t2700*t393 - 1.*t2748*t610 - 1.*t2766*t689 - 1.*t2793*t766 - 1.*t2836*t868 + 0.0288377642750394*(1.316608*(-0.049*t2700 + 0.135*t2713 + t2898 + t2908) + 5.79228*(-0.04895*t186*t2700 + 0.14946*t202*t2700 + 0.17081*t2713 + t2898 + t2908 + t2934) + 1.03008*(0.132168*t2713 - 0.255862*t2748 - 0.007761*t2766 + t2898 + t2908 + t2934 + t2948 + t2953) + 0.763*(0.130288*t2713 - 0.45406*t2748 - 0.000421*t2766 + t2898 + t2908 + t2934 + t2948 + t2953) + 1.03*(0.127241*t2713 - 0.004179*t2793 - 0.826587*t2836 + t2898 + t2908 + t2934 + t2948 + t2953 + t3005 + t3011) + 0.126*(t1614*t2713 + t1668*t2793 + t1724*t2836 - 0.617968*(t1741*t2713 + t1751*t2793 + t1757*t2836) + 0.126739*(t1767*t2713 + t1792*t2793 + t1806*t2836) + 0.01889*(t1815*t2713 + t1826*t2793 + t1835*t2836) + t2898 + t2908 + t2934 + t2948 + t2953 + t3005 + t3011) + 0.1498*(0.13064*t2713 - 1.11818*t2866 + 0.00589*t2876 + t2898 + t2908 + t2934 + t2948 + t2953 + t3005 + t3011 + t2793*t766 + t2836*t868));
  p_output1[13]=-1.*t2685*t3198 - 1.*t206*t3205 - 1.*t186*t3205*t335 + t202*t3205*t393 - 1.*t3252*t610 - 1.*t3263*t689 + 1.11344*(t3281*t737 - 1.*t3274*t755) + 0.02159*(t3274*t737 + t3281*t755) - 1.*t3274*t766 - 1.*t3281*t868 + t2641*t47*t9 - 0.1305*(-1.*t164*t3198 + t47*t78*t9);
  p_output1[14]=-1.*t15*t2641 - 1.*t206*t3321 - 1.*t186*t3321*t335 + t202*t3321*t393 - 1.*t3386*t610 - 1.*t3391*t689 - 1.*t2685*t47*t71 + 1.11344*(t3446*t737 - 1.*t3406*t755) + 0.02159*(t3406*t737 + t3446*t755) - 1.*t3406*t766 - 0.1305*(-1.*t164*t47*t71 - 1.*t15*t78) - 1.*t3446*t868;
  p_output1[15]=-1.*t2685*t3475 - 1.*t206*t3479 - 1.*t186*t335*t3479 + t202*t3479*t393 - 1.*t2641*t33*t47 - 1.*t3552*t610 - 1.*t3576*t689 + 1.11344*(t3595*t737 - 1.*t3585*t755) + 0.02159*(t3585*t737 + t3595*t755) - 1.*t3585*t766 - 0.1305*(-1.*t164*t3475 - 1.*t33*t47*t78) - 1.*t3595*t868;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=-1.*t123*t3646 - 1.*t3656*t3663 - 1.*t335*t3678 + 0.02159*t3761 + 1.11344*t3799 - 1.*t3671*t393 - 1.*t3695*t610 - 1.*t3685*t689 - 1.*t3712*t766 - 1.*t3707*t868 + 0.0288377642750394*(5.79228*(-0.14946*t3671 - 0.04895*t3678 + t3820 + t3822) + 0.763*(-0.000421*t3685 - 0.45406*t3695 + t3820 + t3822 + t3843 + t3845) + 1.03008*(-0.007761*t3685 - 0.255862*t3695 + t3820 + t3822 + t3843 + t3845) + 1.03*(-0.826587*t3707 - 0.004179*t3712 + t3820 + t3822 + t3843 + t3845 + t3877 + t3884) + 0.126*(t1724*t3707 + t1668*t3712 - 0.617968*(t1757*t3707 + t1751*t3712) + 0.126739*(t1806*t3707 + t1792*t3712) + 0.01889*(t1835*t3707 + t1826*t3712) + t3820 + t3822 + t3843 + t3845 + t3877 + t3884) + 0.1498*(0.00589*t3761 - 1.11818*t3799 + t3820 + t3822 + t3843 + t3845 + t3877 + t3884 + t3712*t766 + t3707*t868));
  p_output1[22]=-1.*t1896*t3646 - 1.*t3663*t3986 - 1.*t393*t3991 - 1.*t335*t4013 - 1.*t4070*t610 - 1.*t4041*t689 + 0.02159*(t4107*t737 + t4085*t755) + 1.11344*(t4085*t737 - 1.*t4107*t755) - 1.*t4107*t766 - 1.*t4085*t868;
  p_output1[23]=-1.*t3663*t4218 - 1.*t393*t4224 - 1.*t335*t4241 - 1.*t16*t3646*t47 - 1.*t4298*t610 - 1.*t4261*t689 + 0.02159*(t4324*t737 + t4310*t755) + 1.11344*(t4310*t737 - 1.*t4324*t755) - 1.*t4324*t766 - 1.*t4310*t868;
  p_output1[24]=-1.*t2447*t3646 - 1.*t3663*t4360 - 1.*t393*t4374 - 1.*t335*t4381 - 1.*t4411*t610 - 1.*t4400*t689 + 0.02159*(t4425*t737 + t4420*t755) + 1.11344*(t4420*t737 - 1.*t4425*t755) - 1.*t4425*t766 - 1.*t4420*t868;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=-1.*t4510*t4519 - 1.*t3678*t4533 - 1.*t4540*t4557 - 1.*t4570*t4577 + 0.02159*t4621 + 1.11344*t4634 - 1.*t4563*t610 - 1.*t4540*t689 - 1.*t4598*t766 - 1.*t4592*t868 + 0.0288377642750394*(0.763*(-0.000421*t4540 - 0.45406*t4563 + t4643 + t4647) + 1.03008*(-0.007761*t4540 - 0.255862*t4563 + t4643 + t4647) + 1.03*(-0.826587*t4592 - 0.004179*t4598 + t4643 + t4647 + t4669 + t4670 + t4671 + t4672) + 0.126*(t1724*t4592 + t1668*t4598 - 0.617968*(t1757*t4592 + t1751*t4598) + 0.126739*(t1806*t4592 + t1792*t4598) + 0.01889*(t1835*t4592 + t1826*t4598) + t4643 + t4647 + t4669 + t4670 + t4671 + t4672) + 0.1498*(0.00589*t4621 - 1.11818*t4634 + t4643 + t4647 + t4669 + t4670 + t4671 + t4672 + t4598*t766 + t4592*t868));
  p_output1[31]=-1.*t4013*t4533 - 1.*t4510*t4762 - 1.*t4557*t4774 - 1.*t4570*t4810 - 1.*t4795*t610 - 1.*t4774*t689 + 0.02159*(t4835*t737 + t4822*t755) + 1.11344*(t4822*t737 - 1.*t4835*t755) - 1.*t4835*t766 - 1.*t4822*t868;
  p_output1[32]=-1.*t4241*t4533 - 1.*t4510*t4885 - 1.*t4557*t4907 - 1.*t4570*t4952 - 1.*t4938*t610 - 1.*t4907*t689 + 0.02159*(t4982*t737 + t4962*t755) + 1.11344*(t4962*t737 - 1.*t4982*t755) - 1.*t4982*t766 - 1.*t4962*t868;
  p_output1[33]=-1.*t4381*t4533 - 1.*t4510*t5004 - 1.*t4557*t5010 - 1.*t4570*t5030 - 1.*t5024*t610 - 1.*t5010*t689 + 0.02159*(t5049*t737 + t5042*t755) + 1.11344*(t5042*t737 - 1.*t5049*t755) - 1.*t5049*t766 - 1.*t5042*t868;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=-1.*t5106*t5117 - 1.*t5127*t5134 + 0.02159*t5144 + 0.0043198970884009*(t5106*t5117 + t5127*t5134 + 0.00589*t5144 - 1.11818*t5154) + 1.11344*t5154;
  p_output1[40]=-1.*t5106*t5192 - 1.*t5127*t5197 + 0.02159*(t5197*t737 - 1.*t5192*t755) + 1.11344*(-1.*t5192*t737 - 1.*t5197*t755);
  p_output1[41]=-1.*t5106*t5218 - 1.*t5127*t5226 + 0.02159*(t5226*t737 - 1.*t5218*t755) + 1.11344*(-1.*t5218*t737 - 1.*t5226*t755);
  p_output1[42]=-1.*t5106*t5284 - 1.*t5127*t5301 + 0.02159*(t5301*t737 - 1.*t5284*t755) + 1.11344*(-1.*t5284*t737 - 1.*t5301*t755);
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0.0288377642750394*(1.965608*(t5365 + t5367 + 0.01793*t5374 - 0.1351*t5379) + 1.316608*(t5365 + t5367 - 0.0343*t5374 - 0.135*t5379*t5403 - 0.049*t5379*t5414 + t5423) + 5.79228*(t5365 + t5367 - 0.17081*t5379*t5403 + t5423 + t5456 + t5465 - 0.04895*t5477 - 0.14946*t5499) + 1.03008*(t5365 + t5367 - 0.132168*t5379*t5403 + t5423 + t5456 + t5465 + t5542 + t5554 - 0.255862*t5564 - 0.007761*t5590) + 0.763*(t5365 + t5367 - 0.130288*t5379*t5403 + t5423 + t5456 + t5465 + t5542 + t5554 - 0.45406*t5564 - 0.000421*t5590) + 1.03*(t5365 + t5367 - 0.127241*t5379*t5403 + t5423 + t5456 + t5465 + t5542 + t5554 + t5655 + t5671 - 0.004179*t5675 - 0.826587*t5681) + 0.126*(t5365 + t5367 + t5423 + t5456 + t5465 + t5542 + t5554 + t5655 + t5671 + t5379*t5403*t5712 + t5675*t5728 + t5681*t5749 - 0.617968*(t5379*t5403*t5761 + t5675*t5770 + t5681*t5788) - 0.126739*(t5379*t5403*t5817 + t5675*t5831 + t5681*t5857) + 0.01889*(t5379*t5403*t5861 + t5675*t5894 + t5681*t5903)) + 0.1498*(t5365 + t5367 - 0.13064*t5379*t5403 + t5423 + t5456 + t5465 + t5542 + t5554 + t5655 + t5671 + t5675*t5960 + t5681*t5979 - 1.11818*t5992 + 0.00589*t6004));
  p_output1[49]=t5365 - 0.135*t33*t5366 + t5452*t6027 - 0.1305*t5403*t6031 + t5417*t6031 + t5414*t5464*t6031 + t5539*t6037 + t5553*t6049 + t5651*t6057 + t5665*t6063 + t5960*t6071 + t5979*t6086 - 1.11344*(-1.*t5954*t6071 + t5931*t6086) - 0.02159*(t5931*t6071 + t5954*t6086);
  p_output1[50]=0.135*t47*t5362 - 0.1305*t47*t5362*t5403 + t47*t5362*t5417 - 1.*t47*t5366*t5452 + t47*t5362*t5414*t5464 + t5539*t6148 + t5553*t6155 + t5651*t6166 + t5665*t6183 + t5960*t6188 + t5979*t6196 - 1.11344*(-1.*t5954*t6188 + t5931*t6196) - 0.02159*(t5931*t6188 + t5954*t6196);
  p_output1[51]=-0.135*t15*t33*t5362 - 0.1305*t5403*t6227 + t5417*t6227 + t5414*t5464*t6227 + t5452*t6245 + t5553*t6257 + t5539*t6267 + t5665*t6282 + t5651*t6288 + t5979*t6296 + t5960*t6312 - 0.02159*(t5954*t6296 + t5931*t6312) - 1.11344*(t5931*t6296 - 1.*t5954*t6312) - 0.135*t5366*t9;
  p_output1[52]=0;
  p_output1[53]=7.142857142857142*(-0.10724599999999995*t5992 - 0.08999*t6004);
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0.0288377642750394*(5.79228*(t6350 + t6358 - 0.04895*t5433*t6363 + 0.14946*t5449*t6363 + t6367 - 0.17081*t6389) + 1.316608*(t6350 + t6358 - 0.049*t6363 - 0.135*t6389) + 1.03008*(t6350 + t6358 + t6367 - 0.132168*t6389 + t6411 + t6412 - 0.255862*t6421 - 0.007761*t6442) + 0.763*(t6350 + t6358 + t6367 - 0.130288*t6389 + t6411 + t6412 - 0.45406*t6421 - 0.000421*t6442) + 1.03*(t6350 + t6358 + t6367 - 0.127241*t6389 + t6411 + t6412 + t6479 + t6480 - 0.004179*t6483 - 0.826587*t6501) + 0.126*(t6350 + t6358 + t6367 + t5712*t6389 + t6411 + t6412 + t6479 + t6480 + t5728*t6483 + t5749*t6501 - 0.617968*(t5761*t6389 + t5770*t6483 + t5788*t6501) - 0.126739*(t5817*t6389 + t5831*t6483 + t5857*t6501) + 0.01889*(t5861*t6389 + t5894*t6483 + t5903*t6501)) + 0.1498*(t6350 + t6358 + t6367 - 0.13064*t6389 + t6411 + t6412 + t6479 + t6480 + t5960*t6483 + t5979*t6501 - 1.11818*t6596 + 0.00589*t6612));
  p_output1[58]=t6354*t6630 + t5464*t6669 + t5433*t5539*t6669 - 1.*t5449*t5553*t6669 + t5651*t6703 + t5665*t6727 + t5960*t6748 + t5979*t6759 - 1.11344*(-1.*t5954*t6748 + t5931*t6759) - 0.02159*(t5931*t6748 + t5954*t6759) - 1.*t47*t6349*t9 - 0.1305*(-1.*t5414*t6630 + t47*t5403*t9);
  p_output1[59]=-0.1305*(-1.*t15*t5403 - 1.*t47*t5366*t5414) + t15*t6349 + t47*t5366*t6354 + t5464*t6812 + t5433*t5539*t6812 - 1.*t5449*t5553*t6812 + t5651*t6826 + t5665*t6839 + t5960*t6846 + t5979*t6859 - 1.11344*(-1.*t5954*t6846 + t5931*t6859) - 0.02159*(t5931*t6846 + t5954*t6859);
  p_output1[60]=t33*t47*t6349 + t6354*t6884 - 0.1305*(-1.*t33*t47*t5403 - 1.*t5414*t6884) + t5464*t6932 + t5433*t5539*t6932 - 1.*t5449*t5553*t6932 + t5651*t6952 + t5665*t6974 + t5960*t6983 + t5979*t6993 - 1.11344*(-1.*t5954*t6983 + t5931*t6993) - 0.02159*(t5931*t6983 + t5954*t6993);
  p_output1[61]=1.;
  p_output1[62]=7.142857142857142*(-0.10724599999999995*t6596 - 0.08999*t6612);
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0.0288377642750394*(5.79228*(t7070 + t7084 - 0.14946*t7089 - 0.04895*t7102) + 0.763*(t7070 + t7084 + t7112 + t7115 - 0.000421*t7118 - 0.45406*t7128) + 1.03008*(t7070 + t7084 + t7112 + t7115 - 0.007761*t7118 - 0.255862*t7128) + 1.03*(t7070 + t7084 + t7112 + t7115 + t7145 + t7146 - 0.826587*t7152 - 0.004179*t7159) + 0.126*(t7070 + t7084 + t7112 + t7115 + t7145 + t7146 + t5749*t7152 + t5728*t7159 - 0.617968*(t5788*t7152 + t5770*t7159) - 0.126739*(t5857*t7152 + t5831*t7159) + 0.01889*(t5903*t7152 + t5894*t7159)) + 0.1498*(t7070 + t7084 + t7112 + t7115 + t7145 + t7146 + t5979*t7152 + t5960*t7159 + 0.00589*t7220 - 1.11818*t7232));
  p_output1[67]=t6031*t7069 + t7075*t7258 + t5553*t7268 + t5539*t7278 + t5665*t7284 + t5651*t7295 + t5979*t7301 + t5960*t7314 - 0.02159*(t5954*t7301 + t5931*t7314) - 1.11344*(t5931*t7301 - 1.*t5954*t7314);
  p_output1[68]=t47*t5362*t7069 + t7075*t7350 + t5553*t7359 + t5539*t7368 + t5665*t7376 + t5651*t7383 + t5979*t7391 + t5960*t7403 - 0.02159*(t5954*t7391 + t5931*t7403) - 1.11344*(t5931*t7391 - 1.*t5954*t7403);
  p_output1[69]=t6227*t7069 + t7075*t7438 + t5553*t7457 + t5539*t7466 + t5665*t7474 + t5651*t7483 + t5979*t7489 + t5960*t7509 - 0.02159*(t5954*t7489 + t5931*t7509) - 1.11344*(t5931*t7489 - 1.*t5954*t7509);
  p_output1[70]=0;
  p_output1[71]=7.142857142857142*(-0.08999*t7220 - 0.10724599999999995*t7232);
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0.0288377642750394*(0.763*(t7586 + t7591 - 0.000421*t7595 - 0.45406*t7606) + 1.03008*(t7586 + t7591 - 0.007761*t7595 - 0.255862*t7606) + 1.03*(t7586 + t7591 + t7625 + t7631 + t7632 + t7640 - 0.826587*t7643 - 0.004179*t7649) + 0.126*(t7586 + t7591 + t7625 + t7631 + t7632 + t7640 + t5749*t7643 + t5728*t7649 - 0.617968*(t5788*t7643 + t5770*t7649) - 0.126739*(t5857*t7643 + t5831*t7649) + 0.01889*(t5903*t7643 + t5894*t7649)) + 0.1498*(t7586 + t7591 + t7625 + t7631 + t7632 + t7640 + t5979*t7643 + t5960*t7649 + 0.00589*t7694 - 1.11818*t7704));
  p_output1[76]=t7278*t7589 + t7572*t7725 + t5665*t7732 + t7630*t7732 + t5651*t7742 + t7634*t7752 + t5979*t7768 + t5960*t7779 - 0.02159*(t5954*t7768 + t5931*t7779) - 1.11344*(t5931*t7768 - 1.*t5954*t7779);
  p_output1[77]=t7368*t7589 + t7572*t7817 + t5665*t7823 + t7630*t7823 + t5651*t7834 + t7634*t7845 + t5979*t7856 + t5960*t7868 - 0.02159*(t5954*t7856 + t5931*t7868) - 1.11344*(t5931*t7856 - 1.*t5954*t7868);
  p_output1[78]=t7466*t7589 + t7572*t7887 + t5665*t7892 + t7630*t7892 + t5651*t7901 + t7634*t7929 + t5979*t7943 + t5960*t7950 - 0.02159*(t5954*t7943 + t5931*t7950) - 1.11344*(t5931*t7943 - 1.*t5954*t7950);
  p_output1[79]=0;
  p_output1[80]=7.142857142857142*(-0.08999*t7694 - 0.10724599999999995*t7704);
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0.0043198970884009*(t7999*t8003 + t8025*t8032 + 0.00589*t8044 - 1.11818*t8064);
  p_output1[85]=t7999*t8073 + t8025*t8086 - 0.02159*(-1.*t5954*t8073 + t5931*t8086) - 1.11344*(-1.*t5931*t8073 - 1.*t5954*t8086);
  p_output1[86]=t7999*t8115 + t8025*t8125 - 0.02159*(-1.*t5954*t8115 + t5931*t8125) - 1.11344*(-1.*t5931*t8115 - 1.*t5954*t8125);
  p_output1[87]=t7999*t8156 + t8025*t8160 - 0.02159*(-1.*t5954*t8156 + t5931*t8160) - 1.11344*(-1.*t5931*t8156 - 1.*t5954*t8160);
  p_output1[88]=0;
  p_output1[89]=7.142857142857142*(-0.08999*t8044 - 0.10724599999999995*t8064);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 9, (mwSize) 10, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#endif // MATLAB_MEX_FILE

namespace SymFunction
{

void J_yaLeftStance_SLIP_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}




