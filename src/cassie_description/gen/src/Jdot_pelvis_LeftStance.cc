/*
 * Automatically Generated from Mathematica.
 * Thu 23 Dec 2021 17:03:16 GMT-08:00
 */

#ifdef MATLAB_MEX_FILE
// No need to include header
#else
#include "Jdot_pelvis_LeftStance.hh"
#endif

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t2321;
  double t2849;
  double t3171;
  double t3214;
  double t4054;
  double t2082;
  double t4251;
  double t4352;
  double t4241;
  double t4256;
  double t4318;
  double t4324;
  double t4329;
  double t4353;
  double t4356;
  double t4362;
  double t4365;
  double t4368;
  double t4371;
  double t4409;
  double t4412;
  double t4415;
  double t4418;
  double t4435;
  double t4451;
  double t4263;
  double t4319;
  double t4325;
  double t4332;
  double t4354;
  double t4357;
  double t4471;
  double t4363;
  double t4366;
  double t4369;
  double t4372;
  double t4501;
  double t4410;
  double t4413;
  double t4242;
  double t4455;
  double t4457;
  double t4321;
  double t4459;
  double t4463;
  double t4467;
  double t4469;
  double t4480;
  double t4494;
  double t4497;
  double t4499;
  double t4504;
  double t4506;
  double t4564;
  double t4567;
  double t4570;
  double t4573;
  double t4210;
  double t4245;
  double t4322;
  double t4416;
  double t4419;
  double t4436;
  double t4452;
  double t4478;
  double t4502;
  double t4597;
  double t4340;
  double t4602;
  double t4367;
  double t4606;
  double t4414;
  double t4614;
  double t4466;
  double t4618;
  double t4495;
  double t4623;
  double t4507;
  double t4568;
  double t4574;
  double t4583;
  double t4590;
  double t4525;
  double t4531;
  double t4540;
  double t4551;
  double t4555;
  double t4559;
  double t4596;
  double t4326;
  double t4601;
  double t4364;
  double t4605;
  double t4411;
  double t4613;
  double t4460;
  double t4617;
  double t4482;
  double t4622;
  double t4505;
  double t4565;
  double t4633;
  double t4571;
  double t4634;
  double t4581;
  double t4635;
  double t4588;
  double t4636;
  double t4639;
  double t4524;
  double t4640;
  double t4530;
  double t4641;
  double t4538;
  double t4642;
  double t4550;
  double t4643;
  double t4554;
  double t4644;
  double t4558;
  double t4595;
  double t4323;
  double t4611;
  double t4612;
  double t4479;
  double t4503;
  double t4578;
  double t4653;
  double t4585;
  double t4654;
  double t4655;
  double t4656;
  double t4517;
  double t4520;
  double t4659;
  double t4660;
  double t4528;
  double t4529;
  double t4661;
  double t4535;
  double t4536;
  double t4544;
  double t4662;
  double t4548;
  double t4549;
  double t4663;
  double t4664;
  double t4355;
  double t4361;
  double t4603;
  double t4604;
  double t4609;
  double t4434;
  double t4454;
  double t4468;
  double t4470;
  double t4619;
  double t4620;
  double t4621;
  double t4673;
  double t4675;
  double t4676;
  double t4511;
  double t4513;
  double t4515;
  double t4679;
  double t4521;
  double t4526;
  double t4527;
  double t4552;
  double t4553;
  double t4512;
  double t4518;
  double t4522;
  double t4523;
  double t4532;
  double t4534;
  double t4541;
  double t4543;
  double t4545;
  double t4546;
  double t4547;
  double t4556;
  double t4557;
  double t4566;
  double t4569;
  double t4572;
  double t4575;
  double t4576;
  double t4577;
  double t4579;
  double t4580;
  double t4582;
  double t4584;
  double t4586;
  double t4587;
  double t4589;
  double t4591;
  double t4592;
  double t4594;
  double t4598;
  double t4599;
  double t4600;
  double t4607;
  double t4608;
  double t4610;
  double t4615;
  double t4616;
  double t4624;
  double t4625;
  double t4626;
  double t4627;
  double t4217;
  double t4248;
  double t4316;
  double t4320;
  double t4370;
  double t4407;
  double t4417;
  double t4438;
  double t4456;
  double t4458;
  double t4498;
  double t4500;
  double t4508;
  double t4560;
  double t4593;
  double t4628;
  double t4629;
  double t4631;
  double t4637;
  double t4638;
  double t4645;
  double t4646;
  double t4647;
  double t4651;
  double t4657;
  double t4658;
  double t4665;
  double t4666;
  double t4667;
  double t4671;
  double t4674;
  double t4677;
  double t4678;
  double t4680;
  double t4681;
  double t4682;
  double t4683;
  double t4684;
  double t4688;
  double t4690;
  double t4691;
  double t4692;
  double t4693;
  double t4694;
  double t4695;
  double t4696;
  double t4697;
  double t4698;
  double t4699;
  double t4700;
  double t4701;
  double t4702;
  double t4703;
  double t4704;
  double t4705;
  double t4706;
  double t4707;
  double t4711;
  double t4713;
  double t4714;
  double t4715;
  double t4756;
  double t4759;
  double t4757;
  double t4760;
  double t4762;
  double t4764;
  double t4761;
  double t4765;
  double t4769;
  double t4770;
  double t4771;
  double t4772;
  double t4773;
  double t4774;
  double t4775;
  double t4781;
  double t4782;
  double t4758;
  double t4763;
  double t4799;
  double t4800;
  double t4754;
  double t4755;
  double t4766;
  double t4768;
  double t4776;
  double t4777;
  double t4829;
  double t4830;
  double t4831;
  double t4833;
  double t4834;
  double t4835;
  double t4837;
  double t4838;
  double t4839;
  double t4841;
  double t4842;
  double t4843;
  double t4845;
  double t4846;
  double t4847;
  double t3997;
  double t4056;
  double t4059;
  double t4094;
  double t4125;
  double t4128;
  double t4150;
  double t4178;
  double t4181;
  double t4187;
  double t4191;
  double t4195;
  double t4783;
  double t4785;
  double t4801;
  double t4803;
  double t4810;
  double t4811;
  double t4813;
  double t4792;
  double t4793;
  double t4794;
  double t4767;
  double t4778;
  double t4779;
  double t4887;
  double t4888;
  double t4889;
  double t4890;
  double t4896;
  double t4898;
  double t4899;
  double t4903;
  double t4897;
  double t4902;
  double t4901;
  double t4509;
  double t4561;
  double t4562;
  double t4891;
  double t4900;
  double t4904;
  double t4909;
  double t4914;
  double t4919;
  double t4720;
  double t4721;
  double t4722;
  double t4951;
  double t4952;
  double t4958;
  double t4959;
  double t4974;
  double t4795;
  double t4796;
  double t4797;
  double t4953;
  double t4960;
  double t4980;
  double t4968;
  double t4969;
  double t4970;
  double t4971;
  double t4972;
  double t4973;
  double t4975;
  double t4908;
  double t4910;
  double t4911;
  double t4689;
  double t4708;
  double t4709;
  double t4986;
  double t4987;
  double t4988;
  double t4989;
  double t4991;
  double t4995;
  double t4996;
  double t4997;
  double t4998;
  double t5000;
  double t5004;
  double t5005;
  double t5006;
  double t5007;
  double t5009;
  double t5013;
  double t5014;
  double t5015;
  double t5016;
  double t5018;
  double t4934;
  double t4935;
  double t4936;
  double t4737;
  double t4738;
  double t4739;
  double t4875;
  double t4876;
  double t4877;
  double t5048;
  double t5049;
  double t5059;
  double t5060;
  double t4979;
  double t4981;
  double t4982;
  double t4812;
  double t4814;
  double t4815;
  double t4816;
  double t4817;
  double t4818;
  double t5054;
  double t5008;
  double t5010;
  double t5011;
  double t5065;
  double t5075;
  double t4918;
  double t4920;
  double t4921;
  double t4672;
  double t4685;
  double t4686;
  double t5082;
  double t5083;
  double t5084;
  double t5085;
  double t5087;
  double t5034;
  double t5035;
  double t5036;
  double t5092;
  double t5093;
  double t5094;
  double t5095;
  double t5097;
  double t5101;
  double t5102;
  double t5103;
  double t5104;
  double t5106;
  double t4942;
  double t4943;
  double t4944;
  double t4733;
  double t4734;
  double t4735;
  double t4871;
  double t4872;
  double t4873;
  double t5047;
  double t5050;
  double t5051;
  double t5052;
  double t5053;
  double t5055;
  double t5056;
  double t5057;
  double t5058;
  double t5061;
  double t5062;
  double t5063;
  double t5064;
  double t5066;
  double t5067;
  double t5068;
  double t4957;
  double t4961;
  double t4962;
  double t4802;
  double t4804;
  double t4805;
  double t4806;
  double t4807;
  double t4808;
  double t5086;
  double t5088;
  double t5089;
  double t5090;
  double t4999;
  double t5001;
  double t5002;
  double t5096;
  double t5098;
  double t5099;
  double t5100;
  double t4913;
  double t4915;
  double t4916;
  double t4652;
  double t4668;
  double t4669;
  double t5114;
  double t5115;
  double t5116;
  double t5117;
  double t5030;
  double t5031;
  double t5032;
  double t5119;
  double t5120;
  double t5121;
  double t5122;
  double t4938;
  double t4939;
  double t4940;
  double t4729;
  double t4730;
  double t4731;
  double t4867;
  double t4868;
  double t4869;
  double t4950;
  double t4954;
  double t4955;
  double t4784;
  double t4786;
  double t4787;
  double t4788;
  double t4789;
  double t4790;
  double t4990;
  double t4992;
  double t4993;
  double t4886;
  double t4892;
  double t4893;
  double t4632;
  double t4648;
  double t4649;
  double t5026;
  double t5027;
  double t5028;
  double t4926;
  double t4927;
  double t4928;
  double t4725;
  double t4726;
  double t4727;
  t2321 = Cos(var1[5]);
  t2849 = Sin(var1[3]);
  t3171 = Cos(var1[3]);
  t3214 = Sin(var1[4]);
  t4054 = Sin(var1[5]);
  t2082 = Cos(var1[4]);
  t4251 = -1.*var1[6];
  t4352 = -1.*var1[7];
  t4241 = -1.*var1[8];
  t4256 = var1[9] + t4251 + var1[8];
  t4318 = var1[9] + var1[11] + t4251 + var1[8];
  t4324 = var1[9] + var1[6] + var1[8];
  t4329 = var1[9] + var1[11] + var1[6] + var1[8];
  t4353 = var1[9] + t4251 + t4352 + var1[8];
  t4356 = var1[9] + var1[11] + t4251 + t4352 + var1[8];
  t4362 = var1[9] + var1[6] + t4352 + var1[8];
  t4365 = var1[9] + var1[11] + var1[6] + t4352 + var1[8];
  t4368 = var1[9] + t4251 + var1[7] + var1[8];
  t4371 = var1[9] + var1[11] + t4251 + var1[7] + var1[8];
  t4409 = var1[9] + var1[6] + var1[7] + var1[8];
  t4412 = var1[9] + var1[11] + var1[6] + var1[7] + var1[8];
  t4415 = var1[6] + t4352;
  t4418 = var1[6] + var1[7];
  t4435 = var1[6] + t4352 + t4241;
  t4451 = var1[6] + var1[7] + t4241;
  t4263 = Cos(t4256);
  t4319 = Cos(t4318);
  t4325 = Cos(t4324);
  t4332 = Cos(t4329);
  t4354 = Cos(t4353);
  t4357 = Cos(t4356);
  t4471 = var1[6] + t4352 + var1[8];
  t4363 = Cos(t4362);
  t4366 = Cos(t4365);
  t4369 = Cos(t4368);
  t4372 = Cos(t4371);
  t4501 = var1[6] + var1[7] + var1[8];
  t4410 = Cos(t4409);
  t4413 = Cos(t4412);
  t4242 = var1[6] + t4241;
  t4455 = Sin(t4256);
  t4457 = Sin(t4318);
  t4321 = var1[6] + var1[8];
  t4459 = Sin(t4324);
  t4463 = Sin(t4329);
  t4467 = Sin(t4353);
  t4469 = Sin(t4356);
  t4480 = Sin(t4362);
  t4494 = Sin(t4365);
  t4497 = Sin(t4368);
  t4499 = Sin(t4371);
  t4504 = Sin(t4409);
  t4506 = Sin(t4412);
  t4564 = var1[9] + t4352 + var1[8];
  t4567 = var1[9] + var1[11] + t4352 + var1[8];
  t4570 = var1[9] + var1[7] + var1[8];
  t4573 = var1[9] + var1[11] + var1[7] + var1[8];
  t4210 = Cos(var1[6]);
  t4245 = Cos(t4242);
  t4322 = Cos(t4321);
  t4416 = Sin(t4415);
  t4419 = Sin(t4418);
  t4436 = Sin(t4435);
  t4452 = Sin(t4451);
  t4478 = Sin(t4471);
  t4502 = Sin(t4501);
  t4597 = 81600.*t4319;
  t4340 = -81600.*t4332;
  t4602 = -4000.*t4357;
  t4367 = -4000.*t4366;
  t4606 = 4000.*t4372;
  t4414 = 4000.*t4413;
  t4614 = 8000.*t4457;
  t4466 = -8000.*t4463;
  t4618 = 40800.*t4469;
  t4495 = 40800.*t4494;
  t4623 = -40800.*t4499;
  t4507 = -40800.*t4506;
  t4568 = Cos(t4567);
  t4574 = Cos(t4573);
  t4583 = Sin(t4567);
  t4590 = Sin(t4573);
  t4525 = 8000.*t4332;
  t4531 = -40800.*t4366;
  t4540 = 40800.*t4413;
  t4551 = -81600.*t4463;
  t4555 = -4000.*t4494;
  t4559 = 4000.*t4506;
  t4596 = 99088.*t4263;
  t4326 = -99088.*t4325;
  t4601 = 6741.*t4354;
  t4364 = 6741.*t4363;
  t4605 = -6741.*t4369;
  t4411 = -6741.*t4410;
  t4613 = -13482.*t4455;
  t4460 = 13482.*t4459;
  t4617 = 49544.*t4467;
  t4482 = 49544.*t4480;
  t4622 = -49544.*t4497;
  t4505 = -49544.*t4504;
  t4565 = Cos(t4564);
  t4633 = 40800.*t4568;
  t4571 = Cos(t4570);
  t4634 = 40800.*t4574;
  t4581 = Sin(t4564);
  t4635 = 4000.*t4583;
  t4588 = Sin(t4570);
  t4636 = 4000.*t4590;
  t4639 = 8000.*t4319;
  t4524 = -13482.*t4325;
  t4640 = 40800.*t4357;
  t4530 = -49544.*t4363;
  t4641 = -40800.*t4372;
  t4538 = 49544.*t4410;
  t4642 = -81600.*t4457;
  t4550 = -99088.*t4459;
  t4643 = 4000.*t4469;
  t4554 = 6741.*t4480;
  t4644 = -4000.*t4499;
  t4558 = -6741.*t4504;
  t4595 = 24000.*t4245;
  t4323 = -24000.*t4322;
  t4611 = 12000.*t4436;
  t4612 = -12000.*t4452;
  t4479 = 12000.*t4478;
  t4503 = -12000.*t4502;
  t4578 = var1[7] + t4241;
  t4653 = 49544.*t4565;
  t4585 = var1[7] + var1[8];
  t4654 = 49544.*t4571;
  t4655 = -6741.*t4581;
  t4656 = -6741.*t4588;
  t4517 = Cos(t4435);
  t4520 = Cos(t4451);
  t4659 = -13482.*t4263;
  t4660 = 49544.*t4354;
  t4528 = Cos(t4471);
  t4529 = -12000.*t4528;
  t4661 = -49544.*t4369;
  t4535 = Cos(t4501);
  t4536 = 12000.*t4535;
  t4544 = Sin(t4242);
  t4662 = -99088.*t4455;
  t4548 = Sin(t4321);
  t4549 = -24000.*t4548;
  t4663 = -6741.*t4467;
  t4664 = 6741.*t4497;
  t4355 = -6741.*t4354;
  t4361 = 4000.*t4357;
  t4603 = -6741.*t4363;
  t4604 = 4000.*t4366;
  t4609 = 900.*t4416;
  t4434 = -900.*t4419;
  t4454 = 12000.*t4452;
  t4468 = -49544.*t4467;
  t4470 = -40800.*t4469;
  t4619 = -12000.*t4478;
  t4620 = -49544.*t4480;
  t4621 = -40800.*t4494;
  t4673 = Cos(t4578);
  t4675 = Cos(t4585);
  t4676 = 12000.*t4675;
  t4511 = Cos(t4415);
  t4513 = Cos(t4418);
  t4515 = 900.*t4513;
  t4679 = -12000.*t4517;
  t4521 = -12000.*t4520;
  t4526 = -49544.*t4354;
  t4527 = -40800.*t4357;
  t4552 = 6741.*t4467;
  t4553 = -4000.*t4469;
  t4512 = 900.*t4511;
  t4518 = 12000.*t4517;
  t4522 = 13482.*t4263;
  t4523 = -8000.*t4319;
  t4532 = 49544.*t4369;
  t4534 = 40800.*t4372;
  t4541 = Sin(var1[6]);
  t4543 = -36000.*t4541;
  t4545 = -24000.*t4544;
  t4546 = 99088.*t4455;
  t4547 = 81600.*t4457;
  t4556 = -6741.*t4497;
  t4557 = 4000.*t4499;
  t4566 = 6741.*t4565;
  t4569 = -4000.*t4568;
  t4572 = 6741.*t4571;
  t4575 = -4000.*t4574;
  t4576 = Sin(var1[7]);
  t4577 = 900.*t4576;
  t4579 = Sin(t4578);
  t4580 = -12000.*t4579;
  t4582 = 49544.*t4581;
  t4584 = 40800.*t4583;
  t4586 = Sin(t4585);
  t4587 = 12000.*t4586;
  t4589 = 49544.*t4588;
  t4591 = 40800.*t4590;
  t4592 = t4566 + t4569 + t4572 + t4575 + t4577 + t4580 + t4582 + t4584 + t4587 + t4589 + t4591;
  t4594 = 36000.*t4210;
  t4598 = 24000.*t4322;
  t4599 = 99088.*t4325;
  t4600 = 81600.*t4332;
  t4607 = 6741.*t4410;
  t4608 = -4000.*t4413;
  t4610 = 900.*t4419;
  t4615 = -13482.*t4459;
  t4616 = 8000.*t4463;
  t4624 = 12000.*t4502;
  t4625 = 49544.*t4504;
  t4626 = 40800.*t4506;
  t4627 = t4594 + t4595 + t4596 + t4597 + t4598 + t4599 + t4600 + t4601 + t4602 + t4603 + t4604 + t4605 + t4606 + t4607 + t4608 + t4609 + t4610 + t4611 + t4612 + t4613 + t4614 + t4615 + t4616 + t4617 + t4618 + t4619 + t4620 + t4621 + t4622 + t4623 + t4624 + t4625 + t4626;
  t4217 = -36000.*t4210;
  t4248 = -24000.*t4245;
  t4316 = -99088.*t4263;
  t4320 = -81600.*t4319;
  t4370 = 6741.*t4369;
  t4407 = -4000.*t4372;
  t4417 = -900.*t4416;
  t4438 = -12000.*t4436;
  t4456 = 13482.*t4455;
  t4458 = -8000.*t4457;
  t4498 = 49544.*t4497;
  t4500 = 40800.*t4499;
  t4508 = t4217 + t4248 + t4316 + t4320 + t4323 + t4326 + t4340 + t4355 + t4361 + t4364 + t4367 + t4370 + t4407 + t4411 + t4414 + t4417 + t4434 + t4438 + t4454 + t4456 + t4458 + t4460 + t4466 + t4468 + t4470 + t4479 + t4482 + t4495 + t4498 + t4500 + t4503 + t4505 + t4507;
  t4560 = t4512 + t4515 + t4518 + t4521 + t4522 + t4523 + t4524 + t4525 + t4526 + t4527 + t4529 + t4530 + t4531 + t4532 + t4534 + t4536 + t4538 + t4540 + t4543 + t4545 + t4546 + t4547 + t4549 + t4550 + t4551 + t4552 + t4553 + t4554 + t4555 + t4556 + t4557 + t4558 + t4559;
  t4593 = 2.*t2082*t4592;
  t4628 = -1.*t3214*t4627;
  t4629 = t4593 + t4628;
  t4631 = t4597 + t4340 + t4602 + t4367 + t4606 + t4414 + t4614 + t4466 + t4618 + t4495 + t4623 + t4507;
  t4637 = t4633 + t4634 + t4635 + t4636;
  t4638 = 2.*t3214*t4637;
  t4645 = t4639 + t4525 + t4640 + t4531 + t4641 + t4540 + t4642 + t4551 + t4643 + t4555 + t4644 + t4559;
  t4646 = t2082*t4645;
  t4647 = t4638 + t4646;
  t4651 = t4596 + t4597 + t4326 + t4340 + t4601 + t4602 + t4364 + t4367 + t4605 + t4606 + t4411 + t4414 + t4613 + t4614 + t4460 + t4466 + t4617 + t4618 + t4482 + t4495 + t4622 + t4623 + t4505 + t4507;
  t4657 = t4653 + t4633 + t4654 + t4634 + t4655 + t4635 + t4656 + t4636;
  t4658 = 2.*t3214*t4657;
  t4665 = t4659 + t4639 + t4524 + t4525 + t4660 + t4640 + t4530 + t4531 + t4661 + t4641 + t4538 + t4540 + t4662 + t4642 + t4550 + t4551 + t4663 + t4643 + t4554 + t4555 + t4664 + t4644 + t4558 + t4559;
  t4666 = t2082*t4665;
  t4667 = t4658 + t4666;
  t4671 = t4595 + t4596 + t4597 + t4323 + t4326 + t4340 + t4601 + t4602 + t4364 + t4367 + t4605 + t4606 + t4411 + t4414 + t4611 + t4612 + t4613 + t4614 + t4460 + t4466 + t4617 + t4618 + t4479 + t4482 + t4495 + t4622 + t4623 + t4503 + t4505 + t4507;
  t4674 = 12000.*t4673;
  t4677 = t4674 + t4653 + t4633 + t4676 + t4654 + t4634 + t4655 + t4635 + t4656 + t4636;
  t4678 = 2.*t3214*t4677;
  t4680 = 12000.*t4520;
  t4681 = 24000.*t4544;
  t4682 = t4679 + t4680 + t4659 + t4639 + t4524 + t4525 + t4660 + t4640 + t4529 + t4530 + t4531 + t4661 + t4641 + t4536 + t4538 + t4540 + t4681 + t4662 + t4642 + t4549 + t4550 + t4551 + t4663 + t4643 + t4554 + t4555 + t4664 + t4644 + t4558 + t4559;
  t4683 = t2082*t4682;
  t4684 = t4678 + t4683;
  t4688 = t4355 + t4361 + t4603 + t4604 + t4605 + t4606 + t4411 + t4414 + t4609 + t4434 + t4611 + t4454 + t4468 + t4470 + t4619 + t4620 + t4621 + t4622 + t4623 + t4503 + t4505 + t4507;
  t4690 = Cos(var1[7]);
  t4691 = 900.*t4690;
  t4692 = -12000.*t4673;
  t4693 = -49544.*t4565;
  t4694 = -40800.*t4568;
  t4695 = 6741.*t4581;
  t4696 = -4000.*t4583;
  t4697 = t4691 + t4692 + t4693 + t4694 + t4676 + t4654 + t4634 + t4695 + t4696 + t4656 + t4636;
  t4698 = 2.*t3214*t4697;
  t4699 = -900.*t4511;
  t4700 = 12000.*t4528;
  t4701 = 49544.*t4363;
  t4702 = 40800.*t4366;
  t4703 = -6741.*t4480;
  t4704 = 4000.*t4494;
  t4705 = t4699 + t4515 + t4679 + t4521 + t4526 + t4527 + t4700 + t4701 + t4702 + t4661 + t4641 + t4536 + t4538 + t4540 + t4552 + t4553 + t4703 + t4704 + t4664 + t4644 + t4558 + t4559;
  t4706 = t2082*t4705;
  t4707 = t4698 + t4706;
  t4711 = -54000. + t4512 + t4515 + t4518 + t4521 + t4522 + t4523 + t4524 + t4525 + t4526 + t4527 + t4529 + t4530 + t4531 + t4532 + t4534 + t4536 + t4538 + t4540 + t4543 + t4545 + t4546 + t4547 + t4549 + t4550 + t4551 + t4552 + t4553 + t4554 + t4555 + t4556 + t4557 + t4558 + t4559;
  t4713 = 2.*t3214*t4592;
  t4714 = t2082*t4627;
  t4715 = t4713 + t4714;
  t4756 = var1[9] + var1[8];
  t4759 = var1[9] + var1[11] + var1[8];
  t4757 = Cos(t4756);
  t4760 = Cos(t4759);
  t4762 = Sin(t4756);
  t4764 = Sin(t4759);
  t4761 = 40800.*t4760;
  t4765 = 4000.*t4764;
  t4769 = 6741.*t4757;
  t4770 = -4000.*t4760;
  t4771 = Sin(var1[8]);
  t4772 = 12000.*t4771;
  t4773 = 49544.*t4762;
  t4774 = 40800.*t4764;
  t4775 = t4769 + t4770 + t4772 + t4773 + t4774;
  t4781 = 4000.*t4760;
  t4782 = -40800.*t4764;
  t4758 = 49544.*t4757;
  t4763 = -6741.*t4762;
  t4799 = -6741.*t4757;
  t4800 = -49544.*t4762;
  t4754 = Cos(var1[8]);
  t4755 = 12000.*t4754;
  t4766 = 9000. + t4755 + t4758 + t4761 + t4763 + t4765;
  t4768 = 450.*t4690;
  t4776 = -1.*t4576*t4775;
  t4777 = t4768 + t4776;
  t4829 = 2.*t2082*t4637;
  t4830 = -1.*t3214*t4645;
  t4831 = t4829 + t4830;
  t4833 = 2.*t2082*t4657;
  t4834 = -1.*t3214*t4665;
  t4835 = t4833 + t4834;
  t4837 = 2.*t2082*t4677;
  t4838 = -1.*t3214*t4682;
  t4839 = t4837 + t4838;
  t4841 = 2.*t2082*t4697;
  t4842 = -1.*t3214*t4705;
  t4843 = t4841 + t4842;
  t4845 = -2.*t3214*t4592;
  t4846 = -1.*t2082*t4627;
  t4847 = t4845 + t4846;
  t3997 = -1.*t3171*t2321*t3214;
  t4056 = t2849*t4054;
  t4059 = t3997 + t4056;
  t4094 = -1.*t3171*t2321;
  t4125 = t2849*t3214*t4054;
  t4128 = t4094 + t4125;
  t4150 = -1.*t2321*t2849*t3214;
  t4178 = -1.*t3171*t4054;
  t4181 = t4150 + t4178;
  t4187 = -1.*t2321*t2849;
  t4191 = -1.*t3171*t3214*t4054;
  t4195 = t4187 + t4191;
  t4783 = t4781 + t4782;
  t4785 = t4761 + t4765;
  t4801 = t4799 + t4781 + t4800 + t4782;
  t4803 = t4758 + t4761 + t4763 + t4765;
  t4810 = -12000.*t4771;
  t4811 = t4799 + t4781 + t4810 + t4800 + t4782;
  t4813 = t4755 + t4758 + t4761 + t4763 + t4765;
  t4792 = -450.*t4576;
  t4793 = -1.*t4690*t4775;
  t4794 = t4792 + t4793;
  t4767 = -1.*t4541*t4766;
  t4778 = t4210*t4777;
  t4779 = t4767 + t4778;
  t4887 = -8000.*t4332;
  t4888 = -40800.*t4413;
  t4889 = 81600.*t4463;
  t4890 = -4000.*t4506;
  t4896 = -900.*t4513;
  t4898 = -12000.*t4535;
  t4899 = -49544.*t4410;
  t4903 = 6741.*t4504;
  t4897 = 13482.*t4325;
  t4902 = 99088.*t4459;
  t4901 = 24000.*t4548;
  t4509 = -1.*t2849*t4508;
  t4561 = -1.*t3171*t2082*t4560;
  t4562 = t4509 + t4561;
  t4891 = t4523 + t4887 + t4527 + t4702 + t4534 + t4888 + t4547 + t4889 + t4553 + t4704 + t4557 + t4890;
  t4900 = 36000.*t4541;
  t4904 = t4699 + t4896 + t4679 + t4680 + t4659 + t4639 + t4897 + t4887 + t4660 + t4640 + t4700 + t4701 + t4702 + t4661 + t4641 + t4898 + t4899 + t4888 + t4900 + t4681 + t4662 + t4642 + t4901 + t4902 + t4889 + t4663 + t4643 + t4703 + t4704 + t4664 + t4644 + t4903 + t4890;
  t4909 = t4512 + t4896 + t4518 + t4680 + t4660 + t4640 + t4529 + t4530 + t4531 + t4532 + t4534 + t4898 + t4899 + t4888 + t4663 + t4643 + t4554 + t4555 + t4556 + t4557 + t4903 + t4890;
  t4914 = t4522 + t4523 + t4897 + t4887 + t4526 + t4527 + t4701 + t4702 + t4532 + t4534 + t4899 + t4888 + t4546 + t4547 + t4902 + t4889 + t4552 + t4553 + t4703 + t4704 + t4556 + t4557 + t4903 + t4890;
  t4919 = t4518 + t4521 + t4522 + t4523 + t4897 + t4887 + t4526 + t4527 + t4700 + t4701 + t4702 + t4532 + t4534 + t4898 + t4899 + t4888 + t4545 + t4546 + t4547 + t4901 + t4902 + t4889 + t4552 + t4553 + t4703 + t4704 + t4556 + t4557 + t4903 + t4890;
  t4720 = t3171*t4508;
  t4721 = -1.*t2082*t2849*t4560;
  t4722 = t4720 + t4721;
  t4951 = 4000.*t4574;
  t4952 = -40800.*t4590;
  t4958 = -6741.*t4571;
  t4959 = -49544.*t4588;
  t4974 = -12000.*t4586;
  t4795 = 2.*t2082*t4541*t4794;
  t4796 = t3214*t4697;
  t4797 = t4795 + t4796;
  t4953 = t4569 + t4951 + t4584 + t4952;
  t4960 = t4566 + t4569 + t4958 + t4951 + t4582 + t4584 + t4959 + t4952;
  t4980 = t4566 + t4569 + t4958 + t4951 + t4580 + t4582 + t4584 + t4974 + t4959 + t4952;
  t4968 = -6741.*t4565;
  t4969 = 4000.*t4568;
  t4970 = -900.*t4576;
  t4971 = 12000.*t4579;
  t4972 = -49544.*t4581;
  t4973 = -40800.*t4583;
  t4975 = t4968 + t4969 + t4958 + t4951 + t4970 + t4971 + t4972 + t4973 + t4974 + t4959 + t4952;
  t4908 = -1.*t2082*t2849*t4688;
  t4910 = t3171*t4909;
  t4911 = t4908 + t4910;
  t4689 = -1.*t2849*t4688;
  t4708 = -1.*t3171*t4707;
  t4709 = t4689 + t4708;
  t4986 = 2.*t3214*t4953;
  t4987 = t4602 + t4604 + t4407 + t4414 + t4618 + t4621 + t4500 + t4507;
  t4988 = t2082*t4987;
  t4989 = t4986 + t4988;
  t4991 = t4527 + t4531 + t4641 + t4888 + t4553 + t4555 + t4644 + t4890;
  t4995 = 2.*t3214*t4960;
  t4996 = t4601 + t4602 + t4603 + t4604 + t4370 + t4407 + t4411 + t4414 + t4617 + t4618 + t4620 + t4621 + t4498 + t4500 + t4505 + t4507;
  t4997 = t2082*t4996;
  t4998 = t4995 + t4997;
  t5000 = t4526 + t4527 + t4530 + t4531 + t4661 + t4641 + t4899 + t4888 + t4552 + t4553 + t4554 + t4555 + t4664 + t4644 + t4903 + t4890;
  t5004 = 2.*t3214*t4980;
  t5005 = t4601 + t4602 + t4603 + t4604 + t4370 + t4407 + t4411 + t4414 + t4438 + t4612 + t4617 + t4618 + t4619 + t4620 + t4621 + t4498 + t4500 + t4503 + t4505 + t4507;
  t5006 = t2082*t5005;
  t5007 = t5004 + t5006;
  t5009 = t4679 + t4521 + t4526 + t4527 + t4529 + t4530 + t4531 + t4661 + t4641 + t4898 + t4899 + t4888 + t4552 + t4553 + t4554 + t4555 + t4664 + t4644 + t4903 + t4890;
  t5013 = 2.*t3214*t4975;
  t5014 = t4355 + t4361 + t4364 + t4367 + t4370 + t4407 + t4411 + t4414 + t4417 + t4434 + t4438 + t4454 + t4468 + t4470 + t4479 + t4482 + t4495 + t4498 + t4500 + t4503 + t4505 + t4507;
  t5015 = t2082*t5014;
  t5016 = t5013 + t5015;
  t5018 = t4699 + t4896 + t4679 + t4680 + t4660 + t4640 + t4700 + t4701 + t4702 + t4661 + t4641 + t4898 + t4899 + t4888 + t4663 + t4643 + t4703 + t4704 + t4664 + t4644 + t4903 + t4890;
  t4934 = t3171*t2082*t4688;
  t4935 = t2849*t4909;
  t4936 = t4934 + t4935;
  t4737 = t3171*t4688;
  t4738 = -1.*t2849*t4707;
  t4739 = t4737 + t4738;
  t4875 = -1.*t4541*t4811;
  t4876 = -1.*t4210*t4576*t4813;
  t4877 = t4875 + t4876;
  t5048 = -40800.*t4760;
  t5049 = -4000.*t4764;
  t5059 = -49544.*t4757;
  t5060 = 6741.*t4762;
  t4979 = -2.*t4690*t3214*t4541*t4813;
  t4981 = -1.*t2082*t4980;
  t4982 = t4979 + t4981;
  t4812 = t4210*t4811;
  t4814 = -1.*t4541*t4576*t4813;
  t4815 = t4812 + t4814;
  t4816 = 2.*t2082*t4815;
  t4817 = t3214*t4677;
  t4818 = t4816 + t4817;
  t5054 = t4969 + t4951 + t4973 + t4952;
  t5008 = -1.*t2849*t5007;
  t5010 = t3171*t5009;
  t5011 = t5008 + t5010;
  t5065 = t4968 + t4969 + t4958 + t4951 + t4972 + t4973 + t4959 + t4952;
  t5075 = t4968 + t4969 + t4958 + t4951 + t4971 + t4972 + t4973 + t4974 + t4959 + t4952;
  t4918 = -1.*t2082*t2849*t4671;
  t4920 = t3171*t4919;
  t4921 = t4918 + t4920;
  t4672 = -1.*t2849*t4671;
  t4685 = -1.*t3171*t4684;
  t4686 = t4672 + t4685;
  t5082 = 2.*t3214*t5054;
  t5083 = t4320 + t4340 + t4361 + t4367 + t4407 + t4414 + t4458 + t4466 + t4470 + t4495 + t4500 + t4507;
  t5084 = t2082*t5083;
  t5085 = t5082 + t5084;
  t5087 = t4639 + t4887 + t4640 + t4702 + t4641 + t4888 + t4642 + t4889 + t4643 + t4704 + t4644 + t4890;
  t5034 = t3171*t5007;
  t5035 = t2849*t5009;
  t5036 = t5034 + t5035;
  t5092 = 2.*t3214*t5065;
  t5093 = t4316 + t4320 + t4326 + t4340 + t4355 + t4361 + t4364 + t4367 + t4370 + t4407 + t4411 + t4414 + t4456 + t4458 + t4460 + t4466 + t4468 + t4470 + t4482 + t4495 + t4498 + t4500 + t4505 + t4507;
  t5094 = t2082*t5093;
  t5095 = t5092 + t5094;
  t5097 = t4659 + t4639 + t4897 + t4887 + t4660 + t4640 + t4701 + t4702 + t4661 + t4641 + t4899 + t4888 + t4662 + t4642 + t4902 + t4889 + t4663 + t4643 + t4703 + t4704 + t4664 + t4644 + t4903 + t4890;
  t5101 = 2.*t3214*t5075;
  t5102 = t4248 + t4316 + t4320 + t4323 + t4326 + t4340 + t4355 + t4361 + t4364 + t4367 + t4370 + t4407 + t4411 + t4414 + t4438 + t4454 + t4456 + t4458 + t4460 + t4466 + t4468 + t4470 + t4479 + t4482 + t4495 + t4498 + t4500 + t4503 + t4505 + t4507;
  t5103 = t2082*t5102;
  t5104 = t5101 + t5103;
  t5106 = t4679 + t4680 + t4659 + t4639 + t4897 + t4887 + t4660 + t4640 + t4700 + t4701 + t4702 + t4661 + t4641 + t4898 + t4899 + t4888 + t4681 + t4662 + t4642 + t4901 + t4902 + t4889 + t4663 + t4643 + t4703 + t4704 + t4664 + t4644 + t4903 + t4890;
  t4942 = t3171*t2082*t4671;
  t4943 = t2849*t4919;
  t4944 = t4942 + t4943;
  t4733 = t3171*t4671;
  t4734 = -1.*t2849*t4684;
  t4735 = t4733 + t4734;
  t4871 = -1.*t4541*t4801;
  t4872 = -1.*t4210*t4576*t4803;
  t4873 = t4871 + t4872;
  t5047 = -1.*t4541*t4576*t4783;
  t5050 = t5048 + t5049;
  t5051 = t4210*t5050;
  t5052 = t5047 + t5051;
  t5053 = 2.*t3214*t5052;
  t5055 = -1.*t2082*t5054;
  t5056 = t5053 + t5055;
  t5057 = 5.e-6*var2[11]*t5056;
  t5058 = -1.*t4541*t4576*t4801;
  t5061 = t5059 + t5048 + t5060 + t5049;
  t5062 = t4210*t5061;
  t5063 = t5058 + t5062;
  t5064 = 2.*t3214*t5063;
  t5066 = -1.*t2082*t5065;
  t5067 = t5064 + t5066;
  t5068 = 5.e-6*var2[9]*t5067;
  t4957 = -2.*t4690*t3214*t4541*t4803;
  t4961 = -1.*t2082*t4960;
  t4962 = t4957 + t4961;
  t4802 = t4210*t4801;
  t4804 = -1.*t4541*t4576*t4803;
  t4805 = t4802 + t4804;
  t4806 = 2.*t2082*t4805;
  t4807 = t3214*t4657;
  t4808 = t4806 + t4807;
  t5086 = -1.*t2849*t5085;
  t5088 = t3171*t5087;
  t5089 = t5086 + t5088;
  t5090 = 2.5e-6*var2[11]*t5089;
  t4999 = -1.*t2849*t4998;
  t5001 = t3171*t5000;
  t5002 = t4999 + t5001;
  t5096 = -1.*t2849*t5095;
  t5098 = t3171*t5097;
  t5099 = t5096 + t5098;
  t5100 = 2.5e-6*var2[9]*t5099;
  t4913 = -1.*t2082*t2849*t4651;
  t4915 = t3171*t4914;
  t4916 = t4913 + t4915;
  t4652 = -1.*t2849*t4651;
  t4668 = -1.*t3171*t4667;
  t4669 = t4652 + t4668;
  t5114 = t3171*t5085;
  t5115 = t2849*t5087;
  t5116 = t5114 + t5115;
  t5117 = 2.5e-6*var2[11]*t5116;
  t5030 = t3171*t4998;
  t5031 = t2849*t5000;
  t5032 = t5030 + t5031;
  t5119 = t3171*t5095;
  t5120 = t2849*t5097;
  t5121 = t5119 + t5120;
  t5122 = 2.5e-6*var2[9]*t5121;
  t4938 = t3171*t2082*t4651;
  t4939 = t2849*t4914;
  t4940 = t4938 + t4939;
  t4729 = t3171*t4651;
  t4730 = -1.*t2849*t4667;
  t4731 = t4729 + t4730;
  t4867 = -1.*t4541*t4783;
  t4868 = -1.*t4210*t4576*t4785;
  t4869 = t4867 + t4868;
  t4950 = -2.*t4690*t3214*t4541*t4785;
  t4954 = -1.*t2082*t4953;
  t4955 = t4950 + t4954;
  t4784 = t4210*t4783;
  t4786 = -1.*t4541*t4576*t4785;
  t4787 = t4784 + t4786;
  t4788 = 2.*t2082*t4787;
  t4789 = t3214*t4637;
  t4790 = t4788 + t4789;
  t4990 = -1.*t2849*t4989;
  t4992 = t3171*t4991;
  t4993 = t4990 + t4992;
  t4886 = -1.*t2082*t2849*t4631;
  t4892 = t3171*t4891;
  t4893 = t4886 + t4892;
  t4632 = -1.*t2849*t4631;
  t4648 = -1.*t3171*t4647;
  t4649 = t4632 + t4648;
  t5026 = t3171*t4989;
  t5027 = t2849*t4991;
  t5028 = t5026 + t5027;
  t4926 = t3171*t2082*t4631;
  t4927 = t2849*t4891;
  t4928 = t4926 + t4927;
  t4725 = t3171*t4631;
  t4726 = -1.*t2849*t4647;
  t4727 = t4725 + t4726;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=t4059*var2[3] - 1.*t2082*t2321*t2849*var2[4] + t4128*var2[5];
  p_output1[19]=t4195*var2[3] - 1.*t2082*t2849*t4054*var2[4] + t4181*var2[5];
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=2.5e-6*(-1.*t3171*t4711 + t2849*t4715)*var2[3] - 2.5e-6*t3171*t4629*var2[4] + 2.5e-6*t4562*var2[6] + 2.5e-6*t4709*var2[7] + 2.5e-6*t4686*var2[8] + 2.5e-6*t4669*var2[9] + 2.5e-6*t4649*var2[11];
  p_output1[23]=2.5e-6*(-1.*t2849*t4711 - 1.*t3171*t4715)*var2[3] - 2.5e-6*t2849*t4629*var2[4] + 2.5e-6*t4722*var2[6] + 2.5e-6*t4739*var2[7] + 2.5e-6*t4735*var2[8] + 2.5e-6*t4731*var2[9] + 2.5e-6*t4727*var2[11];
  p_output1[24]=-1.*t2082*t2321*t2849*var2[3] - 1.*t2321*t3171*t3214*var2[4] - 1.*t2082*t3171*t4054*var2[5];
  p_output1[25]=-1.*t2082*t2849*t4054*var2[3] - 1.*t3171*t3214*t4054*var2[4] + t2082*t2321*t3171*var2[5];
  p_output1[26]=0;
  p_output1[27]=5.e-6*(t2082*t4592 - 2.*t3214*(t4210*t4766 + t4541*t4777))*var2[4] + 1.e-5*t2082*t4779*var2[6] + 5.e-6*t4797*var2[7] + 5.e-6*t4818*var2[8] + 5.e-6*t4808*var2[9] + 5.e-6*t4790*var2[11];
  p_output1[28]=-2.5e-6*t3171*t4629*var2[3] - 2.5e-6*t2849*t4847*var2[4] + 2.5e-6*t2849*t3214*t4560*var2[6] - 2.5e-6*t2849*t4843*var2[7] - 2.5e-6*t2849*t4839*var2[8] - 2.5e-6*t2849*t4835*var2[9] - 2.5e-6*t2849*t4831*var2[11];
  p_output1[29]=-2.5e-6*t2849*t4629*var2[3] + 2.5e-6*t3171*t4847*var2[4] - 2.5e-6*t3171*t3214*t4560*var2[6] + 2.5e-6*t3171*t4843*var2[7] + 2.5e-6*t3171*t4839*var2[8] + 2.5e-6*t3171*t4835*var2[9] + 2.5e-6*t3171*t4831*var2[11];
  p_output1[30]=t4128*var2[3] - 1.*t2082*t3171*t4054*var2[4] + t4059*var2[5];
  p_output1[31]=t4181*var2[3] + t2082*t2321*t3171*var2[4] + t4195*var2[5];
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=1.e-5*t2082*t4779*var2[4] + 1.e-5*t3214*(-1.*t4210*t4766 - 1.*t4541*t4777)*var2[6] + 1.e-5*t3214*t4210*t4794*var2[7] + 1.e-5*t3214*t4877*var2[8] + 1.e-5*t3214*t4873*var2[9] + 1.e-5*t3214*t4869*var2[11];
  p_output1[40]=2.5e-6*t4562*var2[3] + 2.5e-6*t2849*t3214*t4560*var2[4] + 2.5e-6*(-1.*t2082*t2849*t4508 + t3171*t4904)*var2[6] + 2.5e-6*t4911*var2[7] + 2.5e-6*t4921*var2[8] + 2.5e-6*t4916*var2[9] + 2.5e-6*t4893*var2[11];
  p_output1[41]=2.5e-6*t4722*var2[3] - 2.5e-6*t3171*t3214*t4560*var2[4] + 2.5e-6*(t2082*t3171*t4508 + t2849*t4904)*var2[6] + 2.5e-6*t4936*var2[7] + 2.5e-6*t4944*var2[8] + 2.5e-6*t4940*var2[9] + 2.5e-6*t4928*var2[11];
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=5.e-6*t4797*var2[4] + 1.e-5*t3214*t4210*t4794*var2[6] + 5.e-6*(2.*t3214*t4541*(-450.*t4690 + t4576*t4775) - 1.*t2082*t4975)*var2[7] + 5.e-6*t4982*var2[8] + 5.e-6*t4962*var2[9] + 5.e-6*t4955*var2[11];
  p_output1[46]=2.5e-6*t4709*var2[3] - 2.5e-6*t2849*t4843*var2[4] + 2.5e-6*t4911*var2[6] + 2.5e-6*(-1.*t2849*t5016 + t3171*t5018)*var2[7] + 2.5e-6*t5011*var2[8] + 2.5e-6*t5002*var2[9] + 2.5e-6*t4993*var2[11];
  p_output1[47]=2.5e-6*t4739*var2[3] + 2.5e-6*t3171*t4843*var2[4] + 2.5e-6*t4936*var2[6] + 2.5e-6*(t3171*t5016 + t2849*t5018)*var2[7] + 2.5e-6*t5036*var2[8] + 2.5e-6*t5032*var2[9] + 2.5e-6*t5028*var2[11];
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=t5057 + t5068 + 5.e-6*t4818*var2[4] + 1.e-5*t3214*t4877*var2[6] + 5.e-6*t4982*var2[7] + 5.e-6*(2.*t3214*(-1.*t4541*t4576*t4811 + t4210*(-12000.*t4754 + t5048 + t5049 + t5059 + t5060)) - 1.*t2082*t5075)*var2[8];
  p_output1[52]=t5090 + t5100 + 2.5e-6*t4686*var2[3] - 2.5e-6*t2849*t4839*var2[4] + 2.5e-6*t4921*var2[6] + 2.5e-6*t5011*var2[7] + 2.5e-6*(-1.*t2849*t5104 + t3171*t5106)*var2[8];
  p_output1[53]=t5117 + t5122 + 2.5e-6*t4735*var2[3] + 2.5e-6*t3171*t4839*var2[4] + 2.5e-6*t4944*var2[6] + 2.5e-6*t5036*var2[7] + 2.5e-6*(t3171*t5104 + t2849*t5106)*var2[8];
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=t5057 + t5068 + 5.e-6*t4808*var2[4] + 1.e-5*t3214*t4873*var2[6] + 5.e-6*t4962*var2[7] + 5.e-6*t5067*var2[8];
  p_output1[58]=t5090 + t5100 + 2.5e-6*t4669*var2[3] - 2.5e-6*t2849*t4835*var2[4] + 2.5e-6*t4916*var2[6] + 2.5e-6*t5002*var2[7] + 2.5e-6*t5099*var2[8];
  p_output1[59]=t5117 + t5122 + 2.5e-6*t4731*var2[3] + 2.5e-6*t3171*t4835*var2[4] + 2.5e-6*t4940*var2[6] + 2.5e-6*t5032*var2[7] + 2.5e-6*t5121*var2[8];
  p_output1[60]=0;
  p_output1[61]=0;
  p_output1[62]=0;
  p_output1[63]=0;
  p_output1[64]=0;
  p_output1[65]=0;
  p_output1[66]=0;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=t5057 + 5.e-6*t4790*var2[4] + 1.e-5*t3214*t4869*var2[6] + 5.e-6*t4955*var2[7] + 5.e-6*t5056*var2[8] + 5.e-6*t5056*var2[9];
  p_output1[70]=t5090 + 2.5e-6*t4649*var2[3] - 2.5e-6*t2849*t4831*var2[4] + 2.5e-6*t4893*var2[6] + 2.5e-6*t4993*var2[7] + 2.5e-6*t5089*var2[8] + 2.5e-6*t5089*var2[9];
  p_output1[71]=t5117 + 2.5e-6*t4727*var2[3] + 2.5e-6*t3171*t4831*var2[4] + 2.5e-6*t4928*var2[6] + 2.5e-6*t5028*var2[7] + 2.5e-6*t5116*var2[8] + 2.5e-6*t5116*var2[9];
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=0;
  p_output1[91]=0;
  p_output1[92]=0;
  p_output1[93]=0;
  p_output1[94]=0;
  p_output1[95]=0;
  p_output1[96]=0;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=0;
  p_output1[121]=0;
  p_output1[122]=0;
  p_output1[123]=0;
  p_output1[124]=0;
  p_output1[125]=0;
  p_output1[126]=0;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 6, (mwSize) 22, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#endif // MATLAB_MEX_FILE

namespace SymFunction
{

void Jdot_pelvis_LeftStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}




