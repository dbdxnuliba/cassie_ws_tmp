%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% position_rightFoot
% 
% This file is automatically converted to matlab format from C code.
% Source symbolic expressions exported from FROST:
% 	 https://github.com/ayonga/frost-dev
% 
% Author: Jenna Reher (jreher@caltech.edu)
% Automatically generated on: November 07, 2021 T 02:26
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function out = position_rightFoot(var1)

  out = zeros(3, 1);

  p_output1 = zeros(3,1);


  t3283 = sin(var1(15));
  t2127 = cos(var1(16));
  t2446 = -1.*t2127;
  t2676 = 1. + t2446;
  t3023 = sin(var1(16));
  t3303 = sin(var1(5));
  t719 = cos(var1(5));
  t3519 = cos(var1(17));
  t3542 = -1.*t3519;
  t3560 = 1. + t3542;
  t3562 = sin(var1(17));
  t3500 = cos(var1(15));
  t3670 = t2127*t719;
  t3674 = t3283*t3023*t3303;
  t3692 = t3670 + t3674;
  t3718 = cos(var1(18));
  t3724 = -1.*t3718;
  t3725 = 1. + t3724;
  t3868 = sin(var1(18));
  t3882 = t3500*t3562*t3303;
  t3883 = t3519*t3692;
  t3969 = t3882 + t3883;
  t3986 = t3500*t3519*t3303;
  t3991 = -1.*t3562*t3692;
  t3997 = t3986 + t3991;
  t4000 = cos(var1(19));
  t4011 = -1.*t4000;
  t4016 = 1. + t4011;
  t4018 = sin(var1(19));
  t4022 = -1.*t3868*t3969;
  t4023 = t3718*t3997;
  t4024 = t4022 + t4023;
  t4031 = t3718*t3969;
  t4032 = t3868*t3997;
  t4038 = t4031 + t4032;
  t4047 = cos(var1(20));
  t4051 = -1.*t4047;
  t4057 = 1. + t4051;
  t4066 = sin(var1(20));
  t4084 = t4018*t4024;
  t4091 = t4000*t4038;
  t4097 = t4084 + t4091;
  t4105 = t4000*t4024;
  t4110 = -1.*t4018*t4038;
  t4114 = t4105 + t4110;
  t4123 = cos(var1(22));
  t4128 = -1.*t4123;
  t4133 = 1. + t4128;
  t4143 = sin(var1(22));
  t4162 = -1.*t4066*t4097;
  t4168 = t4047*t4114;
  t4169 = t4162 + t4168;
  t4183 = t4047*t4097;
  t4189 = t4066*t4114;
  t4196 = t4183 + t4189;
  t3561 = -0.09*t3560;
  t3563 = 0.049*t3562;
  t3569 = t3561 + t3563;
  t4254 = cos(var1(4));
  t4256 = sin(var1(4));
  t3387 = -0.135*t2676;
  t3394 = 0.049*t3023;
  t3437 = t3387 + t3394;
  t2841 = -0.049*t2676;
  t3077 = -0.135*t3023;
  t3159 = t2841 + t3077;
  t3639 = -0.049*t3560;
  t3651 = -0.09*t3562;
  t3666 = t3639 + t3651;
  t4264 = t3500*t4254;
  t4265 = -1.*t719*t3283*t4256;
  t4266 = t4264 + t4265;
  t3857 = -0.049*t3725;
  t3870 = -0.21*t3868;
  t3880 = t3857 + t3870;
  t4259 = -1.*t4254*t3283;
  t4260 = -1.*t3500*t719*t4256;
  t4261 = t4259 + t4260;
  t4271 = t3023*t4266;
  t4272 = t2127*t4256*t3303;
  t4273 = t4271 + t4272;
  t3972 = -0.21*t3725;
  t3975 = 0.049*t3868;
  t3976 = t3972 + t3975;
  t4017 = -0.27068*t4016;
  t4020 = 0.00159*t4018;
  t4021 = t4017 + t4020;
  t4282 = t3562*t4261;
  t4283 = t3519*t4273;
  t4289 = t4282 + t4283;
  t4291 = t3519*t4261;
  t4292 = -1.*t3562*t4273;
  t4294 = t4291 + t4292;
  t4028 = -0.00159*t4016;
  t4029 = -0.27068*t4018;
  t4030 = t4028 + t4029;
  t4062 = 0.01841*t4057;
  t4071 = -0.70544*t4066;
  t4078 = t4062 + t4071;
  t4297 = -1.*t3868*t4289;
  t4298 = t3718*t4294;
  t4299 = t4297 + t4298;
  t4302 = t3718*t4289;
  t4303 = t3868*t4294;
  t4304 = t4302 + t4303;
  t4099 = -0.70544*t4057;
  t4101 = -0.01841*t4066;
  t4103 = t4099 + t4101;
  t4137 = -1.11344*t4133;
  t4151 = 0.02159*t4143;
  t4157 = t4137 + t4151;
  t4307 = t4018*t4299;
  t4309 = t4000*t4304;
  t4310 = t4307 + t4309;
  t4312 = t4000*t4299;
  t4313 = -1.*t4018*t4304;
  t4316 = t4312 + t4313;
  t4172 = -0.02159*t4133;
  t4173 = -1.11344*t4143;
  t4175 = t4172 + t4173;
  t4331 = -1.*t4066*t4310;
  t4336 = t4047*t4316;
  t4343 = t4331 + t4336;
  t4352 = t4047*t4310;
  t4357 = t4066*t4316;
  t4361 = t4352 + t4357;
  t4246 = -1.*t3500;
  t4253 = 1. + t4246;
  t4405 = t4254*t719*t3283;
  t4409 = t3500*t4256;
  t4414 = t4405 + t4409;
  t4422 = t3500*t4254*t719;
  t4428 = -1.*t3283*t4256;
  t4432 = t4422 + t4428;
  t4435 = t3023*t4414;
  t4438 = -1.*t2127*t4254*t3303;
  t4439 = t4435 + t4438;
  t4460 = t3562*t4432;
  t4466 = t3519*t4439;
  t4471 = t4460 + t4466;
  t4481 = t3519*t4432;
  t4486 = -1.*t3562*t4439;
  t4492 = t4481 + t4486;
  t4499 = -1.*t3868*t4471;
  t4500 = t3718*t4492;
  t4501 = t4499 + t4500;
  t4503 = t3718*t4471;
  t4505 = t3868*t4492;
  t4506 = t4503 + t4505;
  t4510 = t4018*t4501;
  t4511 = t4000*t4506;
  t4513 = t4510 + t4511;
  t4517 = t4000*t4501;
  t4519 = -1.*t4018*t4506;
  t4521 = t4517 + t4519;
  t4524 = -1.*t4066*t4513;
  t4525 = t4047*t4521;
  t4532 = t4524 + t4525;
  t4534 = t4047*t4513;
  t4535 = t4066*t4521;
  t4536 = t4534 + t4535;
  p_output1(1)=0.135*t3283*t3303 + t3283*t3303*t3437 + t3303*t3500*t3569 + t3666*t3692 + t3880*t3969 + t3976*t3997 + t4021*t4024 + t4030*t4038 + t4078*t4097 + t4103*t4114 + t4157*t4169 + t4175*t4196 + 0.0306*(t4143*t4169 + t4123*t4196) - 1.13106*(t4123*t4169 - 1.*t4143*t4196) + t3159*t719 - 0.1305*(t2127*t3283*t3303 - 1.*t3023*t719) + var1(1);
  p_output1(2)=-0.135*t4253*t4254 + t3159*t3303*t4256 + t3569*t4261 + t3437*t4266 - 0.1305*(-1.*t3023*t3303*t4256 + t2127*t4266) + t3666*t4273 + t3880*t4289 + t3976*t4294 + t4021*t4299 + t4030*t4304 + t4078*t4310 + t4103*t4316 + t4157*t4343 + t4175*t4361 + 0.0306*(t4143*t4343 + t4123*t4361) - 1.13106*(t4123*t4343 - 1.*t4143*t4361) - 0.135*t3283*t4256*t719 + var1(2);
  p_output1(3)=-1.*t3159*t3303*t4254 - 0.135*t4253*t4256 + t3437*t4414 - 0.1305*(t3023*t3303*t4254 + t2127*t4414) + t3569*t4432 + t3666*t4439 + t3880*t4471 + t3976*t4492 + t4021*t4501 + t4030*t4506 + t4078*t4513 + t4103*t4521 + t4157*t4532 + t4175*t4536 + 0.0306*(t4143*t4532 + t4123*t4536) - 1.13106*(t4123*t4532 - 1.*t4143*t4536) + 0.135*t3283*t4254*t719 + var1(3);
  out = reshape(p_output1, 3, 1);
end