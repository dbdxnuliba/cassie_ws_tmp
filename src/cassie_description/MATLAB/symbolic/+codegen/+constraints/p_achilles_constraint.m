%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% p_achilles_constraint
% 
% This file is automatically converted to matlab format from C code.
% Source symbolic expressions exported from FROST:
% 	 https://github.com/ayonga/frost-dev
% 
% Author: Jenna Reher (jreher@caltech.edu)
% Automatically generated on: November 07, 2021 T 02:26
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function out = p_achilles_constraint(var1)

  out = zeros(2, 1);

  p_output1 = zeros(2,1);


  t34 = sin(var1(10));
  t21 = cos(var1(10));
  t36 = cos(var1(11));
  t38 = -1.*t36;
  t39 = 1. + t38;
  t52 = sin(var1(11));
  t121 = cos(var1(12));
  t130 = -1.*t121;
  t131 = 1. + t130;
  t142 = sin(var1(12));
  t157 = t21*t36;
  t168 = -1.*t34*t52;
  t169 = t157 + t168;
  t106 = t36*t34;
  t112 = t21*t52;
  t113 = t106 + t112;
  t184 = cos(var1(13));
  t192 = -1.*t184;
  t193 = 1. + t192;
  t206 = t121*t169;
  t217 = -1.*t113*t142;
  t218 = t206 + t217;
  t241 = sin(var1(13));
  t223 = t121*t113;
  t225 = t169*t142;
  t229 = t223 + t225;
  t250 = -0.996943*t241;
  t326 = -0.0004284921280000001*t193;
  t237 = 0.0004284921280000001*t193;
  t367 = 0.996943*t241;
  t24 = -1.*t21;
  t27 = 1. + t24;
  t44 = -0.00159*t39;
  t53 = -0.27068*t52;
  t54 = t44 + t53;
  t69 = -0.27068*t39;
  t73 = 0.00159*t52;
  t78 = t69 + t73;
  t135 = 0.01841*t131;
  t146 = -0.70544*t142;
  t147 = t135 + t146;
  t170 = -0.70544*t131;
  t178 = -0.01841*t142;
  t180 = t170 + t178;
  t199 = -0.999969365345*t193;
  t200 = 1. + t199;
  t429 = -1.*t36*t34;
  t430 = -1.*t21*t52;
  t432 = t429 + t430;
  t253 = t237 + t250;
  t437 = t121*t432;
  t442 = -1.*t169*t142;
  t445 = t437 + t442;
  t272 = 0.005481192614*t193;
  t274 = -0.077936*t241;
  t283 = t272 + t274;
  t452 = t432*t142;
  t455 = t206 + t452;
  t290 = 0.07769774964800001*t193;
  t295 = 0.005498*t241;
  t297 = t290 + t295;
  t313 = -1.2096424700126054e-9*var1(13);
  t320 = -0.6934128581485427*t193;
  t327 = t326 + t250;
  t331 = -0.021877537552*t327;
  t332 = -0.005481192614*t193;
  t338 = 0.077936*t241;
  t339 = t332 + t338;
  t340 = 0.005534467322*t339;
  t343 = t313 + t320 + t331 + t340;
  t346 = -1.7147089040178687e-8*var1(13);
  t349 = -0.021744644052735636*t193;
  t354 = -0.07769774964800001*t193;
  t355 = -0.005498*t241;
  t364 = t354 + t355;
  t366 = 0.005534467322*t364;
  t376 = t326 + t367;
  t378 = -0.6934341012630001*t376;
  t380 = t346 + t349 + t366 + t378;
  t383 = -0.993925573253*t193;
  t385 = 1. + t383;
  t392 = t237 + t367;
  t581 = sin(var1(18));
  t565 = cos(var1(18));
  t587 = cos(var1(19));
  t594 = -1.*t587;
  t595 = 1. + t594;
  t597 = sin(var1(19));
  t634 = cos(var1(20));
  t635 = -1.*t634;
  t637 = 1. + t635;
  t641 = sin(var1(20));
  t669 = t565*t587;
  t670 = -1.*t581*t597;
  t672 = t669 + t670;
  t624 = t587*t581;
  t627 = t565*t597;
  t630 = t624 + t627;
  t687 = cos(var1(21));
  t688 = -1.*t687;
  t696 = 1. + t688;
  t699 = t634*t672;
  t700 = -1.*t630*t641;
  t708 = t699 + t700;
  t727 = sin(var1(21));
  t730 = -0.996943*t727;
  t716 = t634*t630;
  t720 = t672*t641;
  t721 = t716 + t720;
  t750 = -0.0004284921280000001*t696;
  t725 = 0.0004284921280000001*t696;
  t836 = 0.996943*t727;
  t567 = -1.*t565;
  t571 = 1. + t567;
  t596 = -0.00159*t595;
  t600 = -0.27068*t597;
  t606 = t596 + t600;
  t610 = -0.27068*t595;
  t616 = 0.00159*t597;
  t618 = t610 + t616;
  t640 = 0.01841*t637;
  t643 = -0.70544*t641;
  t647 = t640 + t643;
  t676 = -0.70544*t637;
  t678 = -0.01841*t641;
  t679 = t676 + t678;
  t697 = -0.999969365345*t696;
  t698 = 1. + t697;
  t877 = -1.*t587*t581;
  t878 = -1.*t565*t597;
  t880 = t877 + t878;
  t731 = t725 + t730;
  t895 = t634*t880;
  t896 = -1.*t672*t641;
  t898 = t895 + t896;
  t745 = -1.2096424700126054e-9*var1(21);
  t747 = -0.6934128581485427*t696;
  t752 = t750 + t730;
  t756 = -0.021877537552*t752;
  t757 = 0.005481192614*t696;
  t758 = -0.077936*t727;
  t760 = t757 + t758;
  t762 = -0.005534467322*t760;
  t768 = t745 + t747 + t756 + t762;
  t901 = t880*t641;
  t902 = t699 + t901;
  t771 = -0.07769774964800001*t696;
  t772 = -0.005498*t727;
  t778 = t771 + t772;
  t788 = -0.005481192614*t696;
  t789 = 0.077936*t727;
  t798 = t788 + t789;
  t820 = -1.7147089040178687e-8*var1(21);
  t822 = -0.021744644052735636*t696;
  t823 = 0.07769774964800001*t696;
  t824 = 0.005498*t727;
  t827 = t823 + t824;
  t833 = -0.005534467322*t827;
  t840 = t750 + t836;
  t842 = -0.6934341012630001*t840;
  t843 = t820 + t822 + t833 + t842;
  t847 = -0.993925573253*t696;
  t852 = 1. + t847;
  t860 = t725 + t836;
  p_output1(1)=-0.251201 + power(-0.09 - 1.*t113*t147 - 1.*t169*t180 + 0.588518*(t200*t218 + t229*t253) + 0.21*t27 - 0.124503*(t218*t283 + t229*t297) - 0.049*t34 - 1.*t218*t343 - 1.*t229*t380 - 0.045407*(t229*t385 + t218*t392) - 1.*t34*t54 - 1.*t21*t78,2) + power(-0.049 - 1.*t147*t169 + 0.049*t27 + 0.21*t34 - 1.*t180*t432 - 1.*t343*t445 - 1.*t380*t455 + 0.588518*(t200*t445 + t253*t455) - 0.124503*(t283*t445 + t297*t455) - 0.045407*(t392*t445 + t385*t455) - 1.*t21*t54 + t34*t78,2) + power(0.09 - 0.124503*(1. - 0.006104248100000001*t193) - 0.000033783761634830594*t193 + 0.6934341012630001*(t274 + t332) + 0.588518*(t272 + t338) + 0.021877537552*(t295 + t354) - 0.045407*(t290 + t355) + 2.1934241414728571e-7*var1(13),2);
  p_output1(2)=-0.251201 + power(-0.09 + 0.21*t571 - 0.049*t581 - 1.*t581*t606 - 1.*t565*t618 - 1.*t630*t647 - 1.*t672*t679 + 0.588518*(t698*t708 + t721*t731) - 1.*t708*t768 + 0.124503*(t721*t778 + t708*t798) - 1.*t721*t843 - 0.045407*(t721*t852 + t708*t860),2) + power(-0.049 + 0.049*t571 + 0.21*t581 - 1.*t565*t606 + t581*t618 - 1.*t647*t672 - 1.*t679*t880 - 1.*t768*t898 - 1.*t843*t902 + 0.588518*(t698*t898 + t731*t902) + 0.124503*(t798*t898 + t778*t902) - 0.045407*(t860*t898 + t852*t902),2) + power(-0.09 + 0.124503*(1. - 0.006104248100000001*t696) + 0.000033783761634830594*t696 + 0.588518*(t758 + t788) + 0.6934341012630001*(t757 + t789) + 0.021877537552*(t772 + t823) - 0.045407*(t771 + t824) - 2.1934241414728571e-7*var1(21),2);
  out = reshape(p_output1, 2, 1);
end